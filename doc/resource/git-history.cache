[
    {
        "commit": "f18f2d9991da29533ad8e9859074c4f39185420f",
        "date": "2022-01-03 08:43:55 -0500",
        "subject": "v2.37: TLS Server"
    },
    {
        "commit": "62fbee72ad319f92c9410ac8dbab2f81fe945a36",
        "date": "2022-01-01 10:50:16 -0500",
        "subject": "Update LICENSE.txt and PostgreSQL copyright for 2022."
    },
    {
        "commit": "d6ebf6e2d67331a838f53beda1c186c527b56a8e",
        "date": "2021-12-30 18:54:36 -0500",
        "subject": "Remove dead test code."
    },
    {
        "commit": "fccb7f7dd45c6c373d0cfa74b90d69ca483aa3af",
        "date": "2021-12-28 17:39:22 -0500",
        "subject": "Add release note regarding IANA approval of the default TLS port."
    },
    {
        "commit": "6a12458440168f13cb05d70f36ea54b1860e390c",
        "date": "2021-12-16 10:30:59 -0500",
        "subject": "Parse protocol/port in S3/Azure endpoints.",
        "body": "Utilize httpUrlNewParseP() to parse endpoint and port from the URL in the S3 and Azure helpers to avoid issues where protocol was not expected to be part of the URL."
    },
    {
        "commit": "f06101de77a980c7e4115762f2fc301280aa4127",
        "date": "2021-12-16 09:47:04 -0500",
        "subject": "Add TLS server documentation.",
        "body": "Add documentation and make the feature visible."
    },
    {
        "commit": "615bdff4030a31bfedfe7df04676e3948ec9c2c0",
        "date": "2021-12-14 14:53:41 -0500",
        "subject": "Fix socket leak on connection retries.",
        "body": "This leak was caused by the file descriptor variable getting clobbered after a long jump. Mark it as volatile to fix.\r\n\r\nTesting this is a bit complex because the issue only happens in optimized builds, if at all. Put the test into the performance suite, which is always optimized, until a better idea presents itself."
    },
    {
        "commit": "a73fe4eb966f9685f6e4179c397a10c1e7f15f19",
        "date": "2021-12-10 15:53:40 -0500",
        "subject": "Fix restore delta link mapping when path/file already exists.",
        "body": "If a path/file was remapped to a link using either --link-map or --link-all there would be no affect if the path/file already existed. If a link existed it would be properly updated and converting a link to a path/file also worked.\r\n\r\nThe issue happened during delta cleanup, which failed to check if the existing path/file had been remapped to a link.\r\n\r\nAdd checks for newly mapped path/file links and remove the old path/file we required."
    },
    {
        "commit": "19a7ec69debfe6587fcc1163451896590c96bf21",
        "date": "2021-12-10 15:04:55 -0500",
        "subject": "Close expect log file when unit test completes.",
        "body": "This did not cause any issues, but it is better to explicitly close open files."
    },
    {
        "commit": "c38e2d31709804eb4b9125a15ad84c8fc813f366",
        "date": "2021-12-08 15:00:19 -0500",
        "subject": "Add verb to HTTP error output.",
        "body": "This makes it easier to debug HTTP errors."
    },
    {
        "commit": "be4ac3923cb77873da298a30aca5d847b3c635af",
        "date": "2021-12-08 13:57:26 -0500",
        "subject": "Error when restore is unable to find a backup to match the time target.",
        "body": "This was previously a warning but the warning is easy to miss so a lot of time may be lost restoring and recovering a backup that will not hit the target.\r\n\r\nSince this is technically a breaking change, add an \"important note\" about the change to the release."
    },
    {
        "commit": "672330593789f07aaad90bbafcd2597cbc602686",
        "date": "2021-12-08 12:29:20 -0500",
        "subject": "Add warning when checkpoint_timeout exceeds db-timeout.",
        "body": "In the backup command, add a warning if start-fast is disabled and the PostgreSQL checkpoint_timeout is greater than db-timeout.\r\n\r\nIn such cases, we might timeout before the checkpoint occurs and the backup really starts."
    },
    {
        "commit": "bd2ba802db11c505ec69943fa81b2b379073fbf4",
        "date": "2021-12-08 10:16:41 -0500",
        "subject": "Check that clusters are alive and correctly configured during a backup.",
        "body": "Fail the backup if a cluster stops or the standby is promoted. Previously, shutting down the primary would cause an error but it was not detected until the end of the backup. Now the error will happen sooner and a promotion on the standby will also cause an error."
    },
    {
        "commit": "7b3ea883c7c010aafbeb14d150d073a113b703e4",
        "date": "2021-12-07 18:18:43 -0500",
        "subject": "Add SIGTERM and SIGHUP handling to TLS server.",
        "body": "SIGHUP allows the configuration to be reloaded. Note that the configuration will not be updated in child processes that have already started.\r\n\r\nSIGTERM terminates the server process gracefully and sends SIGTERM to all child processes. This also gives the tests an easy way to stop the server."
    },
    {
        "commit": "49145d72bac16498cdbf5eeb3cd6128ea0be0667",
        "date": "2021-12-07 09:21:07 -0500",
        "subject": "Add timeline and checkpoint checks to backup.",
        "body": "Add the following checks:\r\n\r\n* Checkpoint is updated in pg_control after pg_start_backup(). This helps ensure that PostgreSQL and pgBackRest have a consistent view of the storage and that PGDATA paths match.\r\n* Timeline of backup start WAL file matches pg_control. Hard to see how this one could get hit, but we have the power...\r\n* Standby is on the same timeline as the primary. If not, this standby is not following the primary.\r\n* Last standby checkpoint is not greater than the backup checkpoint. If so, this standby is not following the primary.\r\n\r\nThis also requires some additional plumbing to read/write timeline/checkpoint from pg_control and parse timelines from WAL filenames. There were some changes in the backup tests caused by the fact that pg_control now has different contents for each backup.\r\n\r\nThe check to ensure that the required checkpoint was reached on the standby should also be updated to use pg_control (it currently uses pg_control_checkpoint()), but that requires non-trivial changes to the test harness and will need to wait."
    },
    {
        "commit": "9c76056dd0d1d2b07a89646b087c5c8d36ab97f5",
        "date": "2021-11-30 16:21:15 -0500",
        "subject": "Add error type and message to CHECK() macro.",
        "body": "A CHECK() worked exactly like ASSERT() except that it was compiled into production code. However, over time many checks have been added that should not throw AssertError, which should be reserved for probable coding errors.\n\nAllow the error code to be specified so other error types can be thrown. Also add a human-readable message since many of these could be seen by users even when there is no coding error.\n\nUpdate coverage exceptions for CHECK() to match ASSERT() since all conditions will never be covered."
    },
    {
        "commit": "0895cfcdf7d3f15b8029f73ed62c6094d30724b3",
        "date": "2021-11-30 13:23:11 -0500",
        "subject": "Add HRN_PG_CONTROL_PUT() and HRN_PG_CONTROL_TIME().",
        "body": "These macros simplify management of pg_control test files.\n\nCentralize time updates for pg_control in the command/backup module. This caused some time updates in the logs.\n\nFinally, move the postgres module after the storage module so it can use storage macros."
    },
    {
        "commit": "01ac6b6cac86ea857e54a3b1c45077df1e128a75",
        "date": "2021-11-30 08:28:36 -0500",
        "subject": "Autogenerate test system identifiers.",
        "body": "hrnPgControlToBuffer() and hrnPgWalToBuffer() now generate the system id based on the version of Postgres. If a value less than 100 is specified for systemId then it will be added to the default system id so there can be multiple ids for a single version of PostgreSQL.\n\nAdd constants to represent version system ids in tests. These will eventually be auto-generated.\n\nThis changes some checksums and we no longer have big-endian tests systems, so X those checksums out so it is obvious they are no longer valid."
    },
    {
        "commit": "3f7409019df112ec50efb6c3db6f7780c9a63c87",
        "date": "2021-11-24 16:09:45 -0500",
        "subject": "Ensure ASSERT() macro is always available in test modules.",
        "body": "Tests that run without DEBUG for performance did not have ASSERT() and were using CHECK() instead.\n\nInstead ensure that the ASSERT() macro is always available in tests."
    },
    {
        "commit": "dcb4f09d8315e92c0877b589f3fa9b7f0fa65f93",
        "date": "2021-11-23 09:37:12 -0500",
        "subject": "Revert changes to backupFilePut() made in 1e77fc3d.",
        "body": "These changes were made obsolete by a3d7a23a."
    },
    {
        "commit": "7e35245dc3416238a84a43abbecdf976170dea91",
        "date": "2021-11-23 08:07:31 -0500",
        "subject": "Use ASSERT() or TEST_RESULT*() instead of CHECK() in test modules."
    },
    {
        "commit": "a3d7a23a9d90611a3d31947598fbea240b250710",
        "date": "2021-11-22 12:52:37 -0500",
        "subject": "Use infoBackupDataByLabel() to log backup size.",
        "body": "Eliminate summing and passing of copied files sizes for logging backup size.\r\n\r\nInstead, utilize infoBackupDataByLabel() to pull the backup size for the log message."
    },
    {
        "commit": "1a0560d363d28737befb8c222647783d4fc2ca29",
        "date": "2021-11-19 12:22:09 -0500",
        "subject": "Allow y/n arguments for boolean command-line options.",
        "body": "This allows boolean boolean command-line options to work like their config file equivalents.\r\n\r\nAt least for now this behavior will remain undocumented since all examples in the documentation will continue to use the standard syntax. The idea is that it will \"just work\" when options are copied out of config files rather than generating an error."
    },
    {
        "commit": "2d963ce9471808172f879916c3f3accc35f14d56",
        "date": "2021-11-18 17:23:11 -0500",
        "subject": "Rename server-start command to server."
    },
    {
        "commit": "1f14f45dfb0d1677a695719381cbd5a8a3c6c986",
        "date": "2021-11-18 16:18:10 -0500",
        "subject": "Check archive immediately after backup start.",
        "body": "Previously the archive was only checked at the end of the backup to ensure all WAL required to make the backup consistent was present. The problem was that if archiving was not functioning then the backup had to complete before the user found out, which could be a while if the database was large enough.\r\n\r\nAdd an archive check immediately after backup start so failures are reported earlier.\r\n\r\nThe trick is to determine which WAL to check. If the repo is new there may not be any WAL in it and pg_start_backup() will not switch the WAL segment if it is empty. These are both likely scenarios when setting up and/or testing pgBackRest.\r\n\r\nIf the WAL segment is switched by pg_start_backup(), then check the archive for the segment that was detected prior to backup start. This should be common on normal running clusters with regular activity. Note that this might not be the segment immediately prior to the backup start segment if WAL volume is high.\r\n\r\nIf pg_start_backup() did not switch the WAL then we can force a switch on PostgreSQL >= 9.3 by creating a restore point. In that case the WAL to check will be the backup start WAL. This is most likely to happen on idle systems, during testing, or immediately after a repo switch.\r\n\r\nAn advantage of this approach other than earlier notification is that the backup directory will not be created so no resume will be attempted on the next backup.\r\n\r\nNote that some additional churn was created in backup.c because the load of archive.info needs to be done earlier."
    },
    {
        "commit": "dea752477ab8e812cdbd717eb2091baf3f5d0906",
        "date": "2021-11-17 16:39:04 -0500",
        "subject": "Remove obsolete statement about future multi-repository support."
    },
    {
        "commit": "0949b4d35fdd04c55927eb6a107d881376dbe73c",
        "date": "2021-11-16 18:26:21 -0500",
        "subject": "Add linefeed and remove space."
    },
    {
        "commit": "809f0bbc638cdd95540e2257383147919f82e8f9",
        "date": "2021-11-16 11:34:53 -0500",
        "subject": "Add infoBackupLabelExists().",
        "body": "This is easier to read than using infoBackupDataByLabel() != NULL.\n\nIt also allows an assertion to be added to infoBackupDataByLabel() to ensure that a NULL return value is not used unsafely."
    },
    {
        "commit": "1e77fc3d75490b7a1b6a0b31be9298c995ec672f",
        "date": "2021-11-16 10:21:32 -0500",
        "subject": "Include backup_label and tablespace_map file sizes in log output.",
        "body": "In cases where they are returned by postgres, include backup_label and tablespace_map file sizes in the backup size value output in the log."
    },
    {
        "commit": "6b5322cdad7163d91b43d37d9d8eeaa39ac7f214",
        "date": "2021-11-16 09:27:15 -0500",
        "subject": "Add findutils package to RHEL 8 documentation container.",
        "body": "This package was dropped from the most recent Rocky Linux 8 image."
    },
    {
        "commit": "df89eff429e9b8fbc68d9e9895badf9719fd31d2",
        "date": "2021-11-15 16:53:41 -0500",
        "subject": "Fix typos and improve documentation for the tablespace-map-all option."
    },
    {
        "commit": "fcae9d35038d454c674921c65beb02b195981480",
        "date": "2021-11-15 16:42:46 -0500",
        "subject": "Fix parameter test logging in parseOptionIdxValue()."
    },
    {
        "commit": "b3a5f7a8e27768c445458e47dad626609814fbb7",
        "date": "2021-11-15 14:32:22 -0500",
        "subject": "Add tablespace_map file to command/backup test module.",
        "body": "The code worked fine but better to have explicit tests for this file."
    },
    {
        "commit": "e62ba8e85eaf469052960c4fd71ffaf26c1a1baa",
        "date": "2021-11-12 17:15:45 -0500",
        "subject": "Add path to pgbench used for stress test in user guide.",
        "body": "This allows the stress test to run on RHEL."
    },
    {
        "commit": "43cfa9cef776360e592882c0b787704dbeb36cb3",
        "date": "2021-11-10 12:14:41 -0500",
        "subject": "Revive archive performance test.",
        "body": "This test was lost due to a syntax issue in a58635ac.\n\nUpdate the test to use system() to better mimic what postgres does and add logging so pgBackRest timing can be determined."
    },
    {
        "commit": "dd96c29f963609fad38dac3349d7fa41e40722bb",
        "date": "2021-11-10 07:53:46 -0500",
        "subject": "Refactor postgres/client module with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02 to the postgres/client module."
    },
    {
        "commit": "afe77e76e0adf948138d797e227a6f4c7d47c2eb",
        "date": "2021-11-10 07:31:02 -0500",
        "subject": "Update contributor for 6e635764."
    },
    {
        "commit": "6e635764a66278d5a8c2b4d30b23063bc3923067",
        "date": "2021-11-09 13:24:56 -0500",
        "subject": "Match backup log size with size reported by info command.",
        "body": "Properly log the size of files copied during the backup, matching the backup size returned from the info command.\r\n\r\nIn the reference issue, the incremental backup after switchover logs the size of all files evaluated rather than only the size of the files copied in the backup."
    },
    {
        "commit": "d05d6b87142347cb4891304833db389dcf7f9a81",
        "date": "2021-11-08 09:39:58 -0500",
        "subject": "Do not delete manifests individually during stanza delete.",
        "body": "This appears to have been an attempt to not delete files that we don't recognize, but it only works in narrow cases and could leave the user is a position of not being able to complete the stanza delete without manual intervention. It seems better just to proceed with the delete, especially since the info files have already been removed.\n\nIn addition, deleting the manifests individually could be slow on object stores if there were a very large number of backups."
    },
    {
        "commit": "bb03b3f41942d0b781931092a76877ad309001ef",
        "date": "2021-11-04 09:44:31 -0400",
        "subject": "Refactor switch statements in strIdBitFromZN().",
        "body": "Coverity does not like fall-throughs either to or from the default case so refactor to avoid that."
    },
    {
        "commit": "676b9d95dd2467d4bddd402b5cd2b4f445c71944",
        "date": "2021-11-04 08:19:18 -0400",
        "subject": "Optional parameters for tlsClientNew().",
        "body": "There are a number of optional parameters with the same type so this makes them easier to track and reduces churn when new ones are added."
    },
    {
        "commit": "038abaa71d816cc87b382bd81d3df62ddec9455a",
        "date": "2021-11-03 15:23:08 -0400",
        "subject": "Display size option default and allowed values with appropriate units.",
        "body": "Size option default and allowed values were displayed in bytes, which was confusing for the user.\r\n\r\nThis also lays the groundwork for adding units to time options.\r\n\r\nMove option parsing functions into a common module so they can be used from the build module."
    },
    {
        "commit": "1b93a772369bbb3a936099e0d9d5cc79bad1e0f6",
        "date": "2021-11-03 12:14:17 -0400",
        "subject": "Use void * instead of List * to avoid Coverity false positives.",
        "body": "Coverity complains that this should be \"List\" but that is clearly not correct."
    },
    {
        "commit": "2a576477b316238473525e56bc8fc8ea5790455f",
        "date": "2021-11-03 11:36:34 -0400",
        "subject": "Add --cmd option.",
        "body": "Allows users to provide an executable to be used when pgbackrest generates command strings that expect to invoke pgbackrest. These generated commands are written to files by pgbackrest, e.g. recovery.conf."
    },
    {
        "commit": "c5b5b5880619d0994ab4a8feb3f60ab52170b61b",
        "date": "2021-11-03 10:36:31 -0400",
        "subject": "Simplify error handler.",
        "body": "The error handler used a loop to process try, catch, and finally blocks. This worked fine but static analysis tools like Coverity did not understand that the finally block would always run and so there were false positives about double-free, unfreed resource, etc.\r\n\r\nThis implementation removes the loop, which simplifies everything, and makes it clear that the finally block will always run. This cuts down on Coverity false positives.\r\n\r\nThis implementation also catches lack of coverage on empty catch blocks so a few test fixes were committed separately in d74fe7a.\r\n\r\nA small refactor in backup.c is required because gcc 10.3.1 on Fedora 33 complains that the reason variable may be used uninitialized. It's not clear why this is the case, but reducing the scope of the TRY block fixes the issue."
    },
    {
        "commit": "cff961ede7e41fa8035ffe7451a22eb5ea0e46c1",
        "date": "2021-11-03 07:38:06 -0400",
        "subject": "Centralize logic to build value lists during config rendering.",
        "body": "This reduces duplication and makes it easier to add new types."
    },
    {
        "commit": "7f6c513be925c77bc6a177408efcf79f624ffc94",
        "date": "2021-11-03 07:27:26 -0400",
        "subject": "Add StringId as an option type.",
        "body": "Rather the converting String to StringIds at runtime, store defaults in StringId format in parse.auto.c and convert user input to StringId during parsing."
    },
    {
        "commit": "b13844086d419dc3070bcce4e918b2353bf4887c",
        "date": "2021-11-01 17:35:19 -0400",
        "subject": "Use cfgOptionStrId() instead of cfgOptionStr() where appropriate.",
        "body": "The compress-type, repo-type and log-level-* options have allow lists, which means it is more efficient to treat them as StringIds.\r\n\r\nFor compress-type and log-level-* also update the functions that convert them to enums."
    },
    {
        "commit": "b237d0cd592bbc6c6ee9280fb7aed264bf79eb9d",
        "date": "2021-11-01 10:43:08 -0400",
        "subject": "Remove placeholder bz2 helper data.",
        "body": "This placeholder data should have been removed when bz2 support was added in a021c9fe053."
    },
    {
        "commit": "f4e281399a81835821547ea5c78ed7a189914d3d",
        "date": "2021-11-01 10:27:57 -0400",
        "subject": "Remove unused protocol log level.",
        "body": "This log level was used in the Perl code but was never ported to C."
    },
    {
        "commit": "bc352fa6a8cff7cc08b6c7f3cdfac664d2b0805f",
        "date": "2021-11-01 10:08:56 -0400",
        "subject": "Simplify strIdFrom*() functions.",
        "body": "The strIdFrom*() forced the caller to pick an encoding, which led to a number of TRY...CATCH blocks in the code. In practice the caller does not care which encoding is used as long as the string is valid for some encoding.\r\n\r\nUpdate the strIdFrom*() function to try all possible encodings and only throw an error when the string is not valid for any of them."
    },
    {
        "commit": "a92d7938197d1035e362390ce467ae827cbae051",
        "date": "2021-11-01 09:11:43 -0400",
        "subject": "Update automake version.",
        "body": "There were no changes to install.sh in this version."
    },
    {
        "commit": "904b897f5e89542784af64b364a49205e7a6e040",
        "date": "2021-11-01 09:03:42 -0400",
        "subject": "Begin v2.37 development."
    },
    {
        "commit": "42fd6ce4e09ee92614cfbfb6766d9c3a6ba9cc1a",
        "date": "2021-11-01 08:59:14 -0400",
        "subject": "v2.36: Minor Bug Fixes and Improvements"
    },
    {
        "commit": "6abb06248c2829f2c27a7a553d373b0fdf70cfc3",
        "date": "2021-10-29 11:45:50 -0400",
        "subject": "Make analytics optional for HTML documentation.",
        "body": "Analytics should only be added to the current HTML documentation on the website, so exclude them by default."
    },
    {
        "commit": "13366573261bf2562bc93ef77014f7d16b815e5b",
        "date": "2021-10-29 10:35:56 -0400",
        "subject": "Restore some linefeed rendering behavior from before def7d513.",
        "body": "The new rendering behavior is correct in normal cases, but for the pre-rendered HTML blocks in the command and configuration references it causes a lot of churn. This would be OK if the new HTML was diff-able, but it is not.\n\nGo back to the old behavior of using br tags for this case to reduce churn until a more permanent solution is found."
    },
    {
        "commit": "c32e000ab92e9e9e5495ddec7c4e347c35801570",
        "date": "2021-10-28 15:15:49 -0400",
        "subject": "Use Rocky Linux for documentation builds instead of CentOS.",
        "body": "Since CentOS 8 will be EOL at the end of the year it makes sense to do this now. The centos:8 image is still used in documentation.xml because changes there require manual testing, which will need to be done at a later date. The changes are not user-facing, however, and can be done at any time.\n\nAlso update CentOS references to RHEL since that is what we are emulating for testing purposes."
    },
    {
        "commit": "30c589ace7a459f3b3d09b702e314efd412e71d6",
        "date": "2021-10-28 13:28:49 -0400",
        "subject": "Fix typo in contributing guide.",
        "body": "Not sure how this got broken but it was probably an errant search and replace."
    },
    {
        "commit": "2f1a2877373c7be68d553c7f781299edaf8ff196",
        "date": "2021-10-28 11:49:00 -0400",
        "subject": "Add missing assert."
    },
    {
        "commit": "adc09ffc3bccb24c83a471c8af1f9bf68f2cf9c8",
        "date": "2021-10-28 08:10:43 -0400",
        "subject": "Minor fix for lower-casing of option summaries.",
        "body": "This works with existing cases and fixes \"I/O\"."
    },
    {
        "commit": "fa564ee1969229b5cf60d2479d8ace85325f4db3",
        "date": "2021-10-27 11:08:32 -0400",
        "subject": "Improve documentation for cmd-ssh, repo-host-cmd, pg-host-cmd options.",
        "body": "Use \"command\" instead of \"exe\" and make the descriptions more consistent."
    },
    {
        "commit": "e1f6c066b3da11fd21b1155c90370c3fa2da06b7",
        "date": "2021-10-27 10:52:39 -0400",
        "subject": "Improve documentation for buffer-size option."
    },
    {
        "commit": "1f7c7b7dda1c736fab2673084498fc7c220b742a",
        "date": "2021-10-26 16:56:44 -0400",
        "subject": "Fix test descriptions in common/typeVariantTest."
    },
    {
        "commit": "d74fe7a222c1e1ae0f02addbeb712f8946d3d731",
        "date": "2021-10-26 13:53:44 -0400",
        "subject": "Add coverage for empty CATCH() blocks.",
        "body": "Currently empty CATCH() blocks are always marked as covered because of the loop structure of error handling.\n\nA prototype implementation of error handling without looping has shown that these CATCH() blocks are not covered without new tests. Whether or not that prototype gets committed it is worth adding the tests."
    },
    {
        "commit": "e2eea974c144f77448aa9d5fbb55c933b70ea5ad",
        "date": "2021-10-26 12:09:41 -0400",
        "subject": "Add assertion for Coverity.",
        "body": "Coverity thinks this value might be NULL but that should not be possible because of the TRY...CATCH block."
    },
    {
        "commit": "4f10441574761c9cd4e31cdef750742e004ae669",
        "date": "2021-10-26 08:25:21 -0400",
        "subject": "Add missing paragraph tags in coding standards."
    },
    {
        "commit": "7fb99c59c88fe11c679d6ba7835f995a969462c0",
        "date": "2021-10-26 07:46:48 -0400",
        "subject": "Use externed instead of extern'd in comments.",
        "body": "This is mostly to revert some comment changes in b11ab9f7 that will break the ppc64le patch, but at the same time keep the spelling consistent in all comments and documentation.\n\nAlso revert some space changes for the same reason."
    },
    {
        "commit": "653ffcf8d98ebfe94ae44ed54b4a295428c57850",
        "date": "2021-10-25 15:42:28 -0400",
        "subject": "Adjustments for new breaking change in Azurite.",
        "body": "Azurite released another breaking change (see fbd018cd, 096829b3, c38d6926, and Azurite issue 1039) so make adjustments as needed to documentation and tests.\n\nAlso remove some dead code that hid the repo-storage-host option and was made obsolete by all these changes."
    },
    {
        "commit": "13d4559708819787ad05be6f37ec0badb0eccae5",
        "date": "2021-10-25 15:31:39 -0400",
        "subject": "Check return value of getsockopt().",
        "body": "Checking the return value is not terribly important here, but if setsockopt() fails it is likely that bind() will fail as well. May as well get it over with and this makes Coverity happy."
    },
    {
        "commit": "1152f7a7d64e69eed1d9e74b48a308f6c742c28a",
        "date": "2021-10-25 12:56:33 -0400",
        "subject": "Fix mismatched parameters in tlsClientNew() call.",
        "body": "3879bc69 added this call and the parameters were not quite right but in way that the compiler decided they were OK. It was mostly working but TLS verification was disabled if caPath was NULL, which is not OK."
    },
    {
        "commit": "a1a2284c881ba6c3b9b1c316b31e0583c006f1af",
        "date": "2021-10-25 09:01:22 -0400",
        "subject": "Fix typos in error messages."
    },
    {
        "commit": "3879bc69b888daa04d2ca98a2d1219cf22519ddc",
        "date": "2021-10-22 18:31:55 -0400",
        "subject": "Add WebIdentity authentication for AWS S3.",
        "body": "This allows credentials to be automatically acquired in an EKS environment."
    },
    {
        "commit": "51785739f44b624091246c48af6defe97c30d7a7",
        "date": "2021-10-22 18:02:20 -0400",
        "subject": "Store config values as a union instead of a variant.",
        "body": "The variants were needed to easily serialize configurations for the Perl code.\r\n\r\nUnions are more efficient and will allow us to add new types that are not supported by variants, e.g. StringId."
    },
    {
        "commit": "2cea005f740d640290a9948595f5933833e30e7d",
        "date": "2021-10-22 17:19:16 -0400",
        "subject": "Fix segfault on invalid GCS key file."
    },
    {
        "commit": "cb36fec102855bf268ec5234bbb5261be98bdc61",
        "date": "2021-10-21 17:48:00 -0400",
        "subject": "Add analytics to the HTML documentation."
    },
    {
        "commit": "a63e732987bc1f6f26514568dabc6c0b23df07ab",
        "date": "2021-10-21 17:25:32 -0400",
        "subject": "Fix indentation."
    },
    {
        "commit": "78e1bd333068c4a857054490698115fa2c698e0b",
        "date": "2021-10-21 17:10:00 -0400",
        "subject": "Move v1 documentation links out of the introduction.",
        "body": "There should be few if any users running v1 now so these links do not need to be so prominent."
    },
    {
        "commit": "861df2a73cafbd49049dccdc55d5214b00dd3cec",
        "date": "2021-10-21 17:02:46 -0400",
        "subject": "Add GitHub repository link to index.html and README.md."
    },
    {
        "commit": "1cb8ae15de5b4276682bdd9825ca97012cd43855",
        "date": "2021-10-21 13:51:59 -0400",
        "subject": "Fix incorrect host name in user guide.",
        "body": "The text indicates to populate the pg-primary IP address into the pg_hba.conf file to allow replication connections. It should indicate to populate the pg-standby IP address"
    },
    {
        "commit": "b11ab9f799aa6fc32dd03e96e8a0428d5c83d9ae",
        "date": "2021-10-21 13:31:22 -0400",
        "subject": "Fix typos."
    },
    {
        "commit": "8ad6b7330e1ee6bcbc0f06ec0562a433e7888f44",
        "date": "2021-10-21 09:20:40 -0400",
        "subject": "Fix outdated comment.",
        "body": "This check was moved from within the path checks at some point but the comment did not get updated."
    },
    {
        "commit": "fbd018cd56482efff425beb4026fe22482115138",
        "date": "2021-10-20 08:22:37 -0400",
        "subject": "Allow S3/Azure Docker images to be specified in user guide.",
        "body": "It is not uncommon for the S3/Azure emulators we use to introduce breaking changes without warning. If that happens the documentation can still be built by specifying a working version of the image. In general, it is better to let the version float so we know when things break.\n\nAzurite has yet another breaking change coming up (see 096829b3, c38d6926, and Azurite issue 1039) so set azure-image at the current version until the breaking change has been released."
    },
    {
        "commit": "5dfdd6dd5b7b43dc3a223b9552aed4052d0db3aa",
        "date": "2021-10-19 12:45:20 -0400",
        "subject": "Add -Werror -Wfatal-errors -g flags to configure --enable-test.",
        "body": "These flags are used for all tests but it was not possible to add them to configure before the change in 046d6643. This is especially important for adhoc tests to ensure the flags are not forgotten.\n\nRemove the flags from test make commands where they were being applied.\n\nThere is no change for production builds."
    },
    {
        "commit": "046d6643373859c5e848a97e06389ed2aa553723",
        "date": "2021-10-19 12:14:09 -0400",
        "subject": "Set most compiler flags as late as possible in configure.",
        "body": "Some flags, e.g. -Wfatal-errors, will cause tests in configure to behave incorrectly so we have not been able to add them to --enable-test.\n\nAdd the compiler flags as late as possible so configure checks are not affected. This will allow us to add flags that we need for testing without having to explicitly pass them to make."
    },
    {
        "commit": "e443e3c6c05c9d65a67dac0c8430b59239fbc1b8",
        "date": "2021-10-19 09:06:06 -0400",
        "subject": "Add br tags for HTML documentation rendering missed in def7d513."
    },
    {
        "commit": "4c2d89eb66e11017e2e73ad4171e4493c28acdad",
        "date": "2021-10-18 16:43:19 -0400",
        "subject": "Fix typos."
    },
    {
        "commit": "6cc8e45df68c299990c0ad1f40c53b9282cb46db",
        "date": "2021-10-18 14:45:36 -0400",
        "subject": "Add missing paragraph tag in user guide."
    },
    {
        "commit": "ccc255d3e05d8ce2b6ac251d1498f71b04098a86",
        "date": "2021-10-18 14:32:41 -0400",
        "subject": "Add TLS Server.",
        "body": "The TLS server is an alternative to using SSH for protocol connections to remote hosts.\n\nThis command is currently experimental and intended only for trial and testing. As such, the new commands and options will not show up in the command-line help unless directly requested."
    },
    {
        "commit": "09fb9393f14b47effebaecc449a97ad07ef4c752",
        "date": "2021-10-18 14:02:05 -0400",
        "subject": "Write command configuration overrides explicitly.",
        "body": "If not written explicitly then it is impossible to distinguish the override from a NULL, which indicates no override."
    },
    {
        "commit": "90f7f11a9f71152185219bbb57bf1de001e3a91b",
        "date": "2021-10-18 12:22:48 -0400",
        "subject": "Add missing static keywords in test modules."
    },
    {
        "commit": "4570c7e27528400373ece8dc7bd348baf3ff064e",
        "date": "2021-10-18 11:32:53 -0400",
        "subject": "Allow error buffer to be resized for testing.",
        "body": "Some tests can generate very large error messages for diffs and they often get cut off before the end.\n\nAlso fix a test so it does not create too large a buffer on the stack."
    },
    {
        "commit": "838ee3bd08c739e3dcf611e9bddfaa6c8acbb2aa",
        "date": "2021-10-18 11:05:53 -0400",
        "subject": "Increase some storage test timeouts.",
        "body": "32-bit Debian 9 is sometimes timing out on these tests so increase the timeouts to make the tests more reliable."
    },
    {
        "commit": "6b9e19d423d99d3063c4bff3d3533b1e5081e4cb",
        "date": "2021-10-16 12:35:47 -0400",
        "subject": "Convert configuration optional rules to pack format.",
        "body": "The previous format was custom for configuration parsing and was not as expressive as the pack format. An immediate benefit is that commands with the same optional rules are merged.\n\nDefaults are now represented correctly (not multiplied), which simplifies the option default functions used by help."
    },
    {
        "commit": "360cff94e4e9e1ab5a690a1f5c38eb278158a892",
        "date": "2021-10-16 12:33:31 -0400",
        "subject": "Update 32-bit test container to Debian 9.",
        "body": "Also rebalance PostgreSQL version integration tests."
    },
    {
        "commit": "0e84c19a9fde0480b30078f5d3b419267b2f7673",
        "date": "2021-10-15 17:50:54 -0400",
        "subject": "Remove allow range from pg-socket-path option.",
        "body": "The allow range was never processed because the string type does not allow ranges, but it is wasteful to have it in the parse rules.\n\nIt would be good if auto-generation errored on useless allow ranges, but that will need wait since it does not impact production."
    },
    {
        "commit": "144469b9772bad14466fcafc65edef58c5366755",
        "date": "2021-10-15 15:50:55 -0400",
        "subject": "Add const buffer functions to Pack type.",
        "body": "These allow packs to be created without allocating a buffer in the case that the buffer already exists or the data is in a global constant.\n\nAlso fix a rendering issue in hrnPackReadToStr()."
    },
    {
        "commit": "66bfd1327e56f0f2de99fc6009431f3ee06ad6b8",
        "date": "2021-10-13 19:48:41 -0400",
        "subject": "Rename SSH connection control parameters in integration tests."
    },
    {
        "commit": "447b24309d02938d04e036ec7814e75982210eb4",
        "date": "2021-10-13 19:43:40 -0400",
        "subject": "Update RHEL package URL."
    },
    {
        "commit": "01b20724daf4c5cb25d6f636fb90456759773d22",
        "date": "2021-10-13 19:36:59 -0400",
        "subject": "Rename PostgreSQL pid file constants and tests."
    },
    {
        "commit": "570162040864b8c56b236aa66d8f5c8d610b754b",
        "date": "2021-10-13 19:02:58 -0400",
        "subject": "Rename manifest file primary flag in tests."
    },
    {
        "commit": "a44f9e373b47354a09bec0eaf2f3bf9e261c6941",
        "date": "2021-10-13 13:21:04 -0400",
        "subject": "Update Vagrantfile to Ubuntu 20.04."
    },
    {
        "commit": "b16e827d69364408ea687a8e4b8894f7e889792e",
        "date": "2021-10-13 13:20:11 -0400",
        "subject": "Do not show output of PostgreSQL upgrade status check in user guide.",
        "body": "On some platforms the output may contain UTF-8 characters that the latex code is not prepared to handle.\n\nShowing the command is much more important than showing the output, so no big loss."
    },
    {
        "commit": "5e84645ac030544b572036c08d055885d96d8905",
        "date": "2021-10-13 12:16:47 -0400",
        "subject": "Update comments referring to the PostgreSQL primary."
    },
    {
        "commit": "430efff98a5b8dcf7c048f383abc12d9c0e5bbf0",
        "date": "2021-10-13 12:01:53 -0400",
        "subject": "Update documentation/links to main branch."
    },
    {
        "commit": "1212668d5eff51756b0719b5296f7640e8096605",
        "date": "2021-10-13 11:43:14 -0400",
        "subject": "Update contributing.xml with rendering changes from def7d513.",
        "body": "Also update help.xml path missed in f4e1babf."
    },
    {
        "commit": "90c73183ea5de6a63a23a9047ae2debb3f59b940",
        "date": "2021-10-13 09:37:03 -0400",
        "subject": "Add libc6-dbg required by updated valgrind to Vagrantfile/Dockerfile."
    },
    {
        "commit": "c2d4552b7328489d703dc03defa769b1ccb8f739",
        "date": "2021-10-13 08:51:58 -0400",
        "subject": "Add debug options to code generation make in test.pl."
    },
    {
        "commit": "bd91ebca759d2d6cfc2f7aa660366f5f7f09994a",
        "date": "2021-10-12 16:16:05 -0400",
        "subject": "Remove command overrides for output options.",
        "body": "The overrides are not needed since both commands require the same default and allow list."
    },
    {
        "commit": "e8e346bc8738815b07bd80a37ace862fdab3dc1d",
        "date": "2021-10-12 08:53:12 -0400",
        "subject": "Remove command overrides for restore-only options.",
        "body": "The overrides are not needed since these options are only valid for one command."
    },
    {
        "commit": "576b04763477877d4f2a61ad692703e20471901b",
        "date": "2021-10-11 16:25:36 -0400",
        "subject": "Invert required in set option to simplify generated rules."
    },
    {
        "commit": "980b777a4a0cc07200ccb06cc55b89181101b266",
        "date": "2021-10-09 12:39:54 -0400",
        "subject": "Fix indentation."
    },
    {
        "commit": "cc7f2eea900d0a7a429ffdc2cd45ead88c0298a9",
        "date": "2021-10-09 12:37:25 -0400",
        "subject": "Add assert in pckReadNext() to prevent reading into a field."
    },
    {
        "commit": "610bfd736ef091a8298e5602d41aba86f10189bb",
        "date": "2021-10-09 12:34:45 -0400",
        "subject": "Increase tolerance for 0ms sleep in common/time test."
    },
    {
        "commit": "7ab8dcbe6e007831e8a7f9f26e08f083c1026388",
        "date": "2021-10-09 12:15:19 -0400",
        "subject": "Read tag size in pckReadTagNext().",
        "body": "Rather than reading the size everywhere it is needed, get it when the tag is read, if it exists.\n\nThis simplifies logic around consuming the data when not needed. There are more use cases for this coming up."
    },
    {
        "commit": "ed68792e765411a994d8ac79e4d047bbafc25582",
        "date": "2021-10-07 19:57:28 -0400",
        "subject": "Rename strNewN() to strNewZN().",
        "body": "Make the function name consistent with other functions that accept zero-terminated strings, e.g. strNewZ() and strCatZN()."
    },
    {
        "commit": "b7e17d80ea02d70e56327828310c578af51795b5",
        "date": "2021-10-07 19:43:28 -0400",
        "subject": "More efficient memory allocation for Strings and String Variants.",
        "body": "The vast majority of Strings are never modified so for most cases allocate memory for the string with the object. This results in one allocation in most cases instead of two. Use strNew() if strCat*() functions are needed.\n\nUpdate varNewStr() in the same way since String Variants can never be modified. This results in one allocation in all cases instead of three. Also update varNewStrZ() to use STR() instead of strNewZ() to save two more allocations."
    },
    {
        "commit": "208641ac7fd22f676a55e7305b3e69df574f36f8",
        "date": "2021-10-07 18:50:56 -0400",
        "subject": "Use constant string for user/group in performance/type test.",
        "body": "It is not safe to return strings created with STRDEF() from a function."
    },
    {
        "commit": "74d3131830646c9f71ffa9847729cae40e3aa866",
        "date": "2021-10-07 14:58:11 -0400",
        "subject": "More efficient generation of diff/incr backup label."
    },
    {
        "commit": "498902e885c9d7a44648ccc01b20454094d5b742",
        "date": "2021-10-07 12:18:24 -0400",
        "subject": "Allow \"global\" as a stanza prefix.",
        "body": "A stanza name like global_stanza was not allowed because the code was not selective enough about how a global section should be formatted.\r\n\r\nUpdate the config parser to correctly recognize global sections."
    },
    {
        "commit": "338102861fd0ea4d2773b010dee34a39a96ad702",
        "date": "2021-10-07 11:01:48 -0400",
        "subject": "Improve instructions for rebuilding pgbackrest during stress testing."
    },
    {
        "commit": "fb3f6928c9aef499938e195fbb612c1940a2dc19",
        "date": "2021-10-06 19:27:04 -0400",
        "subject": "Add configurable storage helpers to create repository storage.",
        "body": "Remove the hardcoded storage helpers from storageRepoGet() except for the the built-in Posix helper and the special remote helper.\n\nThe goal is to make storage driver development a bit easier by isolating as much of the code as possible into the driver module. This also makes coverage reporting much simpler for additional drivers since they do not need to provide coverage for storage/helper.\n\nConsolidate the CIFS tests into the Posix tests since CIFS is just a special case of the Posix.\n\nTest all storage features in the Posix test so that other storage driver tests do not need to provide coverage for storage/storage.\n\nRemove some dead code in the storage/s3 test."
    },
    {
        "commit": "cfd823355af2ac99f30c5e1393a121c6dbf622b7",
        "date": "2021-10-06 12:38:56 -0400",
        "subject": "Refactor S3 storage driver for additional auth methods.",
        "body": "Currently only two auth methods are supported and a lot of refactoring is required to add a third one.\n\nDo the refactoring now to reduce noise in the commit that adds the third auth method."
    },
    {
        "commit": "68c5f3eaf18fc9bd10fde15a323890bcdcbf4534",
        "date": "2021-10-05 17:59:05 -0400",
        "subject": "Allow link-map option to create new links.",
        "body": "Currently link-map only allows links that exist in the backup manifest to be remapped to a new destination.\r\n\r\nAllow link-map to create a new link as long as a valid path/file from the backup is referenced."
    },
    {
        "commit": "f2aeb30fc706c04d6200cefeeb2645229a31ff69",
        "date": "2021-10-05 14:06:59 -0400",
        "subject": "Add state to ProtocolClient.",
        "body": "This is currently only useful for debugging, but in the future the state may be used for resetting the protocol when something goes wrong."
    },
    {
        "commit": "2c65fed80f47124283d4f8be92f987dc55237f48",
        "date": "2021-10-05 12:29:16 -0400",
        "subject": "Add missing asserts and move temp mem context block."
    },
    {
        "commit": "6af827cbb1e78cd4c5d649ed4cb24c49a7204b8f",
        "date": "2021-10-05 09:00:16 -0400",
        "subject": "Report original error and retries on local job failure.",
        "body": "The local process will retry jobs (e.g. backup file) but after a certain number of failures gives up. Previously, the last error was reported but generally the first error is far more valuable. The last error is likely to be a cascade failure such as the protocol being out of sync.\r\n\r\nReport the first error (and stack trace) and append the retry errors to the first error without stack trace information."
    },
    {
        "commit": "34f78734325743b4e34cb39224852e6debf49750",
        "date": "2021-10-04 13:45:53 -0400",
        "subject": "Report backup file validation errors in backup.info.",
        "body": "Currently errors found during the backup are only available in text output when specifying --set.\r\n\r\nAdd a flag to backup.info that is available in both the text and json output when --set is not specified. This at least provides the basic info that an error was found in the cluster during the backup, though details are still only available as described above."
    },
    {
        "commit": "57c62315465972f6b85558020198134e34cf2ee0",
        "date": "2021-10-02 17:27:33 -0400",
        "subject": "Add arm64 testing on Cirrus CI.",
        "body": "These tests run in a container without permissions to mount tempfs, so add an option to ci.pl to not create tempfs. Also add some packages not in the base image."
    },
    {
        "commit": "f1ed8f0e5112d1a74d86168e67632be55eddb416",
        "date": "2021-10-02 16:29:31 -0400",
        "subject": "Sort WAL segment names when reporting duplicates.",
        "body": "Make the output consistent even when files are listed in a different order. This is purely for testing purposes, but there is no harm in consistent output.\n\nFound on arm64."
    },
    {
        "commit": "71047a9d6d1eea71b3fbd430983541a54049cc69",
        "date": "2021-10-02 16:17:33 -0400",
        "subject": "Use strncpy() to limit characters copied to optionName.",
        "body": "Valgrind complained about uninitialized values on arm64 when comparing the reset prefix, probably because \"reset\" ended up being larger than the option name: Conditional jump or move depends on uninitialised value(s) at cfgParseOption (parse.c:568).\n\nCoverity complained because it could not verify the size of the string to be copied into optionName, probably because it does not understand the purpose of strSize(): You might overrun the 65-character fixed-size string \"optionName\" by copying the return value of \"strZ\" without checking the length.\n\nUse strncpy() even though we have already checked the size and make sure the string is terminated. Keep the size check because searching for truncated option names is not a good idea.\n\nThis is not a production bug since the code has not been released yet."
    },
    {
        "commit": "b792a14cd7dbdfb61362700ffc5fc01997db890c",
        "date": "2021-10-01 18:23:03 -0400",
        "subject": "Use temp mem context when calling command handlers.",
        "body": "It is safer and more efficient to free memory after each handler completes.\n\nThe db command handlers use the server context so update them to use the top context."
    },
    {
        "commit": "ae40ed6ec9cf77e577518b128518a5763767f589",
        "date": "2021-10-01 17:15:36 -0400",
        "subject": "Add jobRetry parameter to HRN_CFG_LOAD().",
        "body": "Allow the default of 0 to be overridden to test retry behavior for commands."
    },
    {
        "commit": "136d309dd4bc1ada9f3d775f036b62292fda390b",
        "date": "2021-10-01 15:29:31 -0400",
        "subject": "Allow stack trace to be specified for errorInternalThrow().",
        "body": "This allows the stack trace to be set when an error is received by the protocol, rather than appending it to the message. Now these errors will look no different than any other error and the stack trace will be reported in the same way.\n\nOne immediate benefit is that test.pl --vm-out --log-level-test=debug will work for tests that check expect log results. Previously, the test would error at the first check because the stack trace included in the message would not match the expected log output."
    },
    {
        "commit": "62f6fbe2a9ecd9bc48611ecfaf27a05b9f36a87d",
        "date": "2021-10-01 10:15:34 -0400",
        "subject": "Update file mode in info/manifest test to 0600.",
        "body": "0400 is not a very realistic mode. It may have become the default due to copy-pasting."
    },
    {
        "commit": "0690cb25a077735780b2fe24343c946f8a4efbc6",
        "date": "2021-09-30 17:55:38 -0400",
        "subject": "Remove repository format 6 notes.",
        "body": "The notes have been moved to a Github project."
    },
    {
        "commit": "376362475e3b3b13b70313d9002d4ff8b25b4b40",
        "date": "2021-09-30 16:15:45 -0400",
        "subject": "Move archive-header-check option to the archive reference section."
    },
    {
        "commit": "cf1a57518fe3230886509f59fcec9c9a81e6513c",
        "date": "2021-09-30 14:29:49 -0400",
        "subject": "Refactor restoreManifestMap() to be driven by link-map.",
        "body": "This will allow new links to be added in a future commit. The current implementation is driven by the links that already exist in the manifest, which would make the new use case more complex to implement.\n\nAlso, add a more helpful error when a tablespace link is specified."
    },
    {
        "commit": "d89a67776cfbb7b3047dbe297cc0c768e5c670e8",
        "date": "2021-09-30 13:39:29 -0400",
        "subject": "Refactor restoreManifestMap() tests in the command/restore unit.",
        "body": "Add test titles, new tests, and rearrange.\n\nAlso manifestTargetFindDefault(), which will soon be used by core code in a refactoring commit."
    },
    {
        "commit": "7a53ba7c7f38bff2c9ef99c6ab58d22c59dd2290",
        "date": "2021-09-30 13:28:14 -0400",
        "subject": "Add note to comment for int64 typedef."
    },
    {
        "commit": "815377cc6009c800b6a5fdc1fe98ddfceaaae824",
        "date": "2021-09-30 13:27:14 -0400",
        "subject": "Finalize catalog number for PostgreSQL 14 release."
    },
    {
        "commit": "baf186bfb05ca683714a59485900892f5e7e8a1b",
        "date": "2021-09-29 12:03:01 -0400",
        "subject": "Fix comment typos."
    },
    {
        "commit": "9e79f0e64b661e944ce2b3897c366feea1544ac2",
        "date": "2021-09-29 10:31:51 -0400",
        "subject": "Add recovery start time to online backup restore log.",
        "body": "This helps give an idea of how much recovery needs to be done to reach the end of the WAL stream and is easier to read than the backup label."
    },
    {
        "commit": "9346895f5b61627b50d431f09447e08d8a50caa8",
        "date": "2021-09-29 09:58:47 -0400",
        "subject": "Rename page checksum error to error list in info text output.",
        "body": "\"error list\" makes it clearer that other errors may be reported. For example, if checksum-page is true in the manifest but no checksum-page-error list is provided then the error is in alignment, i.e. the file size is not a multiple of the page size, with allowances made for a valid-looking partial page at the end of the file.\r\n\r\nIt is still not possible to differentiate between alignment and page checksum errors in the output but this will be addressed in a future commit."
    },
    {
        "commit": "b7ef12a76f219881d0b24c715592af96fe5c9b8f",
        "date": "2021-09-28 15:55:13 -0400",
        "subject": "Add hints to standby replay timeout message."
    },
    {
        "commit": "096829b3b257444162417662612e80d8cb2ac6ec",
        "date": "2021-09-27 09:01:53 -0400",
        "subject": "Add repo-azure-uri-style option.",
        "body": "Azurite introduced a breaking change in 8f63964e to use automatically host-style URIs when the endpoint appears to be a multipart hostname.\n\nThis option allows the user to configure which style URI will be used, but changing the endpoint might cause breakage if Azurite decides to use a different style. Future changes to Azurite may also cause breakage."
    },
    {
        "commit": "c8ea17c68f8fa72f2bf3b979539be3f709448493",
        "date": "2021-09-24 17:40:31 -0400",
        "subject": "Convert page checksum filter result to a pack.",
        "body": "The pack is both more compact and more efficient than a variant.\n\nAlso aggregate the page error info in the main process rather than in the filter to allow additional LSN filtering, to be added in a future commit."
    },
    {
        "commit": "ac1f6db4a25520b1ee957b66925dde2e1ef156ab",
        "date": "2021-09-23 14:06:00 -0400",
        "subject": "Centralize and optimize tag stack management.",
        "body": "The push and pop code was duplicated in four places, so centralize the code into pckTagStackPop() and pckTagStackPush().\n\nAlso create a default bottom item for the stack to avoid allocating a list if there will only ever be the default container, which is very common. This avoids the extra time and memory to allocate a list."
    },
    {
        "commit": "15e7ff10d3d6fe3570335a5abec5ff683c07e2e6",
        "date": "2021-09-23 08:31:32 -0400",
        "subject": "Add Pack pseudo-type.",
        "body": "Rather than working directly with Buffer types, define a new Pack pseudo-type that represents a Buffer containing a pack. This makes it clearer that a pack is being stored and allows stronger typing."
    },
    {
        "commit": "131ac0ab5e98500569d4ff6985d31c55a9ef53b9",
        "date": "2021-09-22 11:18:12 -0400",
        "subject": "Rename pckReadNew()/pckWriteNew() to pckReadNewIo()/pckWriteNewIo().",
        "body": "These names more accurately describe the purpose of the constructors."
    },
    {
        "commit": "0e76ccb5b7b2089f8d0300ab0086c454aebbbbbf",
        "date": "2021-09-22 10:48:21 -0400",
        "subject": "Convert filter param/result to Pack type.",
        "body": "The Pack type is more compact and flexible than the Variant type. The Pack type also allows binary data to be stored, which is useful for transferring the passphrase in the CipherBlock filter.\n\nThe primary purpose is to allow more (and more complex) result data to be returned efficiently from the PageChecksum filter. For now the PageChecksum filter still returns the original Variant. Converting the result data will be the subject of a future commit.\n\nAlso convert filter types to StringId."
    },
    {
        "commit": "802373cb9df28384529fe5a7bd102bfe5c8f3911",
        "date": "2021-09-21 10:16:16 -0400",
        "subject": "Limit valgrind error output to the first error.",
        "body": "Generally the first error is the only important error. The rest simply lead to a lot of scrolling."
    },
    {
        "commit": "473afce57bc7646c53bae4a6300b41b11b5b0357",
        "date": "2021-09-20 11:03:50 -0400",
        "subject": "Copy data page before verifying checksum.",
        "body": "Using UNCONSTIFY() is potentially dangerous since the buffer is modified while calculating the checksum, even though the page is reverted to the original state. Instead make a copy to ensure that the original data is never modified.\n\nThis requires the logic to be shuffled a bit since the copy cannot be made until we are sure the page is complete."
    },
    {
        "commit": "0efb8adb9452cb8bc67ebaa8b6dca0d4a69c1682",
        "date": "2021-09-19 20:38:51 -0400",
        "subject": "Automatically include all PostgreSQL version interface files."
    },
    {
        "commit": "95d814cf81b84d162f40717346c3ad0cb642f724",
        "date": "2021-09-19 20:32:27 -0400",
        "subject": "Specify size for helpData array."
    },
    {
        "commit": "912a498b0bcc988bd5ebaaa22198956d752251bd",
        "date": "2021-09-11 16:07:59 -0400",
        "subject": "Skip comments when rendering help output.",
        "body": "Comments should not appear in the help. They are simply notes on implementation."
    },
    {
        "commit": "c38d6926d6c9aa01b895a28e66fc0aa6965350a3",
        "date": "2021-09-09 08:48:45 -0400",
        "subject": "Revert Azurite version for testing to 3.14.0.",
        "body": "3.14.2 is causing breakage in the documentation. There is no obvious cause so for now just revert to the last working version."
    },
    {
        "commit": "f4e1babf6b4ce7087ace8221cac7cadb51488f0e",
        "date": "2021-09-08 18:16:06 -0400",
        "subject": "Migrate command-line help generation to C.",
        "body": "Command-line help is now generated at build time so it does not need to be committed. This reduces churn on commits that add configuration and/or update the help.\n\nSince churn is no longer an issue, help.auto.c is bzip2 compressed to save space in the binary.\n\nThe Perl config parser (Data.pm) has been moved to doc/lib since the Perl build path is no longer required.\n\nLikewise doc/xml/reference.xml has been moved to src/build/help/help.xml since it is required at build time."
    },
    {
        "commit": "def7d513cdd2d4579acf6e8c675a3d6f7da4f655",
        "date": "2021-09-08 17:35:45 -0400",
        "subject": "Eliminate linefeed formatting from documentation.",
        "body": "Linefeeds were originally used in the place of <p> tags to denote a paragraph. While much of the linefeed usage has been replaced over time, there were many places where it was still being used, especially in reference.xml. This made it difficult to get consistent formatting across different output types. In particular there were formatting issues in the command-line help because it is harder to audit than HTML or PDF.\n\nReplace linefeed formatting with proper <p> tags to make formatting more consistent.\n\nRemove double spaces in all text where <p> tags were added since it does not add churn.\n\nUpdate all <ul>/<ol>/<li> tags to the more general <list>/<list-item> tags.\n\nAdd a few missing periods."
    },
    {
        "commit": "245b0c048ae62eb174b534d156b7a00b1de19a53",
        "date": "2021-09-08 13:32:13 -0400",
        "subject": "Add initializer braces required by older versions of gcc."
    },
    {
        "commit": "38eeac48d617ec5d5f14a1cb612c9a8b721326d8",
        "date": "2021-09-03 10:39:30 -0400",
        "subject": "Remove invalid comment block."
    },
    {
        "commit": "1afea449e2f54e69f9f8f0d772a294fcf09e0d83",
        "date": "2021-09-02 13:26:21 -0400",
        "subject": "Build newer valgrind and move CA cert install in test containers.",
        "body": "The newer version of valgrind helps with some arm64 issues that have been fixed since the architecture has become more popular. Also add the valgrind builds to the Vagrantfile and Dockerfile.\n\nMove the CA cert install from the base container to the test container. This means the CA cert can be changed without rebuilding all the base containers."
    },
    {
        "commit": "475b57c89b58e9709a3eafd08fe9949b467a99cd",
        "date": "2021-09-01 11:10:35 -0400",
        "subject": "Allow additional memory to be allocated with a mem context.",
        "body": "The primary benefit is that objects can allocate memory for their struct with the context, which saves an additional allocation and makes it easier to read context/allocation dumps. Also, the memory context does not need to be stored with the object since it can be determined using the object pointer.\n\nObject pointers cannot be moved, so this means whatever additional memory is allocated cannot be resized. That makes the additional memory ideal for object structs, but not so much for allocating a list that might change size.\n\nMem contexts can no longer be reused since they will probably be the wrong size so their memory is freed on memContextFree(). This still means fewer allocations and frees overall.\n\nInterfaces still need to be freed by mem context so the old objMove() and objFree() have been preserved as objMoveContext() and objFreeContext(). This will be addressed in a future commit."
    },
    {
        "commit": "02b06aa4957cf3fe64ceb7a44cc1893bff12fe99",
        "date": "2021-08-31 12:09:50 -0400",
        "subject": "Increase max index allowed for pg/repo options to 256.",
        "body": "The prior limitations were based on using getopt_long() to parse command-line options, which required a static list of allowed options. Setting index max too high bloated the binary unacceptably. 45a4e80 replaced the functionality of getopt_long() but the static list remained.\r\n\r\nImprove cfgParseOption() to use available option data and remove the need for a static list. This also allows the option deprecations to be represented more compactly.\r\n\r\nIndex max is still capped at 256 because a large enough index could cause parseOptionIdxValue() to run out of memory since it allocates a static list based on the highest index found. If that function were improved with a map of found index values then index max could be set to UINT64_MAX.\r\n\r\nNote that deprecations no longer set an index max or define whether reset is valid. These were space-saving measures which are no longer required. This means that indexed deprecated options will also be valid up to 256 and always allow reset, but it doesn't seem worth additional code to limit this behavior.\r\n\r\ncfgParseOptionId() is no longer needed because calling cfgParseOption() with .ignoreMissingIndex = true duplicates the functionality of cfgParseOptionId(). This leads to some simplification in the help code."
    },
    {
        "commit": "8a4063c2b69919d1bba305d986568f529139eaa3",
        "date": "2021-08-27 06:41:56 -0400",
        "subject": "Add required header for Illumos."
    },
    {
        "commit": "5d857e196a6eeb2e1d137f2faf9001cccc066cfd",
        "date": "2021-08-25 07:33:31 -0400",
        "subject": "Do not use certs in container for testing.",
        "body": "The certs are available in test/certificate so it makes more sense to use them there. In addition the container does not need to be rebuilt unless the CA cert changes."
    },
    {
        "commit": "7b4d69211e64855f9ca0db0e4b2950a6492afa59",
        "date": "2021-08-23 16:09:14 -0400",
        "subject": "Add missing header."
    },
    {
        "commit": "beafdbfc1873902f4b17fbbc5f88e47d6344d113",
        "date": "2021-08-23 08:37:57 -0400",
        "subject": "Add const to memContextFreeing()/memContextName() parameters.",
        "body": "These functions do not modify the mem context so they can use const pointers."
    },
    {
        "commit": "726d04f13a2217b78e2cbef48ef4c889f15b5b68",
        "date": "2021-08-23 08:31:50 -0400",
        "subject": "Remove useless if in memContextFree().",
        "body": "If the upper bound of the loop is 0 then nothing will be done, making the if condition extraneous."
    },
    {
        "commit": "d72d4415a7c79296e3160aede9df59cd5d959694",
        "date": "2021-08-23 08:27:07 -0400",
        "subject": "Use contextParentIdx instead of a loop when moving a context.",
        "body": "contextParentIdx was introduced in 90709dfd to improve the performance of mem context frees. memContextMove() did not get the message, however, and continued to use a loop to find the mem context in the old parent.\n\nUse contextParentIdx to find the mem context in the old parent to avoid a loop."
    },
    {
        "commit": "8a9887f27cb46728e85801e075474928207e012f",
        "date": "2021-08-23 07:58:59 -0400",
        "subject": "Remove useless memFree() in regExpNew().",
        "body": "The MEM_CONTEXT_NEW*() block will automatically free memory if there is an error.\n\nThis code is pretty old so this may not have been true when it was written."
    },
    {
        "commit": "5ffb7cc77127a60de98e2d9080f27ed28bf95b4f",
        "date": "2021-08-23 07:14:22 -0400",
        "subject": "Update config.guess and config.sub to latest versions."
    },
    {
        "commit": "aee0e7bac746c5c68baee106d8d4809cf6d8edfd",
        "date": "2021-08-23 07:03:40 -0400",
        "subject": "Begin v2.36 development."
    },
    {
        "commit": "3787cf78032cb928f27044c13b6f50d57bf06d20",
        "date": "2021-08-23 06:52:51 -0400",
        "subject": "v2.35: Binary Protocol"
    },
    {
        "commit": "ad5e06399008118d81f41fb103ef2e980343899b",
        "date": "2021-08-19 17:25:57 -0400",
        "subject": "Update containers for new PostgreSQL releases.",
        "body": "Also add a package that is required for older Debian versions."
    },
    {
        "commit": "590e75996891ff1328a4a8f58bf833f4b34b6bf6",
        "date": "2021-08-19 11:57:37 -0400",
        "subject": "Rename stringz.h to stringZ.h.",
        "body": "This is more consistent with our file naming conventions."
    },
    {
        "commit": "0354144c900eb52d0fa9a9166704d225a968eab5",
        "date": "2021-08-19 11:35:49 -0400",
        "subject": "Add instructions for dev builds to stress test in user guide."
    },
    {
        "commit": "9b45df70573d54c3a1aa81848642460a9ddc5b28",
        "date": "2021-08-19 11:12:56 -0400",
        "subject": "Rearrange MemContext struct members to save space on 64-bit.",
        "body": "On 64-bit systems this saves a bit of space (10%) due to alignment. 32-bit systems see no benefit.\n\nAlso add tests for the individual struct sizes."
    },
    {
        "commit": "bab7a01f9971b7b45e384141f1777fc86853937e",
        "date": "2021-08-19 11:00:17 -0400",
        "subject": "Mark contextTop static.",
        "body": "This variable is not used outside of the memContext module so no need for it to be extern'd."
    },
    {
        "commit": "bb1ca1d3099db2ccb5cdd11a90a9d62ecabc009b",
        "date": "2021-08-18 13:32:16 -0400",
        "subject": "Change ASSERT() to CHECK() in infoLoad().",
        "body": "Coverity complains that \"Argument loaded of ASSERT() has a side effect because the variable is volatile. The containing function might work differently in a non-debug build.\"\n\nIt does not look like this is a real issue, but a CHECK() here is not too expensive for production so change it to silence Coverity.\n\nAlso fix a typo in the comment."
    },
    {
        "commit": "9ddfcd6a6de5cfd8acf1470216365d6951a692b8",
        "date": "2021-08-18 13:23:24 -0400",
        "subject": "Remove dead loop in verifyArchive().",
        "body": "This loop has been dead since the code was initially committed in ad79932b. It looks like it was used at one point but became dead when the enclosing if-else was added during development.\n\nFound by Coverity."
    },
    {
        "commit": "56ad42765311dd399b3b76025ac639c98bcd6027",
        "date": "2021-08-18 10:52:35 -0400",
        "subject": "Add variables for build paths in the user guide.",
        "body": "This eliminates repetition of the build path so it can be changed more easily.\n\nAlso create the build path explicitly rather than suggest that the user do it."
    },
    {
        "commit": "944a9e8ff10747a4d15187649fcc84308b7d0db9",
        "date": "2021-08-18 10:17:10 -0400",
        "subject": "Reduce memory requirements of stress test section in the user guide.",
        "body": "The standby memory was set to 1024mb in 86a651f9 to compensate for a memory leak in restore. The leak has been fixed (or at least mitigated) in e1e6e475 and 4fb6384f so the memory can be reduced to 512mb, the same as the primary."
    },
    {
        "commit": "d69a5963587136b91abb318aa56efc7249c14a64",
        "date": "2021-08-18 09:48:37 -0400",
        "subject": "Fix infinite loop in protocolServerProcess() on error.",
        "body": "The error was written to the client and then another command read. If the write did not fail then the loop would never exit.\n\nInstead exit on any error that is not raised by the command handler as we can pretty safely assume this is an unrecoverable protocol error. The command handler might throw a protocol error itself, but this should be caught in the next read or write in the main loop."
    },
    {
        "commit": "9a6afe3fc16fcb0685613308e47c19f6b11e7e35",
        "date": "2021-08-18 09:32:20 -0400",
        "subject": "Fix EOF behavior of ioReadSmall() to match ioRead().",
        "body": "If the buffer was not full at EOF then ioReadSmall() would get stuck in an infinite loop. Instead, return on EOF even if the buffer is not full.\n\nThis is not an issue in released versions since ioReadSmall() is not being used.\n\nAlso fix a comment typo."
    },
    {
        "commit": "4fb6384f10f6cd26c422ab9b24feb5ae0ebeeee9",
        "date": "2021-08-18 08:18:11 -0400",
        "subject": "Fix more memory leaks introduced by the binary protocol in 6a1c0337.",
        "body": "Either of these temp mem context blocks fixes the issue of command packs not being freed, but it seems like a good idea to have both in case the code changes."
    },
    {
        "commit": "e1e6e47535db09ea20b5f1826ea9e143ac8d614b",
        "date": "2021-08-18 08:07:41 -0400",
        "subject": "Add temp mem context reset blocks in job processing loops.",
        "body": "Restore definitely needed to be doing cleanup, just as backup does. The archive-get, archive-push, and verify loop did not seem to be a significant source of leaks but that could change in the future so add resets.\n\nAdd temp mem context blocks in the job callbacks where they were missing.\n\nAlso switch to the prior context when creating a job, if possible, to save a move."
    },
    {
        "commit": "eca2fc69589cd44f7c1a43206553984adde5cfb1",
        "date": "2021-08-12 12:38:07 -0400",
        "subject": "Update config/parse test to use standard patterns."
    },
    {
        "commit": "e17865a03a5451b82a101557d400ff223d104383",
        "date": "2021-08-12 11:57:17 -0400",
        "subject": "Update protocol/protocol test to use standard patterns."
    },
    {
        "commit": "86a651f9b03890af4f79076600e983bba624f8c5",
        "date": "2021-08-12 07:49:59 -0400",
        "subject": "Add optional stress test section to the user guide.",
        "body": "This is intended to provide pre-release stress-testing. Include container memory limits to help check for memory leaks.\n\nAlso add parallelism to make for faster builds."
    },
    {
        "commit": "a0bdfa436c9e1c2723be905ebe5cef7809a26244",
        "date": "2021-08-11 13:39:36 -0400",
        "subject": "Log backup file total and restore size/file total.",
        "body": "The backup size was a bit off because it did not include any files (e.g. backup_label, WAL files) that were added to the manifest after the main copy. To fix this move the log message to the very end of the backup.\r\n\r\nAdd size/file total log message to restore since it did not exist before."
    },
    {
        "commit": "6ab18dc0fa42885aea8eb9405ab0a943c2d49a71",
        "date": "2021-08-11 12:59:25 -0400",
        "subject": "Rearrange backup documentation in user guide.",
        "body": "Remove the \"Automatic Stop Option\" section since it only applies to PostgreSQL <= 9.6, which will soon be EOL. Since we no longer build the user guide for PostgreSQL < 10 this section was no longer being tested. The stop-auto option is still documented in the reference.\r\n\r\nMove the \"Fast Start Option\" to \"Quick Start - Perform Backup\". This is a commonly-used option so it makes sense to mention it earlier. This also makes the backups run more quickly. In the worst case, backups in \"Quick Start - Perform Backup\" could take minutes to start\r\n\r\nMove the \"Archive Timeout\" section to \"Quick Start - Perform Backup\" since it is the last section in \"Backup\"."
    },
    {
        "commit": "f716cb6f4f9765baa03f71b5563786d79d9f04a2",
        "date": "2021-08-10 14:22:38 -0400",
        "subject": "Fix use after free introduced by the binary protocol in 6a1c0337.",
        "body": "The user and group were stored in a temp reset mem context so they could get freed if there were enough files to trigger the reset in storageRemoteInfoList().\n\nAllocate user and group in a mem context provided by the caller to prevent them being freed prematurely."
    },
    {
        "commit": "6789ec420ed375663469efcd5957be8d3746efad",
        "date": "2021-08-10 10:37:37 -0400",
        "subject": "Add additional checks to performance/storage test.",
        "body": "The storageInfoList() test was broken by 54c4eb0c when the remote was changed to use writeable storage. Since the test driver was being injected into the wrong location, new default storage was created and the test effectively did nothing but still \"succeeded\".\n\nTo prevent this type of regression, add checks to ensure the expected test driver is being used and the callback runs the expected number of times."
    },
    {
        "commit": "0eae815ef4185bbf8bfa27856b531cc08db69d4b",
        "date": "2021-08-09 17:29:09 -0400",
        "subject": "Protect against mixed FUNCTION_TEST* and FUNCTION_LOG* macros.",
        "body": "If the macros are mixed then the debug stack may not be cleaned up correctly. Add variables to ensure that the macros cannot be mixed.\n\nFix cases where the macros were mixed and add one missing semicolon."
    },
    {
        "commit": "c8492aac41f29d8a0c29d7b70d1a5bf4b370965f",
        "date": "2021-08-09 17:11:39 -0400",
        "subject": "Cleanup inherited clients in protocol test harness.",
        "body": "Cleanup all clients inherited from the parent process so they cannot be accidentally used to send messages to servers that do not belong to this process.\n\nWe need to do this carefully so that exit commands are not sent and processes are not terminated, so clear the mem context callback on each object before freeing it."
    },
    {
        "commit": "71b654fc29497319862fe01c3917bbc353cc6dd9",
        "date": "2021-08-09 16:56:06 -0400",
        "subject": "Fix links and update child process example.",
        "body": "Removed colon from example titles to fix links, fixed test.yml link, and updated the example for the parent/child test process to use the latest macros instead of sleep()."
    },
    {
        "commit": "f653b59664e757a0e3da63cc8462deafe2d9e0ef",
        "date": "2021-08-09 16:35:48 -0400",
        "subject": "Update db/db test to use standard patterns."
    },
    {
        "commit": "2d5cbfc73142fa99df609aa23b64db5342e73c88",
        "date": "2021-08-09 09:28:17 -0400",
        "subject": "Fix memory leaks introduced by the binary protocol in 6a1c0337.",
        "body": "Additional buffers were being allocated for the protocol messages but not being freed.\n\nMost of the allocations were fairly harness, but storageRemoteOpenReadProtocol() and storageWriteRemote() were problematic because they were allocating (but not freeing) buffers equal to the transfer size of the file. Depending on compression, this could be a lot of memory. Though the memory was freed after each file transfer the aggregate of memory used during parallel processing could overwhelm systems with constrained memory.\n\nAlso allocate larger initial buffers in storageRemoteOpenReadProtocol() and storageWriteRemote() so a reallocation is not needed."
    },
    {
        "commit": "33775e53c9160b7ca41c8bcfbf28517f92aff841",
        "date": "2021-08-06 11:26:12 -0400",
        "subject": "Fix test added for lstComparatorZ() in 9abf6a27.",
        "body": "strcmp() returns < 0 and > 0 but these are not guaranteed to be -1 and 1."
    },
    {
        "commit": "06791284618e8840724caa5e65fa535ea0438b61",
        "date": "2021-08-06 09:48:55 -0400",
        "subject": "Add linefeeds around content even when not in pretty mode.",
        "body": "This makes the generated HTML much more readable in diffs because a single word change will not change a line with potentially many tags.\n\nThe output is now slightly larger because of the extra linefeeds."
    },
    {
        "commit": "935de1e7a06d60415c16cad137875b49346337c6",
        "date": "2021-08-05 14:29:26 -0400",
        "subject": "Only pass selected repo options to the remote.",
        "body": "Options for other repos can cause conflicts and should never be used. Each remote can address exactly one repo or pg cluster.\r\n\r\nAlso fix an outdated comment."
    },
    {
        "commit": "155ef85013088a1150a4c15b04af36420d06e9c3",
        "date": "2021-08-03 14:48:22 -0400",
        "subject": "Fix incorrect host names in user guide.",
        "body": "pg1 was incorrectly used instead of {[host-pg1]} which meant the wrong host name was displayed.\r\n\r\nAlso, the install block was installing packages to the build host no matter which host was specified."
    },
    {
        "commit": "07f0a5901f244ccd8f81a07dc95e45744d7e2a55",
        "date": "2021-08-03 11:48:58 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "74c0c44fc8f2ed04653f1486e421c5d5c9d1b0b0",
        "date": "2021-08-02 18:32:11 -0400",
        "subject": "Migrate error code generation to C.",
        "body": "Parse src/build/error.yaml and write to src/config/error.auto.h and src/config/error.auto.c."
    },
    {
        "commit": "aaa9136820d59d17fa81714d7fda56aa84ae31f3",
        "date": "2021-08-02 18:16:57 -0400",
        "subject": "Update error.yaml comment to remove Perl reference."
    },
    {
        "commit": "930fee3a0c94944242e5582a5d1c97908b049c81",
        "date": "2021-08-02 17:49:05 -0400",
        "subject": "Move bldStrId() into a C file.",
        "body": "This function was included in a header but not declared inline, so linker errors happened when the header was included into more than one file.\n\nBecause of the setjmp() in TRY_BEGIN() it can't be inlined so put it in a C file.\n\nAlso add some missing headers."
    },
    {
        "commit": "13de3615678290c820345eadf67cf4cedfaee222",
        "date": "2021-08-02 17:41:40 -0400",
        "subject": "Improve comments."
    },
    {
        "commit": "7542eadc9f073cbcb5e1cb1cb33fe451560bd31d",
        "date": "2021-08-02 14:48:31 -0400",
        "subject": "Increase timeouts in storage/remote test.",
        "body": "There have been intermittent failures on f33 (with coverage) but not on u16 (without coverage).\n\nReproducing this reliably has been very difficult, so just try increasing the timeouts. This is based on the observation that tests with coverage take longer than tests without, which may lead the f33 tests to fail if CI is running slower than usual.\n\nThis will not increase the runtime of the test unless there is an error."
    },
    {
        "commit": "4e71c077f1be9665ae7570a8a230e4735c4dd592",
        "date": "2021-08-02 10:00:42 -0400",
        "subject": "Clean src path in test.pl before attempting vpath builds.",
        "body": "If configure/make has been run in the src path it can conflict with tests, which may require different build options.\n\nAlso add a comment when rebuilding for code generation."
    },
    {
        "commit": "c192ec4561fa2f870152b31e034243862d2eed82",
        "date": "2021-08-02 08:52:49 -0400",
        "subject": "Fix rsync include list removed from test.pl in 9ee9b1fa.",
        "body": "This caused the include list to be ignored and all files to be rsync'd, which worked but took a much longer."
    },
    {
        "commit": "2dfca8a61f8305bb94afaf1791af37833e8b0795",
        "date": "2021-07-30 18:15:07 -0400",
        "subject": "Remove unused struct member noted in f3f0c64a.",
        "body": "This variable is used to build the final command role lists, but is not needed after parsing completes."
    },
    {
        "commit": "9abf6a2709e9c1a2cc1c246d8307fd2e2b3d566a",
        "date": "2021-07-30 18:08:04 -0400",
        "subject": "Add lstComparatorZ().",
        "body": "Works just like lstComparatorStr() but with zero-terminated strings."
    },
    {
        "commit": "8bca6946b4771a0d438fe1239ca8cc0a8604efca",
        "date": "2021-07-30 17:51:56 -0400",
        "subject": "Add line and column to build yaml error messages.",
        "body": "This makes it much easier to debug errors in the yaml files."
    },
    {
        "commit": "b47a07b8b9178d2241a9ae06d1a9732337554d21",
        "date": "2021-07-29 14:40:30 -0400",
        "subject": "Remove generated config.auto.c file.",
        "body": "This file duplicated the command list that already exists in parse.auto.c.\n\nCombine the data from config.auto.c into parse.auto.c and adjust the interface functions as needed. Quite a few were able to be moved to parse.c as static."
    },
    {
        "commit": "e32f9e146b11389e3d16feba9665360b73737d66",
        "date": "2021-07-29 11:09:51 -0400",
        "subject": "Add check for test path inside repo path.",
        "body": "If the test path is inside the repo path then it can cause strange issues during testing because the entire repo path is duplicated into the test path so that all tests see a consistent view of the repo.\r\n\r\nAnother solution might be to pick a better test path name and exclude it from the rsync, but this fix at least addresses the immediate issue."
    },
    {
        "commit": "58cc470b3eae5eeb956be6ce6e809e9110ca2dd8",
        "date": "2021-07-29 08:14:17 -0400",
        "subject": "Remove code made obsolete by f3f0c64a.",
        "body": "The code in DocExecute.pm appears to have been obsolete for a long time."
    },
    {
        "commit": "f3f0c64a78e2ac425567d792df204e493ad7bb20",
        "date": "2021-07-28 19:59:23 -0400",
        "subject": "Complete migration of config code generation to C.",
        "body": "This was started in c5ae047e but did not include generation of parse.auto.c.\n\nThe parser has also been improved with better errors and multiple passes to reduce dependency on ordering and produce and cleaner output.\n\nOption order resolution now includes cycle detection."
    },
    {
        "commit": "7517c5fef8bc43464acf961aded8d5ad3f20b52f",
        "date": "2021-07-28 18:53:10 -0400",
        "subject": "Fix miscalculation in time option command defaults.",
        "body": "These defaults were not getting the multiplier so the timeouts were much lower than expected.\n\nSince PostgreSQL retries get/push this was probably not a big deal, but it could be critical in the future for a different time value."
    },
    {
        "commit": "9f3c9496358a88d8ad44a0ff1e6dde265345a9c6",
        "date": "2021-07-27 14:49:43 -0400",
        "subject": "Updates to build/config/config.yaml.",
        "body": "Fix booleans that were set to y rather than true and defaults that were set to true instead of 1. Perl was tolerant of these but C is not.\n\nReorder repo-storage-verify-tls to satisfy inheritance ordering for the dependency."
    },
    {
        "commit": "8ca89fb41f85386666242f6c8fbc7d35db9b96ca",
        "date": "2021-07-26 14:38:55 -0400",
        "subject": "Use consistent separator comment spacing in parse.auto.c."
    },
    {
        "commit": "52d4574460455975e8929108080dc89bba6cbc7e",
        "date": "2021-07-26 12:02:31 -0400",
        "subject": "Automatically generate option value StringIds in make build-config.",
        "body": "Remove strIdGenerate() since bldStrId() performs the same function without cluttering the core code. Since bldStrId() is intended to work in non-debug builds, move the validity checks for input strings out of the DEBUG block.\n\nStringIds are generated as 5/6 bit, whichever is most efficient, for each option value. cfgOptionStrIdInternal() has been updated for this logic."
    },
    {
        "commit": "eeaab6a3d192fc788c0f74aadbf4b3de5da52531",
        "date": "2021-07-23 16:18:50 -0400",
        "subject": "Update config tests (except parse) to use standard patterns."
    },
    {
        "commit": "947c7a84cb37d09ab925785ca7670c970e32b8a3",
        "date": "2021-07-23 10:35:36 -0400",
        "subject": "Refactor cmdLocal()/cmdRemote() to accept a ProtocolServer object.",
        "body": "This allows a local/remote to be started independently of server initialization, which will be useful for implementing new transport types, e.g. TLS.\n\nAlso remove some dead code in localTest.c."
    },
    {
        "commit": "0999de0279fabf35af80396a9a8d35546ec02d53",
        "date": "2021-07-23 08:32:30 -0400",
        "subject": "Move noop from protocolClientNew() to local/remote initialization.",
        "body": "protocolServerNew() does not automatically process a noop so this made the handshake in the constructors asymmetric. This made testing a bit confusing since an extra noop was needed when cmdLocal()/cmdRemote() were not called (since they processed the noop sent by protocolClientNew()).\n\nThe extra noops also make complex protocol negotiation (coming in a future commit) more complicated and slower because of the additional round trips."
    },
    {
        "commit": "4c9ddf5ef25d0f441e20e918f57c1ec79218cfdb",
        "date": "2021-07-22 18:17:08 -0400",
        "subject": "Update storage tests to use standard patterns.",
        "body": "The storage tests were not modified to the HRN_STORAGE_* nor TEST_STORAGE_* macros as these test are testing the storage drivers.\r\n\r\nNote that posixTest.c removed an extraneous #endif // TEST_CONTAINER_REQUIRED and #ifdef TEST_CONTAINER_REQUIRED.\r\n\r\nThis PR includes all files in the storage/* test directory, namely: azureTest.c, cifsTest.c, gcsTest.c, posixTest.c, remoteTest.c, s3Test.c"
    },
    {
        "commit": "3a37482de90e132770bf76514baeef907f0c5d80",
        "date": "2021-07-22 15:54:30 -0400",
        "subject": "Update db test module error for newer libpq versions.",
        "body": "PostgreSQL 14 libpq throws a more detailed error, so adjust the regular expression to handle the old and the new errors."
    },
    {
        "commit": "eb98b8d2db94488a47df5727aff6d456869cbaae",
        "date": "2021-07-21 13:19:09 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "e3d05e2b4aa80149219b6d49a3136b34fa268127",
        "date": "2021-07-21 13:14:06 -0400",
        "subject": "Update contributing documentation and add pull request template."
    },
    {
        "commit": "46992acd800f7d4fed055a9236f536f2b0f1b0a7",
        "date": "2021-07-20 15:43:48 -0400",
        "subject": "Update Vagrantfile box version."
    },
    {
        "commit": "49925087644c76df005828eb27c24f503a09b20b",
        "date": "2021-07-20 13:30:17 -0400",
        "subject": "Update command/restore test to use standard patterns."
    },
    {
        "commit": "9ee9b1fad6fc5aa8f34b0b80d0a9aa8d7e166c40",
        "date": "2021-07-20 12:01:10 -0400",
        "subject": "Remove test.pl --smart, --dev, and --dev-test options.",
        "body": "--smart is now the default mode. Since --dev is now just an alias for --no-optimize, remove it. --dev-test has been a noop for a while, so this seems like a good time to remove it.\n\nAlso make the C auto-generator skip writing files that have not changed to avoid updating the timestamp."
    },
    {
        "commit": "1522cb4ed2c493739dfac797fd4cd20e94cbc5ec",
        "date": "2021-07-19 15:21:40 -0400",
        "subject": "Allow NULL path in HRN_STORAGE_PATH_REMOVE() macro.",
        "body": "Update command/backup test to pass NULL where appropriate."
    },
    {
        "commit": "a6cdf5b22f0eed53f33bbd84478af0542c81af7d",
        "date": "2021-07-19 10:47:49 -0400",
        "subject": "Update command/repo test to use standard patterns."
    },
    {
        "commit": "ebe5848494d4e37a9c86f1fafb5b3453c1f425a6",
        "date": "2021-07-19 09:51:11 -0400",
        "subject": "Update command/local and command/remote tests to use standard patterns.",
        "body": "Note that the logging output display of a parent/child test may look jumbled on some systems since the child and parent are attempting to log information at the same time. This is not an issue with the actual test, rather a harness issue that would be beyond the scope of this project to fix."
    },
    {
        "commit": "c5ae047e763f01a520286f9f4de7a85afba53942",
        "date": "2021-07-18 19:02:01 -0400",
        "subject": "Partial migration of config code generation to C.",
        "body": "Parse enough of config.yaml to auto-generate config.auto.h and config.auto.c.\n\nThis commit implements most of the infrastructure needed to migrate the rest of the build code to C, but each set of auto-generated files will present its own challenges.\n\nThe build is now dependent on libyaml. At this point there is no need for a hard requirement, but that will come soon so it seems better to add the dependency now."
    },
    {
        "commit": "18ffec72da7f44b08343310d2a3b72d11ed5f121",
        "date": "2021-07-18 18:31:43 -0400",
        "subject": "Update order of configuration options.",
        "body": "The upcoming C parser requires that options be in dependency order, i.e. inherited options must come before the options that inherit them.\n\nThis change has been separated to demonstrate that it does no affect the auto-generated code."
    },
    {
        "commit": "6397d735359b459a7c0c094226f266fe39234318",
        "date": "2021-07-18 17:29:20 -0400",
        "subject": "Update test container OS versions.",
        "body": "Update Ubuntu 12.04 to 16.04. Version 16.04 is recently EOL but testing on an old version is beneficial.\nUpdate Ubuntu 18.04 to 20.04.\nUpdate Fedora 32 to 33. Version 34 would have been preferred but there were some build issues, i.e. the default shell did not work with configure, and after ksh was installed configure locked up.\n\nAdd --no-install-recommends to apt-get commands to save a bit of time and space.\n\nUpdate test Dockerfile to run in multiple steps. This makes the container larger but also makes rebuilding after changes faster. The --squash option may be used to keep the container small.\n\nRemove obsolete casts in protocol/parallel module. These casts were included in the original migration because Ubuntu 12.04 32-bit gcc required them, but Ubuntu 16.04 32-bit gcc complains. There is no production issue here since at this point in the code the file descriptors are guaranteed to be >= 0."
    },
    {
        "commit": "81602f1593927d34f5a0f547e2a633ac224a4b3d",
        "date": "2021-07-17 11:09:53 -0400",
        "subject": "Remove test.pl --vm-host option.",
        "body": "This option was once used to optimize bin builds but has been defunct for some time."
    },
    {
        "commit": "d57299ada8e4e275ed3ee18ca4d7f6d264542154",
        "date": "2021-07-16 13:07:16 -0400",
        "subject": "Allow NULL path in TEST_STORAGE_LIST() macro."
    },
    {
        "commit": "117ffe88965fd60ce3dcb328e9d28503870af05a",
        "date": "2021-07-15 17:51:48 -0400",
        "subject": "Update command/help test to use standard patterns.",
        "body": "In the first test (helpRenderSplitSize) added test for empty list and in that and some other tests, the test comment was updated to clarify a bit more what the actual tests is trying to accomplish.\r\n\r\nNote that help test parameters can only use the harnessConfig system when testing option values that have been set since options passed to the help command are not \"set\" options."
    },
    {
        "commit": "4ad0bbda53b34688146f14d130cf0e53c8dd650f",
        "date": "2021-07-15 17:00:20 -0400",
        "subject": "Update command/backup tests to use standard patterns.",
        "body": "Includes backup and backupCommon tests.\r\n\r\nSome tests in backupTest were split out where they were originally combined into a single boolean check - which made it difficult to determine which part of the conditional failed.\r\n\r\nString values were also removed where they were no longer needed."
    },
    {
        "commit": "cdc89fc9759f1ac37938219b76c89e1c3a82ba0a",
        "date": "2021-07-15 16:05:32 -0400",
        "subject": "Allow NULL path in HRN_STORAGE_PATH_CREATE() macro."
    },
    {
        "commit": "25508a48e0d3b0a3eabc6d1fe858b9c3dc12dc86",
        "date": "2021-07-15 14:34:47 -0400",
        "subject": "Add contributors missed in 8e187cdb."
    },
    {
        "commit": "c0feca4673834867d9ea3dbd0434d02a77ed73db",
        "date": "2021-07-15 13:31:54 -0400",
        "subject": "Add noParentCreate parameter to HRN_STORAGE_PATH_CREATE() macro."
    },
    {
        "commit": "4a6ca54b47b3a56a96b2c92c6e7267fe24997ce9",
        "date": "2021-07-15 13:19:49 -0400",
        "subject": "Remove last vestiges of key replacement missed in b270253a."
    },
    {
        "commit": "563d117967ab9770f9f646c6186d0bc37121611f",
        "date": "2021-07-15 13:02:41 -0400",
        "subject": "Allow restore --type=lsn.",
        "body": "The LSN recovery target was added in PostgreSQL 10 but did not get added to pgBackRest."
    },
    {
        "commit": "8fac1ac50d28557d162fbb251fbbdcc3c9fb950c",
        "date": "2021-07-15 07:45:06 -0400",
        "subject": "Loop while waiting for checkpoint LSN to reach replay LSN.",
        "body": "It is possible for the checkpoint LSN to lag slightly behind the replay LSN until pg_control has been updated.\r\n\r\nAdd a loop to keep checking rather than failing when the checkpoint LSN has not been updated."
    },
    {
        "commit": "a6691c6f615f90195aeb6c1c6657a6afd79a10d3",
        "date": "2021-07-14 16:06:42 -0400",
        "subject": "Clarify restore --type behavior in command reference."
    },
    {
        "commit": "d791bb7298b3ef775f77ad79b28185e255037b09",
        "date": "2021-07-14 14:31:57 -0400",
        "subject": "Automatically create IoRead/IoWrite interfaces in HRN_FORK*() macros.",
        "body": "This removes a lot of boiler plate where every instance needs to create these interfaces.\n\nAlso add HRN_FORK_*_NOTIFY*() macros to standardize synchronizing between the parent and child processes.\n\nIn both cases update the tests with the new macros."
    },
    {
        "commit": "be7b8a485b8f36751347e370c7221c40f0e686fd",
        "date": "2021-07-13 14:28:58 -0400",
        "subject": "Error in TEST_STORAGE_LIST() when path does not exist."
    },
    {
        "commit": "1ace1ac938ca555273c150fd3d3b402d75e74ce0",
        "date": "2021-07-13 14:22:53 -0400",
        "subject": "Improve HRN_FORK*() macros.",
        "body": "Simplify HRN_FORK_CHILD_BEGIN() by adding optional parameters with the common defaults.\n\nAdd _FD() to macros that retrieve file descriptors to make their purpose clearer."
    },
    {
        "commit": "76cfbf833d113d6251fb8ffe76239d580dcaf947",
        "date": "2021-07-13 11:58:23 -0400",
        "subject": "Rename HARNESS_FORK*() macros to HRN_FORK*().",
        "body": "This matches the new pattern for harness macro naming and is shorter."
    },
    {
        "commit": "d6797009f8e316e5dc778d42db609f7bd81225ee",
        "date": "2021-07-13 11:13:57 -0400",
        "subject": "Add ioFdReadNewOpen() and ioFdWriteNewOpen().",
        "body": "These functions construct and open in one call, which allows them to be used as function parameters."
    },
    {
        "commit": "f70ddc16d7a12a41f3b757424b73d1f244400d16",
        "date": "2021-07-13 07:09:55 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "26dd9188568481815e0e47f19c2acd32d79d9f84",
        "date": "2021-07-12 15:36:52 -0400",
        "subject": "Add compressType parameter to TEST_STORAGE_GET() macro.",
        "body": "Also remove duplicate extension output in HRN_STORAGE_PUT()."
    },
    {
        "commit": "f2ec4e00a4c4c388a8f1b094381fd566a3dc9aa7",
        "date": "2021-07-09 15:59:17 -0400",
        "subject": "Add cipher parameters to TEST_STORAGE_GET() macro."
    },
    {
        "commit": "3c8819e10f9eff89195566e7e02f349373f5c4c7",
        "date": "2021-07-09 14:16:10 -0400",
        "subject": "Add CodeQL static code analysis.",
        "body": "Also fix some minor issues identified, specifically using gmtime_r()/localtime_r() vs gmtime()/localtime()."
    },
    {
        "commit": "849ab343aa10d66fbbd27cad407eff981c186d06",
        "date": "2021-07-09 13:50:35 -0400",
        "subject": "Change level of backup/restore copied file logging to detail.",
        "body": "The log level for copied files in the backup/restore commands has been changed to detail. This makes the info log level less noisy but if these messages are required then set the log level for the backup/restore commands to detail."
    },
    {
        "commit": "a7a041e2412b598ccc01c37123dd6dc13d46cae9",
        "date": "2021-07-09 11:18:45 -0400",
        "subject": "Fix flapping coverage in storage/remote test.",
        "body": "The protocol does not put an end message on exit so there was a race between the main process exiting and the remote processes exiting. If the main process exited first then the remote processes might not write coverage data causing coverage to fail.\n\nFix by calling exit explicitly at the end of the test and update the harness to put an end message so the exits are synchronized."
    },
    {
        "commit": "3369440eef7eb67062de6d0c150f999b342f49b3",
        "date": "2021-07-09 09:07:41 -0400",
        "subject": "Make pgControlFromBuffer() static.",
        "body": "This function is no longer used externally."
    },
    {
        "commit": "8bb0b28455d59ef884eab7ab25a91f988adbab81",
        "date": "2021-07-08 16:34:11 -0400",
        "subject": "Update command/control and command/command tests to use standard patterns.",
        "body": "In the commandTest the HRN_STORAGE_REMOVE replacement uses .errorOnMissing when the code being tested added the file. The reason for this is 3 fold:\r\n\r\n1. to ensure that an inadvertent typo in the path/file name does not go undetected,\r\n2. to ensure that nothing else has removed the file prior to the call, and\r\n3. consistency\r\n\r\nAlso, added \"stanza\" to comment when a stanza stop file is removed vs an \"all\" stop file."
    },
    {
        "commit": "8e1807cdbe08a6e059ff79220247cf4b3c058979",
        "date": "2021-07-08 13:06:52 -0400",
        "subject": "Detect errors in S3 multi-part upload finalize.",
        "body": "Multi-part upload may fail despite returning an HTTP success code. Check for the ETag field in the result and if not present consider the upload to have failed. This will trigger a retry at the local job level."
    },
    {
        "commit": "43b874628c86ec4fe297dbd5cab5bd3f62b8639b",
        "date": "2021-07-08 11:30:23 -0400",
        "subject": "Fix detection of circular symlinks.",
        "body": "Links were followed before they were checked for validity so a circular link would send the manifest build into endless recursion leading to a crash. Fix by moving the recursion after the link check.\r\n\r\nNote that this issue has existed since the C migration and was not introduced by the refactor in eba013b."
    },
    {
        "commit": "683933563333f39852676eb44110e7eab91b63fb",
        "date": "2021-07-08 11:17:13 -0400",
        "subject": "Increase harness log level to detail in command/backup test.",
        "body": "Also clean up some unneeded calls to harnessLogLevelReset()."
    },
    {
        "commit": "056a3070e0dba299389c7b5049878d40dd91ec9a",
        "date": "2021-07-08 10:33:19 -0400",
        "subject": "Automatically create data directory on restore.",
        "body": "Data directory creation was added during the C migration, but creation of the base data directory (PGDATA) was prevented by a check migrated from Perl.\r\n\r\nRemove the check and update tests to create the data directory at least once."
    },
    {
        "commit": "34e51ee7b6968d254e0b8c6a0970764ca5cdaa42",
        "date": "2021-07-08 09:25:42 -0400",
        "subject": "Allow NULL path in HRN_STORAGE_MODE() macro."
    },
    {
        "commit": "62e8d97af03e7628d5710b17aad1cc31f83d7e69",
        "date": "2021-07-02 12:22:11 -0400",
        "subject": "Update command/archive tests to use standard patterns.",
        "body": "Includes archiveCommon, archiveGet and archivePush.\r\n\r\nAlso fixed a test that was looking in repo instead of repo3 in the original archivePush to use the repo3 path as stated by the comment (line 879 in original tests and line 855 in new tests)."
    },
    {
        "commit": "23bdc3deb62a622713064df3b0777110ebba8723",
        "date": "2021-07-01 11:50:03 -0400",
        "subject": "Fix documentation and comment typos.",
        "body": "Identified using `ag -l | igor`."
    },
    {
        "commit": "6a90d469094ee2697ae4c932349756a54136799d",
        "date": "2021-06-30 08:51:11 -0400",
        "subject": "Update info/manifest test to use standard patterns."
    },
    {
        "commit": "39c1c1012013f456e951fc149b0f88cbc5dcbcc0",
        "date": "2021-06-28 13:28:28 -0400",
        "subject": "Remove TEST_PATH_REPO, TEST_PATH_PG, and TEST_PATH_SPOOL constants.",
        "body": "It seems better to use TEST_PATH in combination with a constant string rather than have a number of different path constants. This improves readability and reduces confusion about which constant should be used."
    },
    {
        "commit": "c6208113bfce9d637ca3fd0b35ab28a819c1a83e",
        "date": "2021-06-28 12:14:26 -0400",
        "subject": "Add timeModified parameter to HRN_STORAGE_PUT() macro."
    },
    {
        "commit": "065a8c8454d2acdd72c0c71a24d6b8bc09669e18",
        "date": "2021-06-28 10:58:27 -0400",
        "subject": "Replace defines with string constants in unit tests.",
        "body": "For tests already updated as part of the macro-replacement effort, the output tests (TEST_ERROR, TEST_RESULT_LOG, TEST_STORAGE_LIST and TEST_RESULT_STR) have been simplified for readability to remove all but the TEST_PATH constants. The ongoing macro-replacement effort will include these changes.\r\n\r\nUpdated: expireTest, stanzaTest, checkTest, infoTest, verifyTest (infoArchive and infoBackup had no changes)."
    },
    {
        "commit": "fb2d111dcd75021313a64a348959482339bf7f2a",
        "date": "2021-06-24 16:11:14 -0400",
        "subject": "Update info/infoBackup test to use standard patterns."
    },
    {
        "commit": "d0f3a3f2af3f66c899ded98b62695547fd267081",
        "date": "2021-06-24 14:01:03 -0400",
        "subject": "Add HRN_STORAGE_COPY() macro."
    },
    {
        "commit": "50c129ae9d161aba080a0d2d1b012e6358ac3e40",
        "date": "2021-06-24 13:57:55 -0400",
        "subject": "Add expression parameter to TEST_STORAGE_LIST() macro."
    },
    {
        "commit": "6a1c0337ddee9900dda58b7d2fa74d82c0586ed2",
        "date": "2021-06-24 13:31:16 -0400",
        "subject": "Binary protocol.",
        "body": "Switch from JSON-based to binary protocol for communicating with local and remote process. The pack type is used to implement the binary protocol.\r\n\r\nThere are a number advantages:\r\n\r\n* The pack type is more compact than JSON and are more efficient to render/parse.\r\n* Packs are more strictly typed than JSON.\r\n* Each protocol message is written entirely within ProtocolServer/ProtocolClient so is less likely to get interrupted by an error and leave the protocol in a bad state.\r\n* There is no limit on message size. Previously this was limited by buffer size without a custom implementation, as was done for read/writing files.\r\n\r\nSome cruft from the Perl days was removed, specifically allowing NULL messages and stack traces. This is no longer possible in C.\r\n\r\nThere is room for improvement here, in particular locking down the allowed sequence of protocol messages and building a state machine to enforce it. This will be useful for resetting the protocol when it gets in a bad state."
    },
    {
        "commit": "bffb43ea3fe00f445a2fc3c44a07f105cee65b4b",
        "date": "2021-06-24 12:23:09 -0400",
        "subject": "Update command/check test to use standard patterns."
    },
    {
        "commit": "17c9ed0ef0380fb14fba9a5299b6618ca8c92c2e",
        "date": "2021-06-24 08:55:44 -0400",
        "subject": "Update command/info test to use standard patterns.",
        "body": "Some tests had to be reordered or updated, as follows:\r\n\r\n* Reordered tests at line 317 and 331 to avoid unnecessary file removal.\r\n\r\n* Change \"stanza found\" test at line 1735 to reflect real-life scenario. Originally this test had the cipher-pass environment key set up which caused the RepoGrp to be 2 but with no valid repo path. This resulted in the repo loops executing for the repo2 but since the path was not defined, the tests just reported \"none\" for cipher which is incorrect since the repo IS encrypted.\r\n\r\n* Moved order of HRN_CFG_LOAD in some tests when able to avoid using storageTest."
    },
    {
        "commit": "ff95eddc369597c76a9ea70ffbada493ed4d1951",
        "date": "2021-06-23 18:09:46 -0400",
        "subject": "Update command/verify test to use standard patterns."
    },
    {
        "commit": "8dd882badee76b038dc8b494a1112eb3e18ef678",
        "date": "2021-06-23 16:20:47 -0400",
        "subject": "Update info/infoArchive test to use standard patterns."
    },
    {
        "commit": "e697f5705a04ef431aa93d63764b12ff98d696c6",
        "date": "2021-06-23 13:02:19 -0400",
        "subject": "Clear error when a CATCH() block finishes.",
        "body": "It is better to clear errors after the catch block completes rather than leave them set until the next error. This also make is possible to tell when a error is currently being handled, which a function further down the stack might use to modify its behavior. Currently this is only useful in testing, but clearing the error seems like a good idea in general.\r\n\r\nTwo places used errors outside the CATCH() block. Mem context cleanup now uses a FINALLY() which is a better implementation anyway. The error handling in main() now calls exitSafe() from withing the CATCH() block."
    },
    {
        "commit": "7ba5aef7633fde709eafdfa7b6fed736493250c0",
        "date": "2021-06-23 12:07:19 -0400",
        "subject": "Add mode parameter to HRN_STORAGE_PUT() macro."
    },
    {
        "commit": "03021c6a17f1374e84ef42614fa1dd2a6be4b64d",
        "date": "2021-06-14 13:28:27 -0400",
        "subject": "Update command/stanza test to use standard patterns.",
        "body": "No core code changes; only changes for stanza-create, stanza-upgrade, and stanza-delete command unit tests."
    },
    {
        "commit": "80d63a5e8bc6e5e6d6e4d75b349a44f2aac70954",
        "date": "2021-06-12 18:00:59 -0400",
        "subject": "Ignore mismatched close requests in the pq shim during error processing."
    },
    {
        "commit": "fba043717935babe084ebd8e9e1b7352dc9ff679",
        "date": "2021-06-12 17:48:35 -0400",
        "subject": "Improve error handling in db test module.",
        "body": "Errors could cause segfaults since server objects were freed immediately but client destructors were run much later."
    },
    {
        "commit": "0a65e59b5591718e46a4c331fa5301c41d49155d",
        "date": "2021-06-11 19:16:25 -0400",
        "subject": "Update pg-path options in db test module to be valid.",
        "body": "This allows files to be saved in the paths, which would have failed when they were invalid."
    },
    {
        "commit": "97155bad860010514f06d651ef8103355b346ab8",
        "date": "2021-06-10 12:40:55 -0400",
        "subject": "Add mode, Pack, and StringId to the Pack type.",
        "body": "Add StringList, which is not a primitive type but rather an array of String types.\n\nAlso update pckWriteToLog() to work after pckWriteEnd(), i.e. this->tagStackTop is NULL."
    },
    {
        "commit": "85a55bd40181bad943e224619fc936b046b2c8c1",
        "date": "2021-06-10 09:25:57 -0400",
        "subject": "Add pckReadMove() and pckWriteMove().",
        "body": "Move a PackRead or PackWrite object to a new mem context.\n\nAlso note that these functions may not work as expected with pack objects created by pckReadNewBuf() and pckWriteNewBuf() since the pack object does not have ownership of the passed buffer and cannot move it."
    },
    {
        "commit": "788f7c1f30408b6eb3148cb288b67838e6cb718b",
        "date": "2021-06-10 09:24:42 -0400",
        "subject": "Skip sleep in sleepMSec() when sleep time is zero.",
        "body": "There is no point in sleeping when there is no sleep time.\n\nThe advantage is that callers do not need to perform the check themselves."
    },
    {
        "commit": "5e1a8e6895ec59005a3974ac63ecbbc6832d5244",
        "date": "2021-06-10 09:21:15 -0400",
        "subject": "Add error test harness/shim.",
        "body": "The hrnErrorThrowP() macro allows errors with specified fields to be generated, which simplifies testing.\n\nUpdate the common/exit test to use the new macro."
    },
    {
        "commit": "c5897007c4cb420c1e4111c9f9c14e1e706ec5e9",
        "date": "2021-06-09 12:41:23 -0400",
        "subject": "Add HRN_STORAGE_MOVE() macro.",
        "body": "Update command/expire test to show how it is used."
    },
    {
        "commit": "15dfbf4c1d2fd33daa1a89a644683e80eeae4194",
        "date": "2021-06-09 12:28:40 -0400",
        "subject": "Use lower-case names from Azure identifiers in integration tests.",
        "body": "Azurite, which is used for testing, did not enforce this before so the capital letters were not a problem. Now Azurite enforces the same rules as Azure so use lower-case identifiers instead.\n\nThese names were only used in integration tests so there was no production impact."
    },
    {
        "commit": "c6a8528e3158de3e4ccdba00c7af6d47cc28d073",
        "date": "2021-06-08 14:51:23 -0400",
        "subject": "Add optional remove to TEST_STORAGE_EXISTS().",
        "body": "This allows TEST_STORAGE_EXISTS() to be used in most cases where TEST_STORAGE_REMOVE() was used before.\n\nRename TEST_STORAGE_REMOVE() to HRN_STORAGE_REMOVE() now that is is no longer used as a test. Still allow an error when the file is missing just to help keep tests tidy."
    },
    {
        "commit": "4a075b725287aafe12bb2add89ae4b224dafe2bc",
        "date": "2021-06-08 12:55:00 -0400",
        "subject": "Add support for more Pack types.",
        "body": "Since the pack type was stored in 4 bits, only 15 values were allowed (0 was reserved).\r\n\r\nAllow virtually unlimited types by storing type info in a base-128 encoded integer following the tag when the type bits in the tag are set to 0xF.\r\n\r\nAlso separate the type IDs used in the pack (PackTypeMap) from those presented to the user (PackType). The prior PackType enum exposed implementation details to the user, e.g. pckTypeUnknown."
    },
    {
        "commit": "3f9fbc3c24eab48e7ae2871484ea01273049e601",
        "date": "2021-06-08 11:00:28 -0400",
        "subject": "Update command/expire test to use standard patterns.",
        "body": "The way tests are written has evolved over time. Update the command/expire test to use the new test patterns."
    },
    {
        "commit": "12f81f8933b31d528a04b3640f407c9ff7ce9c45",
        "date": "2021-06-08 09:56:24 -0400",
        "subject": "Fix comments.",
        "body": "The extern'd function should not have duplicated the comment in the header. The static helper needed a comment."
    },
    {
        "commit": "4ccb42bb7a84d17bd708b1a4c117037738ef1f6f",
        "date": "2021-06-08 08:44:10 -0400",
        "subject": "Rename param structs to match function names.",
        "body": "The functions were named with short integer representations (e.g. I32) but the param structs were using longer ones, e.g. UInt32. Shorten the integer representations in the param structs to match.\n\nAlso rename pckReadUInt64Internal() to pckReadU64Internal() for the same reason."
    },
    {
        "commit": "df8276f59f4271a80bcf4f0ca13089864d9b95cb",
        "date": "2021-06-07 11:53:25 -0400",
        "subject": "Switch order of remote startup in storage/remote test.",
        "body": "The pg storage must be started before the repo storage to set the max remotes allowed to 2. The protocol helper expects all remotes to have the same type so we are cheating here a bit, but without this ordering the second remote will never be sent an explicit exit and may not save coverage data."
    },
    {
        "commit": "a76cb57c80026e713886bc3205e9ef60fd1e4070",
        "date": "2021-06-07 08:48:09 -0400",
        "subject": "Remove parse.auto.h.",
        "body": "At one time there was a lot more in this header but it got merged with the enums and constants in config.auto.c, leaving only the ConfigOptionType enum.\n\nAuto-generating the ConfigOptionType enum is not very useful since new option types require code in parse.c."
    },
    {
        "commit": "7a449f0e49df4c03bad8a2c468a3fd5adb1e5732",
        "date": "2021-06-07 08:18:02 -0400",
        "subject": "Remove unused command string constants."
    },
    {
        "commit": "a607750be1775fa9f74164f8d3768536b86387f6",
        "date": "2021-06-07 07:46:51 -0400",
        "subject": "Handle NULL VariantList in JSON.",
        "body": "This worked if the Variant was NULL but not if the Variant contained a NULL."
    },
    {
        "commit": "aaca4df983e280f8b2357ba923496f4618c72713",
        "date": "2021-06-07 07:36:56 -0400",
        "subject": "Update config.guess and config.sub to latest versions."
    },
    {
        "commit": "a7b1d2b9d00014172edd963229ca4d40a3855da7",
        "date": "2021-06-07 07:32:34 -0400",
        "subject": "Begin v2.35 development."
    },
    {
        "commit": "d10a99d73b772f221807024abbf61fdc5ca3a800",
        "date": "2021-06-07 06:51:08 -0400",
        "subject": "v2.34: PostgreSQL 14 Support"
    },
    {
        "commit": "c9a8ff27f2468dd769bfe8829b16e68d64357efb",
        "date": "2021-06-02 11:46:54 -0400",
        "subject": "Add HRN_STORAGE_PATH_REMOVE() macro.",
        "body": "Update command/archive-push test to show how it is used."
    },
    {
        "commit": "a97fc6e708b67fcf32aec85d312fd3ff5e7d93aa",
        "date": "2021-06-01 17:10:15 -0400",
        "subject": "Add storage/remote test for unknown user/group name."
    },
    {
        "commit": "d35315aaf99be7492b7712cda7922f54ccdd924f",
        "date": "2021-06-01 15:33:07 -0400",
        "subject": "Add missing parameter log debug."
    },
    {
        "commit": "8250990afb06e0bfb74d2f9ece19338127060b94",
        "date": "2021-06-01 09:03:44 -0400",
        "subject": "Replace harnessCfgLoad*() functions with HRN_CFG_LOAD() macro.",
        "body": "HRN_CFG_LOAD() handles the majority of test configuration loads and has various options for special cases.\n\nIt was not clear when to use harnessCfgLoadRaw() vs harnessCfgLoad(). Now \"raw\" functionality is granular and enabled by parameters, e.g. noStd."
    },
    {
        "commit": "c1277677a3e595a169f3bec7e1da31e8431f2f71",
        "date": "2021-05-28 15:23:18 -0400",
        "subject": "Add HRN_STORAGE_PATH_CREATE() macro.",
        "body": "Update command/archive-get test to show how it is used.\n\nAlso move one path create that was much earlier than it needed to be."
    },
    {
        "commit": "c8427682eafd8d38403818464711d63086dafc35",
        "date": "2021-05-28 14:39:43 -0400",
        "subject": "Improve storage harness/test macros.",
        "body": "Make the macros more consistent in format and make sure that each macro outputs a line number before doing any work so when errors happen it is clear where they happened.\n\nAdd noRecurse option to TEST_STORAGE_LIST().\n\nAdd comment option to all storage macros."
    },
    {
        "commit": "0a43be018347292a2d5e7ec68bbde595604bd104",
        "date": "2021-05-28 13:08:41 -0400",
        "subject": "Use L to denote line numbers in test output.",
        "body": "The lower-case l was too easy to confuse with a 1."
    },
    {
        "commit": "cfe8e5191039b63915f459f9f2cead7aab6b594d",
        "date": "2021-05-28 08:50:28 -0400",
        "subject": "Remove line parameter from hrnTestResultBegin().",
        "body": "Instead store the line number in hrnTestLogPrefix() so it doesn't need to be passed to hrnTestResultBegin().\n\nAlso add missing linefeed in hrnStorageList()."
    },
    {
        "commit": "b3ac9e8010e225542fe4cb584e42a53adcba9d22",
        "date": "2021-05-28 08:03:22 -0400",
        "subject": "Remove unused padding parameter from hrnTestLogPrefix().",
        "body": "Also add fflush() so log prefix is displayed immediately."
    },
    {
        "commit": "52217f12445dd05cb828ed2f8cd19be2ad8759fd",
        "date": "2021-05-27 16:50:18 -0400",
        "subject": "Replace storageTest with storagePg*() in command/archive-get test.",
        "body": "All instances of storageTest are better represented with storagePg*(), which allows TEST_PATH and TEST_PATH_PG to be omitted.\n\nAlso remove some headers which are no longer needed."
    },
    {
        "commit": "aceb956815a87f0c19ea171de25d2c3842a6d806",
        "date": "2021-05-27 08:03:44 -0400",
        "subject": "Change archive expiration logging from detail to info level.",
        "body": "To assist with issue debugging, removal of files during archive expiration has been changed from detail level logging to info level."
    },
    {
        "commit": "5b332b22b508d896abb64fa6abe26c78c83a29bc",
        "date": "2021-05-26 13:07:18 -0400",
        "subject": "Add repo-retention-history option to expire backup history.",
        "body": "The default is to keep all backup history to match the current behavior. In minimal configuration (0 days), unexpired backups are always kept in history.\r\n\r\nWhen a full backup manifest expires, all dependent differential/incremental manifests expire as well."
    },
    {
        "commit": "a69a6c2f5579a55624763592ce9d8d7e92dc55f0",
        "date": "2021-05-26 12:41:15 -0400",
        "subject": "Show diff when test.pl --gen-check detects unexpected autogeneration.",
        "body": "This will help track down autogeneration issues if they can't be reproduced locally."
    },
    {
        "commit": "ba351e9c5ce475831de2aa22cc2b9afa8714a21d",
        "date": "2021-05-26 12:38:23 -0400",
        "subject": "Refactor storage/remote unit test using the protocol remote shim.",
        "body": "Using the local process shim improves coverage and simplifies the tests."
    },
    {
        "commit": "58369c02df39ac9916d5de42d2df9ad509c33b6f",
        "date": "2021-05-25 18:16:59 -0400",
        "subject": "Add remote process shim.",
        "body": "Run the remote process inside a forked child process instead of exec'ing it. This allows coverage to accumulate in the remote process rather than needing to test the remote protocol functions directly, resulting in better end-to-end testing and less test duplication. Another advantage is that the pgbackrest binary does not need to be built for the test and the test does not need to run in a container."
    },
    {
        "commit": "441c000b5c3d8a4dfe67616d2a281c58184ef3ea",
        "date": "2021-05-25 18:09:29 -0400",
        "subject": "Factor remote process exec out of protocolRemoteGet().",
        "body": "This allows protocolRemoteExec() to be shimmed, which means the remote can be run as a child of the test process, simplifying coverage testing.\n\nThe shim does not need SSH parameters, so also split those out into a separate function and update the tests to match."
    },
    {
        "commit": "e1bc1b3e5321c585ed4e2162c28a5f881b1b9342",
        "date": "2021-05-25 17:48:42 -0400",
        "subject": "Set buffer-size in the configuration test harness.",
        "body": "Most tests can set buffer-size as needed, but local/remote process shims are forked, so the best way to set buffer-size is via the configuration."
    },
    {
        "commit": "cd88f8232950f1d6939c0642fa784c2d8a2110d6",
        "date": "2021-05-25 11:08:51 -0400",
        "subject": "Move protocol test module before config module.",
        "body": "The protocol module should be tested before modules that have a dependency on it."
    },
    {
        "commit": "6732806d89ded2969fbf31d85c51e35c2d6f8345",
        "date": "2021-05-25 11:06:05 -0400",
        "subject": "Add local process shim to archive-get/archive-push unit tests.",
        "body": "Use the local process shim introduced in ef63750e in the archive-get/archive-push unit tests."
    },
    {
        "commit": "d55b9471a89163ed362c64960316c292e51cdd8e",
        "date": "2021-05-25 11:00:24 -0400",
        "subject": "Protocol shim improvements.",
        "body": "Add executable to parameter list to avoid first option being lost. The backup, restore, and verify tests worked OK with their first option being defaulted because it ended up being job-retry which worked fine as the default.\n\nAdd hrnProtocolLocalShimUninstall() allow the shim to be uninstalled.\n\nLog shim at debug level to make it obvious in the logs when a shim is in use."
    },
    {
        "commit": "55f52955a5da07e4ebee312c493759fa9dd3f566",
        "date": "2021-05-24 17:45:31 -0400",
        "subject": "Fix shims with more than one function.",
        "body": "Each subsequent function would double every line in the C module.\n\nMove the loop to detect shimmed functions down to prevent this issues."
    },
    {
        "commit": "2452c4d5a4c230b8e3c33d3bddf69e56dfbec284",
        "date": "2021-05-24 17:17:03 -0400",
        "subject": "Add PostgreSQL 14 support.",
        "body": "There are no code changes from PostgreSQL 13 so simply add the new version.\r\n\r\nAdd CATALOG_VERSION_NO_MAX to allow the catalog version to \"float\" during the PostgreSQL beta/rc period so new pgBackRest versions are not required when the catalog version changes.\r\n\r\nUpdate the integration tests to handle new PostgreSQL startup messages."
    },
    {
        "commit": "eba013b49b850e53d59795ac6358fcb3381048a3",
        "date": "2021-05-24 16:29:36 -0400",
        "subject": "Fix issue when checking links for large numbers of tablespaces.",
        "body": "manifestLinkCheck() was pretty inefficient so large numbers of links caused it to use a lot of memory and eventually crash. This is a more efficient implementation which runs O(nlogn) and uses far less memory.\r\n\r\nChecking for duplicate file links has been added, which represents a change in behavior, but hopefully a good one."
    },
    {
        "commit": "ccac75e7de8754b39bb691ff8830a2839ea7a285",
        "date": "2021-05-24 16:03:15 -0400",
        "subject": "Consolidate RHEL/CentOS user guide into a single document.",
        "body": "The user guide was split primarily to provide documentation for the stop-auto option in PostgreSQL <= 9.5. Now that 9.5 is EOL there does not seem to be a good reason to generate an extra user guide. The stop-auto function is still documented in the reference.\r\n\r\nLeave the stop-auto documentation in the user guide in case we want to manually generate documentation for older versions.\r\n\r\nAlso rename centos to rhel for most identifiers since that is the core platform we are building for, similar to how we label 'debian' builds even though we generally use Ubuntu. With CentOS set to become an upstream for RHEL later this year, we'll likely need to pick a new test distribution, perhaps Rocky Linux if that gets off the ground."
    },
    {
        "commit": "f6303152f5f4b9ee538f4378797c9bf8f81bb3c8",
        "date": "2021-05-24 12:40:27 -0400",
        "subject": "Minor fixes for command/archive-get unit test.",
        "body": "Test and remove WAL segment 000000010000000100000002 in the test where it is created rather than as a byproduct of a much later test.\n\nRemove incorrect local role from test. It worked, but was not the correct command role to be using when calling cmdArchiveGet().\n\nMove some harness headers down to the correct section."
    },
    {
        "commit": "e5e0b2119634847f624c824929f5e4af24da9c02",
        "date": "2021-05-22 15:07:18 -0400",
        "subject": "Replace system() in tests with HRN_SYSTEM*()."
    },
    {
        "commit": "bd40156c223837e3130ef9041ab7baf44570b362",
        "date": "2021-05-22 14:22:51 -0400",
        "subject": "Rename TEST_SYSTEM*() to HRN_SYSTEM*().",
        "body": "These calls are not tests, rather they setup data for tests."
    },
    {
        "commit": "73885f8c2e3a1ac234cce85684e81db961ad6d47",
        "date": "2021-05-22 14:09:45 -0400",
        "subject": "Replace hrnLogResult() with TEST_RESULT_LOG/_FMT().",
        "body": "The macros provide more information when there is an error and may be updated in the future without changing the test code."
    },
    {
        "commit": "6baad5cdd1f73771e6f87d788769ba658c52ff80",
        "date": "2021-05-22 11:59:43 -0400",
        "subject": "Replace TEST_ERROR_FMT() with TEST_ERROR() where possible.",
        "body": "Some calls did not need TEST_ERROR_FMT() at all and others could be converted by replacing parameters with available defines, e.g. TEST_PATH."
    },
    {
        "commit": "a4f057bb70ca79c8b57ab5418f1b0cc65d3ae521",
        "date": "2021-05-22 11:28:56 -0400",
        "subject": "Remove comment formatting from TEST_*() macros.",
        "body": "Comment formatting was not used much but it incurred a heavy cost in each macro to process possible formatting.\n\nRemove formatted comments where they did not contain valuable information and replace with strZ(strNewFmt()) otherwise."
    },
    {
        "commit": "b270253a69cd44682e94e9cbfcf68f2dce4058a4",
        "date": "2021-05-22 09:30:54 -0400",
        "subject": "Add defines for many test*() getter functions.",
        "body": "A define was already added for TEST_PATH but it was not widely used. Replace all occurrences of testPath() with TEST_PATH in the tests.\n\nReplace testUser() with TEST_USER, testGroup() with TEST_GROUP, testRepoPath() with HRN_PATH_REPO, testDataPath() with HRN_PATH, testProjectExe() with TEST_PROJECT_EXE, and testScale() with TEST_SCALE.\n\nReplace {[path]}, {[user]}, {[group]}, etc. with defines and remove hrnReplaceKey(). This is better than having two ways to deal with replacements.\n\nIn some cases the original test*() getters were kept because they are used by the harness, which does not have access to the new defines. Move them to harnessTest.intern.h to indicate that the tests should no longer use them."
    },
    {
        "commit": "aed3d468a1557474eba4a24854732fc09581b265",
        "date": "2021-05-21 17:36:43 -0400",
        "subject": "Rename strNew() to strNewZ() and add parameter-less strNew().",
        "body": "Replace all instances of strNew(\"\") with strNew() and use strNewZ() for non-empty zero-terminated strings. Besides saving a useless parameter, this will allow smarter memory allocation in a future commit by signaling intent, in general, to append or not.\n\nIn the tests use STRDEF() or VARSTRDEF() where more appropriate rather than blindly replacing with strNewZ(). Also replace strLstAdd() with strLstAddZ() where appropriate for the same reason."
    },
    {
        "commit": "68faf1482a42ea14f5b00a91e19bd5aedec275b8",
        "date": "2021-05-21 13:21:25 -0400",
        "subject": "Update contributing documentation.",
        "body": "Add more examples of how to write code, add configuration options, test, etc."
    },
    {
        "commit": "15b8b9207da40df3df92ee7464a546c335a5a4d9",
        "date": "2021-05-21 12:51:32 -0400",
        "subject": "Add log shim.",
        "body": "This allows DEBUG_UNIT and DEBUG_UNIT_EXTERN to be removed since static log variables can now be exposed by functions in the harness."
    },
    {
        "commit": "ef63750e0bc8292caefe8e421a31e985026f72ee",
        "date": "2021-05-21 12:45:00 -0400",
        "subject": "Add local process shim.",
        "body": "Run the local process inside a forked child process instead of exec'ing it. This allows coverage to accumulate in the local process rather than needing to test the local protocol functions directly, resulting in better end-to-end testing and less test duplication. Another advantage is that the pgbackrest binary does not need to be built for the test.\n\nThe backup, restore, and verify command tests have been updated to use the new shim for coverage."
    },
    {
        "commit": "cab7a97ab6308d72b509ef2e02c559ac691f436b",
        "date": "2021-05-20 18:47:31 -0400",
        "subject": "Add shim feature for unit tests.",
        "body": "A shim allows a test harness to access static functions and variables in a C module, and also allows functions to be shimmed (i.e. overridden) for the purposes of testing.\n\nFor instance, coverage testing works when a process that is normally exec'd is run as a forked child process instead."
    },
    {
        "commit": "e31df55c8dc3ce8c5cd071b0a66d83b3c7c3c4ed",
        "date": "2021-05-20 18:35:30 -0400",
        "subject": "Factor local process exec out of protocolLocalGet().",
        "body": "This allows protocolLocalExec() to be shimmed, which means the local can be run as a child of the test process, simplifying coverage testing."
    },
    {
        "commit": "45a4e801ed52f60f27c73eacaf63ff4b483ab352",
        "date": "2021-05-20 16:02:31 -0400",
        "subject": "Replace getopt_long() with custom implementation.",
        "body": "getopt_long() requires an exhaustive list of all possible options that may be found on the command line. Because of the way options are indexed (e.g. repo1-4, pg1-8) optionList[] has 827 entries and we have kept it small by curtailing the maximum indexes very severely. Another issue is that getopt_long() scans the array sequentially so parsing gets slower as the index maximums increase.\r\n\r\nReplace getopt_long() with a custom implementation that behaves the same but allows options to be parsed with a function instead of using optionList[]. This commit leaves the list in place in order to focus on the getopt_long() replacement, but cfgParseOption() could be replaced with a more efficient implementation that removes the need for optionList[].\r\n\r\nThis implementation also fixes an issue where invalid options were misreported in the error message if they only had one dash, e.g. -config. This seems to have been some kind of problem in getopt_long(), but no investigation was done since the new implementation fixes it.\r\n\r\nTests were added at 0825428, 2b8d2da, 34dd663, and 384f247 to check that previously untested getopt_long() behavior doesn't change."
    },
    {
        "commit": "831ee81466c28ca563d5f5f5468681aca6fe3bea",
        "date": "2021-05-20 14:39:47 -0400",
        "subject": "Rename default command role to main.",
        "body": "Main makes more sense because we refer to the main process in the code, not the default process. The word default is pretty overloaded anyway."
    },
    {
        "commit": "8453d89a92f6b7846bc8eeead285a1abd8fdfb1b",
        "date": "2021-05-19 14:18:43 -0400",
        "subject": "Add recursion to TEST_STORAGE_LIST() macro.",
        "body": "This makes the macro useful when subpaths are present.\n\nIdentify types other than files (path, link, etc.) with a single appended character for easier debugging."
    },
    {
        "commit": "93eb2f8362489eba2e6a6deee6b0d0c6dd3e6a2c",
        "date": "2021-05-19 14:03:42 -0400",
        "subject": "Fix invalid type in test function.",
        "body": "This should have been char * from the start, but of course void * worked fine."
    },
    {
        "commit": "4d48850aad23042b3d7bf22221e2f5d34c00de07",
        "date": "2021-05-19 12:58:48 -0400",
        "subject": "Update negate to indicate that it should not be used for new options."
    },
    {
        "commit": "870bcf30af1a516802a67ac173e8bd7a369c6530",
        "date": "2021-05-18 16:48:30 -0400",
        "subject": "Add missing header.",
        "body": "This worked because all places where this header was included, common/type/stringId.h was included first."
    },
    {
        "commit": "4fa95af447d1b9caecbaacb5e7a5ef4b334f7331",
        "date": "2021-05-18 16:38:57 -0400",
        "subject": "Fix typo in struct typedef.",
        "body": "This worked because the type is never declared as struct ExecPub."
    },
    {
        "commit": "c92bc43c1eca6d3deac288f68332b323139e6405",
        "date": "2021-05-18 16:33:45 -0400",
        "subject": "Simplify defaults for --force option.",
        "body": "All commands have the same default so it is more efficient to set the default for the entire option."
    },
    {
        "commit": "320c6e1aad2cc9a8dabecb2bc91a9b34464de6ec",
        "date": "2021-05-18 15:49:22 -0400",
        "subject": "Remove stanza archive spool path on restore.",
        "body": "Remove stanza archive spool path so existing files do not interfere with the new cluster. For instance, old archive-push acknowledgements could cause a new cluster to skip archiving. This should not happen if a new timeline is selected but better to be safe. Missing stanza spool paths are ignored.\r\n\r\nAlso add new path expression STORAGE_SPOOL_ARCHIVE to easily access this path."
    },
    {
        "commit": "dc0e6645cd5c4baa3f301feda4acfce55ba363f7",
        "date": "2021-05-18 09:08:06 -0400",
        "subject": "Move includes after typedef in info/manifest.h.",
        "body": "This allows the Manifest type to be used in headers that need it, e.g. command/backup/common.h."
    },
    {
        "commit": "9af033194abc4b1cd3f06c3a97fff71c966c3827",
        "date": "2021-05-17 14:55:50 -0400",
        "subject": "Add automatic GCS authentication for GCE instances.",
        "body": "When running on a GCE instance the authentication token can be pulled directly from the instance metadata. This is configured with repo-gcs-key-type=auto.\r\n\r\nIn a separate commit (26fefa6), move the code that parses the token response into a separate function, storageGcsAuthToken(), since it is now needed by two key types. This drastically improves the readability of the main commit."
    },
    {
        "commit": "0152075e6bc5fca2b78cbe6051a6b3d998c9030f",
        "date": "2021-05-17 11:35:22 -0400",
        "subject": "Remove default VM for test.pl --coverage-only option.",
        "body": "When running outside of our standard Vagrantfile the default will not be set correctly, so require the user to set it.\n\nIn any case, this option is primarily useful for reporting so note that in the command line help."
    },
    {
        "commit": "384f2470775bd2d867529e7267c12a798a259ab3",
        "date": "2021-05-17 09:33:36 -0400",
        "subject": "Add config/parse tests for config/env partial options.",
        "body": "Partial option matching is valid on the command line but should never be used in config files or environment options."
    },
    {
        "commit": "ae7f0af2023ec7b9261a5a4887351eec669c4442",
        "date": "2021-05-17 07:20:28 -0400",
        "subject": "Move PostgreSQL version interface test functions to a test harness.",
        "body": "Some version interface test functions were integrated into the core code because they relied on the PostgreSQL versioned interface. Even though they were compiled out for production builds they cluttered the core code and made it harder to determine what was required by core.\n\nCreate a PostgreSQL version interface in a test harness to contain these functions. This does require some duplication but the cleaner core code seems a good tradeoff. It is possible for some of this code to be auto-generated but since it is only updated once per year the matter is not pressing."
    },
    {
        "commit": "18cc02238bbd15bfa9827ef86078aa172bdae52b",
        "date": "2021-05-17 07:15:13 -0400",
        "subject": "Remove overzealous cast.",
        "body": "There does not seem to be a good reason to have an explicit cast for such a small number, so remove it.\n\nLeave PG_CONTROL_SIZE alone since it will be removed in an upcoming commit."
    },
    {
        "commit": "9235c62c6b597bc4ed812e0c0a3bc3a36ec30767",
        "date": "2021-05-17 07:12:46 -0400",
        "subject": "Revert ignoring catalog version when identifying a PostgreSQL version.",
        "body": "927d9adb changed the way CATALOG_VERSION_NO is used to identify PostgreSQL versions since PG_CONTROL_VERSION is generally bumped with each release. The goal was to make the beta/rc period less painful because any CATALOG_VERSION_NO bump renders pgBackRest inoperative.\n\nThis worked, but in fact we'd rather be stricter about which CATALOG_VERSION_NO we accept when identifying a version of PostgreSQL. It is not just about identifying a major version, but making sure the build contains all the functions and catalogs we expect to make pgBackRest work correctly. It is better to reject early dev/beta/rc builds that may not work.\n\nSince 927d9adb was relatively recent the chance that this stricter checking will cause a problem seems minimal, so revert to checking CATALOG_VERSION_NO for every PostgreSQL version.\n\nLeave in place the code that pulls CATALOG_VERSION_NO from pg_control rather than the internal constant since the plan is still to allow catalog versions to \"float\" during the PostgreSQL beta/rc phase, which will be the subject of a future commit."
    },
    {
        "commit": "f45e76fa2e8ce0f62317a74fdd51083d52659cd5",
        "date": "2021-05-13 17:51:39 -0400",
        "subject": "Fix issues with leftover spool files from a prior restore.",
        "body": "If an ok file (which indicates the WAL segment was not found) is present on the first iteration of the loop then remove it and spawn the async process to retry. This action also resets the queue.\r\n\r\nAlso error if no response is received from the async process rather than returning not found. PostgreSQL will respond the same either way, but this allows us to determine when something is going wrong with the async process.\r\n\r\nUpdate archiveAsyncStatus() to allow warnings to be suppressed. It is better to retry if no WAL segment was found before warning because the warning might be stale."
    },
    {
        "commit": "34dd6636b83ac41cab592d6a6d18c082e1ee272e",
        "date": "2021-05-13 17:01:21 -0400",
        "subject": "Add config/parse tests for options and option args with spaces.",
        "body": "If an option name has a space at the beginning then it will be considered an invalid command, but a space at the end is an invalid option. Add tests for these conditions.\n\nSpaces in option arguments should be preserved, so add a test to be sure this is true."
    },
    {
        "commit": "2b8d2daca15f2535672f195164c0e8daffdade90",
        "date": "2021-05-13 16:54:25 -0400",
        "subject": "Add config/parse tests for partial options.",
        "body": "Add coverage for partial options, i.e. an option that is partially specified but only prefix matches with a single valid option."
    },
    {
        "commit": "add0f9b77de4b9f1395338e4b092bf77b2da2cd5",
        "date": "2021-05-13 12:37:59 -0400",
        "subject": "Fix an ungrammatical error message in config parsing."
    },
    {
        "commit": "0825428fef00e6b4b107526ffa462fa7558aace4",
        "date": "2021-05-13 12:35:11 -0400",
        "subject": "Add config/parse test where the option/value are not in the same arg.",
        "body": "All the tests in this module use --option=value syntax so add one test with --option value syntax for coverage."
    },
    {
        "commit": "26fefa6aeeae90bbb572ea57b605fb8fe526f1a0",
        "date": "2021-05-13 06:59:57 -0400",
        "subject": "Refactor GCS token response parsing into a separate function.",
        "body": "This function is also useful for the upcoming auto authentication. Refactoring in a separate commit to make the feature commit more readable."
    },
    {
        "commit": "7b71604defa02d5ed9b7aa3407961cb59a52cc45",
        "date": "2021-05-12 13:21:59 -0400",
        "subject": "Use existing variable for GCS test server port.",
        "body": "Also fix incorrect separator comment."
    },
    {
        "commit": "5464ac83d121c653e95f337fa14870bbe35dc9f7",
        "date": "2021-05-11 17:24:30 -0400",
        "subject": "Convert option values in commands to StringId.",
        "body": "Convert most of the remaining options that benefit from being StringIds. Since all the command modules can include config.h directly it makes sense to auto-generate these values instead of manually creating an enum for each one.\r\n\r\nFor the time being StringIds are not being auto-generated because the StringId code does not exist in Perl. However, the *_Z zero-terminated constants for each allowed option value are now auto-generated."
    },
    {
        "commit": "87ba2ca253ec9546cb23635ec15017bb5ce7d6e9",
        "date": "2021-05-11 16:54:42 -0400",
        "subject": "Change CentOS 7 documentation test to CentOS 8.",
        "body": "The CentOS 7 documentation test relies on PostgreSQL 9.5 which has been removed from the yum.p.o repository package. Switch the test to CentOS 8 to fix the immediate issue, but a decision on the PostgreSQL 9.5 documentation will need to be made before the next release."
    },
    {
        "commit": "2bfebff2ec73b0af6d937f303fbb9b8a0b8ee649",
        "date": "2021-05-04 15:51:46 -0400",
        "subject": "Add instructions to install lcov for MacOS."
    },
    {
        "commit": "54074a569708e40831d767a8b93074f41feec308",
        "date": "2021-05-04 07:52:35 -0400",
        "subject": "Exclude Dockerfile from code count."
    },
    {
        "commit": "baddec1e9ae37ad08840401e2602301f06bda021",
        "date": "2021-05-03 16:31:27 -0400",
        "subject": "Basic multi-architecture support for test containers.",
        "body": "The tests worked fine on multiple architectures, but would only run \"bare metal\", i.e. tests that required containers could not be run.\n\nEnable basic multi-architecture support by allowing containers to be built using whatever architecture the host supports. Also allow cached containers to be defined for multiple architectures in container.yaml.\n\nAdd a Dockerfile which can be used as a container for other containers to provide a consistent development environment.\n\nThe primary goal is to allow development on Mac M1 but other architectures should find these improvements useful."
    },
    {
        "commit": "87df6d7a58a6ab3c4748ad75e4128cdad761b15a",
        "date": "2021-05-03 12:15:39 -0400",
        "subject": "Convert BackupType enum to StringId.",
        "body": "Allows removal of backupType()/backupTypeStr() and improves debug logging of the enum.\r\n\r\nMove BackupType enum and string constants to info/infoBackup.h so they are available to more modules. Also convert InfoBackup to use BackupType instead of a String."
    },
    {
        "commit": "568dc0ba0c762376b8bd902d83e38f2649a156af",
        "date": "2021-05-03 09:34:22 -0400",
        "subject": "Add new instructions for PostgreSQL news and include a sample.",
        "body": "It is no longer possible to pull news source from the PostgreSQL website so add a sample in the doc directory. Update the release instructions to reflect this change.\n\nAlso note that it is no longer necessary to post separately to pgsql-announce."
    },
    {
        "commit": "fb7ddce8076107c33c25832c9acb8baffbd57563",
        "date": "2021-04-28 13:21:24 -0400",
        "subject": "Convert InfoPgType enum to StringId.",
        "body": "Improves debug logging by outputting archive/backup instead of 0/1."
    },
    {
        "commit": "bd0081fec87ee32fa57adf5c882a6cad5394eaa0",
        "date": "2021-04-28 12:37:22 -0400",
        "subject": "Update IoClient/IoSession to use StringIds.",
        "body": "Using StringId for the client/session type removes String constants and some awkward referencing/dereferencing needed to use a String constant in the interface.\n\nConverting IoSessionRole to StringId removes a conditional in ioSessionToLog() and improves debug logging by outputting client/server instead of 0/1."
    },
    {
        "commit": "0ec91f61c636731a8a46fc69307bbe5d78ac8871",
        "date": "2021-04-28 12:23:37 -0400",
        "subject": "Convert ArchivePushFileIoType enum to StringId.",
        "body": "Improves debug logging by outputting open/write/close instead of 0/1/2."
    },
    {
        "commit": "8394577c6ac1a13884b4b05052ce6328d38ab067",
        "date": "2021-04-28 12:05:01 -0400",
        "subject": "Convert ArchiveMode enum to StringId.",
        "body": "Improves debug logging by outputting get/push instead of 0/1."
    },
    {
        "commit": "7dd01897fd20a3629e7333dc47bed7d02035b501",
        "date": "2021-04-28 11:59:04 -0400",
        "subject": "Convert ProtocolStorageType enum to StringId.",
        "body": "Allows removal of protocolStorageTypeEnum()/protocolStorageTypeStr() and improves debug logging of the enum."
    },
    {
        "commit": "bd68ed63ba38c841e286e0ab5390450f57c23b37",
        "date": "2021-04-28 11:43:08 -0400",
        "subject": "Convert ProtocolParallelJobState enum to StringId.",
        "body": "Allows removal of protocolParallelJobToConstZ(), which was used only for debugging."
    },
    {
        "commit": "85fc3da4c37dc1cb9af3b8c5248121769ab56650",
        "date": "2021-04-28 11:36:20 -0400",
        "subject": "Update CipherType/CipherMode to StringId.",
        "body": "As in 6cc521b, this allows option values and enums to be easily mapped together."
    },
    {
        "commit": "c3b15fc3bdc332591c6b059c2b23b1cce990d387",
        "date": "2021-04-28 10:58:45 -0400",
        "subject": "Fix comments where 'output' was misspelled as 'ouput'."
    },
    {
        "commit": "066fbcf26826ee8332eb76db0db9d684047513ac",
        "date": "2021-04-27 15:25:10 -0400",
        "subject": "Refactor String, Buffer, and Variant types with inline getters.",
        "body": "Extend the pattern introduced in 79a2d02c to the String, Buffer, and Variant types."
    },
    {
        "commit": "1edcfde93e47c79a8b18b05f7ddb1e9fde29b0ed",
        "date": "2021-04-27 12:12:43 -0400",
        "subject": "Add cfgOptionDisplay()/cfgOptionIdxDisplay().",
        "body": "Centralize the formatting of the configuration value for display to the user or passing on a command line.\r\n\r\nFor the new functions, if the value was set by the user via the command line, config, etc., then that exact value will be displayed. This makes it easier for the user to recognize the value and saves having to format it into something reasonable, especially for time and size option types.\r\n\r\nNote that cfgOptTypeHash and cfgOptTypeList option types are not supported by these functions, but they are generally not displayed to the user as a whole.\r\n\r\nThis also fixes a bug in config/load.c where time values where not being formatted correctly in an error message."
    },
    {
        "commit": "95fb002b85897e71820c44519231975d883f87db",
        "date": "2021-04-27 12:04:50 -0400",
        "subject": "Preserve unused YAML fix for older Debian/Ubuntu distributions.",
        "body": "This fix was not used since backports worked for older Debians and the old affected Ubuntus are EOL.\n\nStill, seems worth preserving just in case it comes up elsewhere."
    },
    {
        "commit": "6cc521b6b232cd10b5b1622b1841d988113d0c16",
        "date": "2021-04-23 13:19:47 -0400",
        "subject": "Update storage module to use StringIds.",
        "body": "Use StringIds for the storage types (e.g. STORAGE_S3_TYPE) and configuration settings, e.g. cfgOptS3KeyType.\r\n\r\nAlso add new config functions and harness config functions to support StringIds."
    },
    {
        "commit": "aa72c19a831fb0dd15a50a003fbaad427f335353",
        "date": "2021-04-23 12:33:25 -0400",
        "subject": "Do not write files atomically or sync paths during backup copy.",
        "body": "There is no need to write the file atomically (e.g. via a temp file on Posix) because checksums are tested on resume after a failed backup. The path does not need be synced for each file because all paths are synced at the end of the backup.\r\n\r\nThis functionality was not lost during the migration -- it never existed in the Perl code, though these settings are used in restore. See 59f1353 where backupFile() was migrated to C."
    },
    {
        "commit": "aaa15b9709cd58ad56e5008858867d91f4abe803",
        "date": "2021-04-23 11:46:03 -0400",
        "subject": "Add help for all internal options valid for default roles.",
        "body": "Fix the segfault when getting help for an internal option is requested by adding help for all internal options that are valid for a default command role.\r\n\r\nAlso print warnings about internal options in code rather than putting in each command/option description."
    },
    {
        "commit": "2ad497ea4cdc53f5966f2abab018696ff4694a2d",
        "date": "2021-04-23 08:04:03 -0400",
        "subject": "Remove documentation about enum truncation and add tests.",
        "body": "The enum truncation observed was due to the value getting passed via a protocol function which silently narrowed the enum.\n\nEven so, add some tests to ensure tested platforms support 64-bit enums."
    },
    {
        "commit": "bcc925b7406ae590cd24ff5a0bbb789a6d1ecd5a",
        "date": "2021-04-22 20:04:27 -0400",
        "subject": "Replace misused kvAdd() with kvPut().",
        "body": "Although kvAdd() works like kvPut() on the first call, kvPut() is more efficient when a key has a single value.\n\nUpdate the comment to clarify that kvAdd() is seldom required."
    },
    {
        "commit": "a2f02f95ec5f2835d3c114d1b96fec8109e11402",
        "date": "2021-04-22 19:28:11 -0400",
        "subject": "Remove redundant CompressType conversions.",
        "body": "These seem to be the result of overzealous copy/paste.\n\nThe conversions do not even serve as a verification of locally available compression types since compressTypeEnum() and compressTypeStr() do not check that."
    },
    {
        "commit": "468aa79ea8b1975b1d6fe0665611230432f16d75",
        "date": "2021-04-22 19:10:13 -0400",
        "subject": "Remove auto-generated option String constants.",
        "body": "These are rarely used and end up using more space than they save since most of them are never referenced.\n\nReplace VARSTR() with VARSTRDEF() where these constants are being used."
    },
    {
        "commit": "6a39c51f8f1d992c53bc3af80d9db0037c09fb41",
        "date": "2021-04-22 18:18:34 -0400",
        "subject": "Test pull requests in Cirrus CI.",
        "body": "Both FreedBSD and MacOS use clang as their default compiler and clang catches some errors that gcc does not. Specifically, wide integers being assigned to short integers resulting in possible truncations."
    },
    {
        "commit": "06fa18582a405417c8ab4ba667cb01a13a5c3103",
        "date": "2021-04-22 12:23:08 -0400",
        "subject": "Free no longer needed remotes so they do not timeout during restore.",
        "body": "The remotes are no longer needed in the main process after the manifest is loaded. If the restore is long enough the connection will timeout and WARN at the end of the restore. This is harmless for the restore but distracting for the user.\r\n\r\nTo prevent this, free the remotes once they are no longer needed."
    },
    {
        "commit": "45f83558ea862c6f496a27b886e1160e6303bbe8",
        "date": "2021-04-22 11:48:04 -0400",
        "subject": "Fix help when a valid option is invalid for the specified command.",
        "body": "Getting help for a valid option that was invalid for the command would segfault.\r\n\r\nAdd a check to ensure the option is valid for the command's default role."
    },
    {
        "commit": "72dac5b10b7cd31a00212be9268df95c2d12615c",
        "date": "2021-04-22 08:15:36 -0400",
        "subject": "Use option constants in warnings.",
        "body": "In once case the constant replaces a formatted statement, which is more efficient, and in the other case plain text, which is more maintainable."
    },
    {
        "commit": "20a018a8ae9ce8768044621e19ef716c5622f209",
        "date": "2021-04-21 18:27:18 -0400",
        "subject": "Fix incorrect test title."
    },
    {
        "commit": "c5b446d406937d35b277cd0d9131e6c058183f3b",
        "date": "2021-04-21 10:09:07 -0400",
        "subject": "Fix indentation."
    },
    {
        "commit": "fd69357302053a79fdef6decf1ff284a8a442e67",
        "date": "2021-04-20 18:43:16 -0400",
        "subject": "Add const to inline functions where appropriate.",
        "body": "This lets the compiler know that these variables are not modified which should lead to better optimization.\n\nSmart compilers should be able to figure this out on their own, but marking parameters const is still good for documentation."
    },
    {
        "commit": "ed0d48f52cb5332f6804737ac01c43bf76d11a50",
        "date": "2021-04-20 15:22:42 -0400",
        "subject": "Add StringId type.",
        "body": "It is often useful to represent identifiers as strings when they cannot easily be represented as an enum/integer, e.g. because they are distributed among a number of unrelated modules or need to be passed to remote processes. Strings are also more helpful in debugging since they can be recognized without cross-referencing the source. However, strings are awkward to work with in C since they cannot be directly used in switch statements leading to less efficient if-else structures.\n\nA StringId encodes a short string into an integer so it can be used in switch statements but may also be readily converted back into a string for debugging purposes. StringIds may also be suitable for matching user input providing the strings are short enough.\n\nThis patch includes a sample of StringId usage by converting protocol commands to StringIds. There are many other possible use cases. To list a few:\n\n* All \"types\" in storage, filters. IO , etc. These types are primarily for identification and debugging so they fit well with this model.\n\n* MemContext names would work well as StringIds since these are entirely for debugging.\n\n* Option values could be represented as StringIds which would mean we could remove the functions that convert strings to enums, e.g. CipherType.\n\n* There are a number of places where enums need to be converted back to strings for logging/debugging purposes. An example is protocolParallelJobToConstZ. If ProtocolParallelJobState were defined as:\n\ntypedef enum\n{\n    protocolParallelJobStatePending = STRID5(\"pend\", ...),\n    protocolParallelJobStateRunning = STRID5(\"run\", ...),\n    protocolParallelJobStateDone = STRID5(\"done\", ...),\n} ProtocolParallelJobState;\n\nthen protocolParallelJobToConstZ() could be replaced with strIdToZ(). This also applies to many enums that we don't covert to strings for logging, such as CipherMode.\n\nAs an example of usage, convert all protocol commands from strings to StringIds."
    },
    {
        "commit": "292f836f1243e51d102bb4be202e7b21a7a386b1",
        "date": "2021-04-19 15:01:00 -0400",
        "subject": "Add db-exclude option.",
        "body": "Restore excluding the specified databases. Databases excluded will be restored as sparse, zeroed files to save space but still allow PostgreSQL to perform recovery. After recovery, those databases will not be accessible but can be removed with the drop database command. The --db-exclude option can be passed multiple times to specify more than one database to exclude.\r\n\r\nWhen used in combination with the --db-include option, --db-exclude will only apply to standard system databases (template0, template1, and postgres)."
    },
    {
        "commit": "a75b413ac228452acfd33aa3d296d8edbeae9604",
        "date": "2021-04-19 14:22:36 -0400",
        "subject": "Add storageDriver() inlines missed in b715c70b."
    },
    {
        "commit": "d859fe8c4d60e961cf688f17fb80d0cdc8fb810d",
        "date": "2021-04-14 15:48:04 -0400",
        "subject": "Update to remove files after archive-get test completes.",
        "body": "This cleans up the spool path for the next test. Currently there isn't one but there will be."
    },
    {
        "commit": "040ad71f8cd7b57ec6546e4733749c827ed0aaa3",
        "date": "2021-04-14 15:41:55 -0400",
        "subject": "Remove lockClear().",
        "body": "This function has not been used since the switch to the fork/exec model.\n\nlockClear() was still used in one test (other than the lock test) so update the test and remove the function."
    },
    {
        "commit": "c2d4a0286e5899f3382bd34f9d285f122753bca5",
        "date": "2021-04-13 18:06:07 -0400",
        "subject": "Define DEBUG in build.auto.c.",
        "body": "Both NDEBUG and DEBUG were used in the code, which was a bit confusing.\n\nDefine DEBUG in build.auto.c so it is available in all C and header files and stop using NDEBUG. This is preferable to using NDEBUG everywhere since there are multiple DEBUG* defines, e.g. DEBUG_COVERAGE.\n\nNote that NDEBUG is still required since it is used by the C libraries."
    },
    {
        "commit": "c1aae434ca18ce06a6ea56b779fbdb5702ee1034",
        "date": "2021-04-13 17:03:28 -0400",
        "subject": "Update Cirrus CI FreeBSD release to 12.2."
    },
    {
        "commit": "a0e24d492f8df97788018fc91d6e408c1c787e15",
        "date": "2021-04-13 16:58:02 -0400",
        "subject": "Add THIS_PUB() macro to simplify inline object accessors.",
        "body": "In combination with the thisPub() function, this macro simplifies accessing the public part of a private object struct.\n\nthisPub() asserts this != NULL so the caller does not need to do it."
    },
    {
        "commit": "9fec4ce98c69044eae4e299e6e95bc45990d6d5c",
        "date": "2021-04-13 14:37:02 -0400",
        "subject": "Refactor remaining common/io modules with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the remaining common/io modules."
    },
    {
        "commit": "5bf160643b53699a28a8f0920c36d6ded767d249",
        "date": "2021-04-13 14:02:20 -0400",
        "subject": "Clarify that repo-s3-role is not an ARN."
    },
    {
        "commit": "2c9c59170f6c1a3aacfdf0fb5c6197feb87afcc9",
        "date": "2021-04-13 12:38:17 -0400",
        "subject": "Add bash to Cirrus CI FreeBSD package install.",
        "body": "It appears bash was removed from the base image so install explicitly."
    },
    {
        "commit": "8844ced384bf0d5feb5fe395560ec976cc292a73",
        "date": "2021-04-12 16:05:40 -0400",
        "subject": "Refactor common/io/filter module with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the common/io/filter module."
    },
    {
        "commit": "3b9bed95186118a3fbf47e3e0900e74f4ad01217",
        "date": "2021-04-09 17:29:14 -0400",
        "subject": "Refactor common/type/keyValue module with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the common/type/keyValue module."
    },
    {
        "commit": "c434b9ed885e083baed79c76426a7996d1a17d30",
        "date": "2021-04-09 17:03:55 -0400",
        "subject": "Refactor common/type/xml module with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the common/type/xml module."
    },
    {
        "commit": "e18f3c1701b83037431354c41871e9daf16db9d4",
        "date": "2021-04-09 15:56:42 -0400",
        "subject": "Remove unused XML constructors.",
        "body": "These alternate constructors may have been used in the Perl days but they are no longer used so remove them."
    },
    {
        "commit": "ddd37ebf7dcef30322346c34f09aae44a0ca35a2",
        "date": "2021-04-09 15:31:31 -0400",
        "subject": "Refactor common/exec module with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the common/exec module."
    },
    {
        "commit": "1d674c352f1d6fc1875946d32aa0f5db5c0082b7",
        "date": "2021-04-09 14:32:21 -0400",
        "subject": "Refactor db module with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the db module."
    },
    {
        "commit": "442b2e41b1561a5d7f5e06097116279ee173e626",
        "date": "2021-04-09 13:48:40 -0400",
        "subject": "Refactor info modules with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the info modules."
    },
    {
        "commit": "4937653a3df1948ec8c5d9f62075e0f287852ce8",
        "date": "2021-04-08 16:46:42 -0400",
        "subject": "Refactor protocol modules with inline getters/setters.",
        "body": "Extend the pattern introduced in 79a2d02c to the protocol modules."
    },
    {
        "commit": "235e32b57db36ca43bc47c5028ad9b619c223a68",
        "date": "2021-04-08 14:47:53 -0400",
        "subject": "Add const keyword to module scope constants.",
        "body": "These pointers should never be modified, so mark them const."
    },
    {
        "commit": "6c005afd5bcd7260976908dd2ddb2cdb9031996a",
        "date": "2021-04-08 14:38:20 -0400",
        "subject": "Add Ubuntu 20.04 test VM definition."
    },
    {
        "commit": "d30ec9c9aeaaa454078b67a5998614f0b4c9c81d",
        "date": "2021-04-08 10:04:57 -0400",
        "subject": "Replace OBJECT_DEFINE_MOVE() and OBJECT_DEFINE_FREE() with inlines.",
        "body": "Inline functions are more efficient and if they are not used are automatically omitted from the binary.\n\nThis also makes the implementation of these functions easier to find and removes the need for a declaration. That is, the complete implementation is located in the header rather than being spread between the header and C file."
    },
    {
        "commit": "351e7db4c4df6329f87ceb63b7c0fb253bed1463",
        "date": "2021-04-07 16:27:55 -0400",
        "subject": "Replace OBJECT_DEFINE_FREE_RESOURCE_BEGIN() with normal functions.",
        "body": "OBJECT_DEFINE_MOVE() and OBJECT_DEFINE_FREE() will be replaced with inlines so this would be the only macro left that is constructing functions.\n\nIt is not a great pattern anyway since it makes it hard to find the function implementation."
    },
    {
        "commit": "cc85c4f03d78492cf8158cf02c51e8eb8bab24e6",
        "date": "2021-04-07 14:27:57 -0400",
        "subject": "Replace OBJECT_DEFINE_GET() with *Pub struct pattern.",
        "body": "This macro was originally intended to simplify the creation of simple getters but it has been superseded by the pattern introduced in 79a2d02c.\n\nRemove instances of OBJECT_DEFINE_GET() to avoid confusion with the new pattern."
    },
    {
        "commit": "b715c70b464d4bb2eaa347b6b83902040caa8cd8",
        "date": "2021-04-07 14:04:38 -0400",
        "subject": "Refactor storage modules with inline getters/setters.",
        "body": "Extended the pattern introduced in 79a2d02c to the storage modules: Storage, StorageRead, StorageWrite."
    },
    {
        "commit": "79a2d02c9c8c00a2db6c34ddf73223f159288c56",
        "date": "2021-04-07 12:50:33 -0400",
        "subject": "Refactor List, StringList, and VariantList for performance.",
        "body": "Introduce a standard pattern for exposing public struct members (as documented in CODING.md) and use it to inline lstSize() which should improve the performance of iterating large lists.\n\nSince many functions in these modules are just thin wrappers of other functions, inline where appropriate.\n\nRemove strLstExistsZ() and strLstInsertZ() since they were only used in tests, where the String version of the function is sufficient.\n\nMove strLstNewSplitSizeZ() to command/help/help.c and remove strLstNewSplitSize(). This function has only ever been used by help and does not seem widely applicable."
    },
    {
        "commit": "904738a5f180ee3040fd7626c894b134dbaf164a",
        "date": "2021-04-05 10:25:01 -0400",
        "subject": "Update config.sub to latest version."
    },
    {
        "commit": "8461961e5c832ffd8e255b76ccd0125e0cd83e00",
        "date": "2021-04-05 10:23:16 -0400",
        "subject": "Begin v2.34 development."
    },
    {
        "commit": "a3d89143d6b34c6019cd29e059d28487037fd109",
        "date": "2021-04-05 09:18:20 -0400",
        "subject": "v2.33: Multi-Repository and GCS Support"
    },
    {
        "commit": "a6a544c7f9cda61af854ef980924d36c02b514bd",
        "date": "2021-04-02 15:35:41 -0400",
        "subject": "Fix extraneous hrnReplaceKey() calls in unit tests.",
        "body": "hrnReplaceKey() was added to the TEST_ERROR*() macros in 58760486 but some calls to TEST_ERROR*() already used it. This led to the function being called twice on the same buffer which had no effect but valgrind definitely did not like.\n\nRemove extraneous calls to make valgrind happy. Since this is test code there are no implications for production."
    },
    {
        "commit": "1615cb02610668b6eae2e3907519212eabd1ad30",
        "date": "2021-03-31 10:36:22 -0400",
        "subject": "Add --gen-check option to test.pl to check autogenerated code.",
        "body": "Make sure that auto-generated code does not change during CI.\n\nThis is useful for catching missed code generation, especially help.auto.c."
    },
    {
        "commit": "e89452557ee8b0b883716331e8d542310875eadd",
        "date": "2021-03-31 09:41:33 -0400",
        "subject": "Update to help.auto.c missed in d372dd652c9."
    },
    {
        "commit": "d372dd652c9a01b72444998d87f0f44464676803",
        "date": "2021-03-31 09:36:56 -0400",
        "subject": "Update reference to include links to user guide examples.",
        "body": "The command-example and command-example-list elements were removed from the documentation rendering some time ago so these tags were dead code. The tags, however, contained some examples and information that were pertinent to the command, so where possible, the information was included in the description of the command and/or the user-guide and links to the relevant user guide sections were added.\r\n\r\nNote that some commands could not be updated with user guide references since doing so would cause a cyclical reference in the user guide. These commands have an internal comment to indicate this.\r\n\r\nIn addition, some clarifications were added (e.g. expire --set option) where information was lacking."
    },
    {
        "commit": "fead2360da5634b278dba621aa98790add120762",
        "date": "2021-03-30 15:49:03 -0400",
        "subject": "Link Github issues/PRs to release notes.",
        "body": "This makes it easier to determine which release notes relate to issues and PRs, especially for bug fixes or user requests."
    },
    {
        "commit": "21db7f65ef497d323b37c0aa60c89f4c7c754622",
        "date": "2021-03-29 09:49:42 -0400",
        "subject": "Update to help.auto.c missed in 75987621."
    },
    {
        "commit": "75987621fab5f57d0e95b42eabd301731587c438",
        "date": "2021-03-26 10:11:06 -0400",
        "subject": "Add note about required NFS settings being the same as PostgreSQL."
    },
    {
        "commit": "3e206088e79c4a73a20b8f2fda1706c6b95fa188",
        "date": "2021-03-26 09:25:31 -0400",
        "subject": "Add compress-level defaults per compress-type value.",
        "body": "Document these defaults until they can be added to the config parser and automated."
    },
    {
        "commit": "b6106f3c1f586b410c50c9da8dcea583cc157423",
        "date": "2021-03-25 15:33:50 -0400",
        "subject": "Add archive-header-check option.",
        "body": "Enabled by default, this option checks the WAL header against the PostgreSQL version and system identifier to ensure that the WAL is being copied to the correct stanza. This is in addition to checking pg_control against the stanza and verifying that WAL is being copied from the same PostgreSQL data directory where pg_control is located.\r\n\r\nTherefore, disabling this check is fairly safe but should only be done when required, e.g. if the WAL is encrypted."
    },
    {
        "commit": "01b8e2258f6efa5386665c33cb5c267c154376fb",
        "date": "2021-03-25 12:54:49 -0400",
        "subject": "Improve archive-push command fault tolerance.",
        "body": "3b8f0ef missed some cases that could cause archive-push to fail:\r\n\r\n* Checking archive info.\r\n* Checking to see if a WAL segment already exists.\r\n\r\nThese cases are now handled so archive-push can succeed on any valid repos."
    },
    {
        "commit": "2789d3b6206c4de9299a3bc459e04cdab793abc9",
        "date": "2021-03-25 12:29:36 -0400",
        "subject": "Improve info command fault tolerance.",
        "body": "This improvement reduces the number of errors thrown; these errors will now be reported as a status for the stanza or repo as appropriate. Invalid option configurations are still thrown but all other errors are caught, formatted and reported. This was necessary for multiple repositories so that the command can complete gathering information from each repository and report the results rather than immediately aborting when an error occurs.\r\n\r\nTwo new error codes were introduced:\r\n6 = requested backup not found\r\n99 = other, which is used to indicate an error has occurred that requires more details to be provided\r\n\r\nA new stanza name of \"[invalid]\" was created for instances where a stanza was not specified and no stanza can be found.\r\n\r\nIf there is only one repository configured the error will move up to the stanza level with the standard error formatting of 'error (message)' where the message will be \"other\" and the details of the error will be listed on the next line(s):\r\n\r\nstanza: stanza1\r\n    status: error (other)\r\n            [CryptoError] unable to load info file '/var/lib/pgbackrest/repo/backup/stanza1/backup.info' or '/var/lib/pgbackrest/repo/backup/stanza1/backup.info.copy':\r\n            CryptoError: cipher header invalid\r\n            HINT: is or was the repo encrypted?\r\n            FileMissingError: unable to open missing file '/var/lib/pgbackrest/repo/backup/stanza1/backup.info.copy' for read\r\n            HINT: backup.info cannot be opened and is required to perform a backup.\r\n            HINT: has a stanza-create been performed?\r\n            HINT: use option --stanza if encryption settings are different for the stanza than the global\r\n    cipher: aes-256-cbc\r\n\r\nIf a backup set is requested but is not found on any repo, a stanza-level status error of 'requested backup not found' is reported when there are no other errors:\r\n\r\npgbackrest info --stanza=demo --set=bogus\r\nstanza: demo\r\n    status: error (requested backup not found)\r\n    cipher: mixed\r\n        repo1: aes-256-cbc\r\n        repo2: none\r\n\r\nIf there are multiple repositories configured and a single repo is in error but the other repos are ok or have a different error:\r\n\r\npgbackrest info --stanza=demo --set=20210322-171211F\r\nstanza: demo\r\n    status: mixed\r\n        repo1: error\r\n               [CryptoError] unable to load info file '/var/lib/pgbackrest/repo/backup/stanza1/backup.info' or '/var/lib/pgbackrest/repo/backup/stanza1/backup.info.copy':\r\n               CryptoError: cipher header invalid\r\n               HINT: is or was the repo encrypted?\r\n               FileMissingError: unable to open missing file '/var/lib/pgbackrest/repo/backup/stanza1/backup.info.copy' for read\r\n               HINT: backup.info cannot be opened and is required to perform a backup.\r\n               HINT: has a stanza-create been performed?\r\n               HINT: use option --stanza if encryption settings are different for the stanza than the global\r\n        repo2: ok\r\n    cipher: mixed\r\n        repo1: aes-256-cbc\r\n        repo2: none\r\n\r\n    db (current)\r\n        wal archive min/max (12): 000000010000000000000001/000000010000000000000003\r\n\r\n        full backup: 20210322-171211F\r\n            timestamp start/stop: 2021-03-22 17:12:11 / 2021-03-22 17:12:28\r\n            wal start/stop: 000000010000000000000002 / 000000010000000000000002\r\n            database size: 23.4MB, database backup size: 23.4MB\r\n            repo2: backup set size: 2.8MB, backup size: 2.8MB\r\n            database list: postgres (13359)\r\n\r\nJson output will include the repository information and any error information. If no stanzas are found, then [invalid] will be set as the name:\r\n\r\n[\r\n   {\r\n       \"archive\":[],\r\n       \"backup\":[],\r\n       \"cipher\":\"none\",\r\n       \"db\":[],\r\n       \"name\":\"[invalid]\",\r\n       \"repo\":[\r\n           {\r\n               \"cipher\":\"none\",\r\n               \"key\":1,\r\n               \"status\":{\r\n                   \"code\":99,\r\n                   \"message\":\"[PathOpenError] unable to list file info for path '/var/lib/pgbackrest/repo2/backup': [13] Permission denied\"\r\n               }\r\n           }\r\n       ],\r\n       \"status\":{\r\n           \"code\":99,\r\n           \"lock\":{\"backup\":{\"held\":false}},\r\n           \"message\":\"other\"\r\n           }\r\n   }\r\n]"
    },
    {
        "commit": "7d7ac0e0eb63a02bbc1dd8bd8fc89c6008c740f8",
        "date": "2021-03-25 07:07:16 -0400",
        "subject": "Exclude content-length from S3 signed headers.",
        "body": "The content-length header was being signed since it was the only header that didn't need to be and it seemed simpler just to sign it as well. Also, the S3 documentation encourages signing as many headers as possible to avoid tampering.\r\n\r\nHowever, some proxies munge this header causing authentication failure, so skip signing content-length."
    },
    {
        "commit": "5876048675dceb76b8ddac8757ad47be8b55a817",
        "date": "2021-03-23 18:20:26 -0400",
        "subject": "Allow key replacements in TEST_ERROR*() macros.",
        "body": "Allow standard replacements (e.g. {[path]}) in TEST_ERROR*() macros.\n\nUpdate command/archive-push unit test as an example of usage."
    },
    {
        "commit": "b2440947fb0e585aa515fc6b1edfa0d164606a54",
        "date": "2021-03-18 16:29:14 -0400",
        "subject": "Fix comment type and phrasing."
    },
    {
        "commit": "6800f9e9cd578c61799c8c0dff803fff15e53021",
        "date": "2021-03-18 16:26:30 -0400",
        "subject": "Changed unnecessary strNewFmt() to strNew()."
    },
    {
        "commit": "73e94a4e9c32a3dd32e1a1e763a55eb3ea121e05",
        "date": "2021-03-16 17:02:03 -0400",
        "subject": "Fix comment typo."
    },
    {
        "commit": "2016fac0d9d5ef9196d7b3058d0b854adf4472ca",
        "date": "2021-03-16 13:09:34 -0400",
        "subject": "Improve protocol handlers.",
        "body": "Make protocol handlers have one function per command. This allows the logic of finding the handler to be in ProtocolServer, isolates each command to a function, and removes the need to test the \"not found\" condition for each handler."
    },
    {
        "commit": "b1d945ebb774c25676155af439b0558e8582bbe5",
        "date": "2021-03-16 12:42:55 -0400",
        "subject": "Fix repo-ls / on S3 repositories.",
        "body": "S3 returns 200 for HEAD / which indicates it is a file but does not return the expected headers which causes an error.\r\n\r\nRather than fix this for S3, just automatically return / as not existing for any storage that does not support paths.\r\n\r\nAlso add some defensive checks to prevent this from generating a segfault if it happens again."
    },
    {
        "commit": "0eb5b22ffa02bb01e8dcf013c7b716c867d4acee",
        "date": "2021-03-15 17:24:58 -0400",
        "subject": "Add back performance tests lost during Github Actions switch.",
        "body": "These tests do not provide code coverage but testing them regularly is important so they work when needed."
    },
    {
        "commit": "6942ff569dd950a5146faa0bebfee69e241c4179",
        "date": "2021-03-15 12:54:14 -0400",
        "subject": "Include recreated system databases during selective restore.",
        "body": "Some standard system databases (e.g. postgres) may be recreated by the user and have an OID that makes them look like user databases.\r\n\r\nIdentify the standard three system databases (template0, template1, postgres) and restore them non-zeroed no matter what OID they have."
    },
    {
        "commit": "c0283eec99325cafe0b4e94750a8efc99976cccf",
        "date": "2021-03-12 17:13:34 -0500",
        "subject": "Explicitly free local processes after restore error unit test.",
        "body": "Local processes are still running after this error and it is best to free them before ending the test."
    },
    {
        "commit": "ec347847e5f1f38a646220bdbeb59b77d1c8e89f",
        "date": "2021-03-12 15:19:32 -0500",
        "subject": "Pass cipher type directly to backupFileProtocol().",
        "body": "Cipher type was inferred from the presence of cipherSubPass rather than being passed explicitly in order to maintain compatibility with Perl backupFile().\n\nNow that Perl is gone it makes sense to pass it explicitly, as we do elsewhere."
    },
    {
        "commit": "e07040c2e4a7fd290fa8c26f4297dc7a5b2b9ab1",
        "date": "2021-03-12 12:54:34 -0500",
        "subject": "Add HRN_STORAGE_TIME() harness macro.",
        "body": "Makes updating the time of a path/file more streamlined in tests.\n\nAlso update all tests where utime() was being used directly."
    },
    {
        "commit": "3c85a497a618aed8fe7a26463b4e281c513deb50",
        "date": "2021-03-11 14:40:14 -0500",
        "subject": "Add backup delta unit test.",
        "body": "This test was added to take the place of another test, which turned out not to be workable.\n\nEven so, it adds coverages at little cost so it seems worth keeping."
    },
    {
        "commit": "dc1052f1da0065bf5d8d1b8d50c93d16662dcb51",
        "date": "2021-03-11 14:11:21 -0500",
        "subject": "Remove extra spaces before macro continuation."
    },
    {
        "commit": "c18abb0af70307b6ec0bfeb08f713e32d8728aaa",
        "date": "2021-03-11 12:13:43 -0500",
        "subject": "Update to help.auto.c missed in 9506ffae and 92d12ccb."
    },
    {
        "commit": "92d12ccb9bd0787e30441794e2a2a4d4a4e0fe9c",
        "date": "2021-03-11 10:19:50 -0500",
        "subject": "Update selective restore documentation with caveats.",
        "body": "Recovery may error unless --type=immediate is specified. This is because after consistency is reached PostgreSQL will flag zeroed pages as errors even for a full-page write.\r\n\r\nFor PostgreSQL ≥ 13 the ignore_invalid_pages setting may be used to ignore invalid pages. In this case it is important to check the logs after recovery to ensure that no invalid pages were reported in the selected databases."
    },
    {
        "commit": "c862e9654aff198167efeb897957bf93c1afe453",
        "date": "2021-03-11 08:22:44 -0500",
        "subject": "Log archive copy during backup.",
        "body": "Copying can be a fairly expensive operation so it makes sense to log it so the user gets some status during long copy operations."
    },
    {
        "commit": "9506ffae39dd86d2c5454511026f1249097d96a2",
        "date": "2021-03-11 07:53:10 -0500",
        "subject": "Add compress-type clarification to archive-copy documentation.",
        "body": "It is best if the archive-push and backup commands have the same compress-type (e.g. lz4) when using archive-copy. Otherwise, the WAL segments will need to be recompressed with the compress-type used by the backup, which can be fairly expensive depending on how much WAL was generated during the backup."
    },
    {
        "commit": "28301199ebf647909ff31a0fe6df417bd44b6208",
        "date": "2021-03-10 18:42:22 -0500",
        "subject": "Rename FUNCTION_HARNESS_RESULT*() macros to FUNCTION_HARNESS_RETURN*().",
        "body": "When the FUNCTION_*_RESULT*() macros were renamed to FUNCTION_*_RETURN_*() in the core code the test harness macros were missed.\n\nUpdate them to make the naming consistent."
    },
    {
        "commit": "778adbf19f71ceb90071f01197bf189d59b14df0",
        "date": "2021-03-10 09:15:35 -0500",
        "subject": "Fix memory leak in backup during archive copy.",
        "body": "There was already leakage here but when the compression transcoding was added it became a deluge.\n\nThere is some argument to be made that the filters should clean themselves up better but a temp mem context makes sense here anyway so do that."
    },
    {
        "commit": "31c7824a4d84cbf5a0ba0938f4caa546fa67af0a",
        "date": "2021-03-10 08:10:46 -0500",
        "subject": "Allow stanza-* commands to be run remotely.",
        "body": "The stanza-create, stanza-upgrade and stanza-delete were required to be run on the repository host. When there was only one repository allowed this was not a problem.\r\n\r\nHowever, with the introduction of multiple repository support, this becomes more of a burden to the user, therefore the stanza-create, stanza-upgrade and stanza-delete commands have been improved to allow for them to be run remotely."
    },
    {
        "commit": "c4a3dc4e46406634fa0426d80a4fd2f1cd495285",
        "date": "2021-03-10 07:44:18 -0500",
        "subject": "Combine multi-repo release notes."
    },
    {
        "commit": "dde2e2326b8b8d732ebdc6e48764d0fc381062ca",
        "date": "2021-03-08 17:32:36 -0500",
        "subject": "Print module type (e.g. c or h) in stack trace.",
        "body": "Now that there are inline functions in .h files it is important to include the extension so the functions can be found when debugging."
    },
    {
        "commit": "fe4ba455ed7f5c0685ce928d5dec8ca1247736ac",
        "date": "2021-03-08 16:01:05 -0500",
        "subject": "Move configuration definition to src/build/config/config.yaml.",
        "body": "Moving to YAML allows the configuration data to be read by C programs.\n\nAlso go back to using YAML::XS since it is the only implementation that has proper boolean support."
    },
    {
        "commit": "1dbb3bf50b94dcc9d53dfe1e5ad57a17bd6d38e8",
        "date": "2021-03-08 13:31:13 -0500",
        "subject": "Multiple repository support.",
        "body": "Up to four repositories may be configured. A potential benefit is the ability to have a local repository for fast restores and a remote repository for redundancy.\r\n\r\nSome commands, e.g. stanza-create/stanza-update, will automatically work with all configured repositories while others, e.g. stanza-delete, will require a repository to be specified using the repo option. See the command reference for details on which commands require the repository to be specified.\r\n\r\nNote that the repo option is not required when only repo1 is configured in order to maintain backward compatibility. However, the repo option is required when a single repo is configured as, e.g. repo2. This is to prevent command breakage if a new repository is added later.\r\n\r\nThe archive-push command will always push WAL to the archive in all configured repositories but backups will need to be scheduled individually for each repository. In many cases this is desirable since backup types and retention will vary by repository. Likewise, restores must specify a repository. It is generally better to specify a repository for restores that has low latency/cost even if that means more recovery time. Only restore testing can determine which repository will be most efficient.\r\nFor single repository configurations there should be no change in behavior."
    },
    {
        "commit": "8b87e66448a30b07c12ac00cb2c6ee2f5f29f043",
        "date": "2021-03-05 17:48:53 -0500",
        "subject": "Update to help.auto.c missed in e7bbdf38."
    },
    {
        "commit": "a5f07dff0afdc776a04ca1c4554ad016168f5d63",
        "date": "2021-03-05 16:27:57 -0500",
        "subject": "Remove autoconf cache when configure is built."
    },
    {
        "commit": "e7bbdf38ecae3705908a267c91c7d98adec3f927",
        "date": "2021-03-05 12:57:07 -0500",
        "subject": "Fix option validity by role and make sections conform to C help.",
        "body": "The HTML command reference was showing some options that were not valid because it did not properly understand the new role validity system. Also, the custom section for the new repo option was not being honored.\n\nThis is a bit messy because it leads to some duplicated code in help.c but there doesn't seem to be any way to fix that with the Perl data structures as they are.\n\nThis code is being migrated to C so it doesn't seem worth messing with it too much with the risk of breaking other things."
    },
    {
        "commit": "088662d986288843d1bfd118b724091c93df4569",
        "date": "2021-03-05 12:13:51 -0500",
        "subject": "GCS support for repository storage.",
        "body": "GCS and GCS-compatible object stores can now be used for repository storage."
    },
    {
        "commit": "20bb544e7a321562bf0c9061a91369bb6a12d7c1",
        "date": "2021-03-05 08:41:15 -0500",
        "subject": "Fix .gitignore in doc directory.",
        "body": "doc/output/* was invalid and use output/ to exclude the dir as well as the files in it."
    },
    {
        "commit": "753b60d3d51b89798ce5126f599126c77bbbec03",
        "date": "2021-03-04 14:21:30 -0500",
        "subject": "Add missing assert."
    },
    {
        "commit": "95063f6812279cd59380fd72e16e67b631582bd0",
        "date": "2021-03-03 09:21:06 -0500",
        "subject": "Make --repo optional for remaining commands except stanza-delete.",
        "body": "Some commands (repo-*, verify) still required the --repo option but it makes sense to give them the same treatment as backup and simply use the first repo when one is not specified.\n\nThis leaves stanza-delete as the only remaining command that requires --repo. This is by design to enhance safe usage."
    },
    {
        "commit": "cb26e8c72d74cc36373a8e882a446ef0e37043ed",
        "date": "2021-03-02 17:00:08 -0500",
        "subject": "Update to help.auto.c missed in d1aa765a."
    },
    {
        "commit": "d1aa765a9d5f290738c1de00c5ea99d5f6056ba5",
        "date": "2021-03-02 13:51:40 -0500",
        "subject": "Consolidate less commonly used repository storage options.",
        "body": "The following options are renamed as specified:\r\n\r\nrepo1-azure-ca-file -> repo1-storage-ca-file\r\nrepo1-azure-ca-path -> repo1-storage-ca-path\r\nrepo1-azure-host -> repo1-storage-host\r\nrepo1-azure-port -> repo1-storage-port\r\nrepo1-azure-verify-tls -> repo1-storage-verify-tls\r\nrepo1-s3-ca-file -> repo1-storage-ca-file\r\nrepo1-s3-ca-path -> repo1-storage-ca-path\r\nrepo1-s3-host -> repo1-storage-host\r\nrepo1-s3-port -> repo1-storage-port\r\nrepo1-s3-verify-tls -> repo1-storage-verify-tls\r\n\r\nThe old option names (e.g. repo1-s3-port) will continue to work for repo1, but repo2, etc. will require the new names."
    },
    {
        "commit": "e64999db7744cad55117f582c2cd42fb4b836f6f",
        "date": "2021-03-01 13:44:47 -0500",
        "subject": "Add HttpUrl object.",
        "body": "Parse a URL into component parts."
    },
    {
        "commit": "1d77db31433032041bd1cf5ff318fb3630bd4500",
        "date": "2021-02-28 18:02:09 -0500",
        "subject": "Add storageInfoLevelType.",
        "body": "This allows the removal of the callback in the S3/Azure storage drivers that existed only to parse the size/time information.\n\nThe extra callback was required because not all callers of storage*ListInternal() want size/time info, so it was wasteful to add it to storage*ListInternal(). Now those callers can request type info only."
    },
    {
        "commit": "54c4eb0c10758879b4bf2b96efd2a1523ecccc21",
        "date": "2021-02-28 17:42:32 -0500",
        "subject": "Make remote storage objects writeable.",
        "body": "This wasn't exposed before because the remote protocol directly uses the storage driver, which bypasses the writeable checks.\n\nHowever, the upcoming GCS driver explicitly requests write permissions so remote operations fail when a write is required.\n\nIt would be far better if the remote itself was marked as writeable but that will require much more work."
    },
    {
        "commit": "46922ff2e98a7c1a3c7950c18d2a86653938dcb4",
        "date": "2021-02-28 17:31:23 -0500",
        "subject": "Fix comments."
    },
    {
        "commit": "0766b7e524f62c00d61d5588ef1491bbcccaf9a0",
        "date": "2021-02-28 17:27:48 -0500",
        "subject": "Suppress implicit-fallthrough warning.",
        "body": "Warning on missing breaks in switch statements works great until it is intended.\n\nSuppressing on a case by case basis varies by compiler and version so is not very practical. Our tests should be sufficient to the task of finding missing breaks."
    },
    {
        "commit": "a1341b4af013a757c60de0f0595e2839f2ac27e6",
        "date": "2021-02-28 17:00:41 -0500",
        "subject": "Make S3/Azure file missing error messages match Posix.",
        "body": "The S3 driver was missed when the constants were added and then Azure was copied from S3."
    },
    {
        "commit": "3fb6da6412fd403820ba92e5076cf3b36bda138c",
        "date": "2021-02-28 16:01:38 -0500",
        "subject": "Add missing linefeed."
    },
    {
        "commit": "3b8f0ef7ae8a81ae969934fff4ad3da299454b24",
        "date": "2021-02-26 16:52:59 -0500",
        "subject": "Add write fault-tolerance to archive-push command.",
        "body": "The archive-push command will continue to push even after it gets a write error on one or more repos. The idea is to archive to as many repos as possible even we still need to throw an error to PostgreSQL to prevent it from removing the WAL file."
    },
    {
        "commit": "a1280c41e530500e5bbde73a900683f6db207686",
        "date": "2021-02-26 15:58:11 -0500",
        "subject": "Refactor archive-push command warnings to work like archive-get.",
        "body": "Warnings are logged individually in the async log rather than all together."
    },
    {
        "commit": "13dc8e68d74fa9e06180e67b7e59994767b4a34d",
        "date": "2021-02-26 14:49:50 -0500",
        "subject": "Make --repo optional for backup command.",
        "body": "If there are multiple repos and the --repo option is not specified then backup will automatically select the highest priority repo."
    },
    {
        "commit": "9243962b9504787c6f4af42318af6dc27094136d",
        "date": "2021-02-25 12:03:44 -0500",
        "subject": "Allow custom config-path default with ./configure --with-configdir.",
        "body": "Add --with-confdir=DIR option to configure, which can be used to override the default configuration directory of /etc/pgbackrest.\r\n\r\nProbably in the future it would be better to just leverage ${sysconfdir} which is based on prefix, but since previously the config directory was hard coded to /etc/pgbackrest, we retain that default value by not relying on sysconfdir for now."
    },
    {
        "commit": "0ddc0380ff408f9ed6e8bcd4d328df500681ce77",
        "date": "2021-02-24 11:32:13 -0500",
        "subject": "Remove restore default repo from integration tests.",
        "body": "The default is now to scan all repos so update the integration tests to reflect that."
    },
    {
        "commit": "8f03c3574b40b589b19a601a48c469da8305fc78",
        "date": "2021-02-24 08:27:58 -0500",
        "subject": "Reduce default file log level for integration tests.",
        "body": "The real/all test could fill the ramdisk depending on which vm and pg version were selected.\n\nDebug level should be fine for most purposes and the level can be increased when needed."
    },
    {
        "commit": "065b2ff2300a9f06a8c32621fac521451ca942bd",
        "date": "2021-02-23 16:27:05 -0500",
        "subject": "Refactor info command repoMin/Max."
    },
    {
        "commit": "118d9e64fea71c2e049b52802e55f72f5793871b",
        "date": "2021-02-23 16:17:27 -0500",
        "subject": "Enhance restore command multi-repo support.",
        "body": "The restore command automatically defaults to selecting the latest backup from a single repository. With multiple repositories configured, the restore command will now default to selecting the latest backup from the first repository where backups exist. The order in which the repositories are checked is dictated by the pgbackrest.conf order.\n\nTo select from a specific repository, the --repo option can be passed (e.g. --repo=1). The --set option can be passed if a backup other than the latest is desired."
    },
    {
        "commit": "bec3e20b2cb061ef0413df24234ebe246ea53063",
        "date": "2021-02-23 15:34:28 -0500",
        "subject": "Add archive-get command multi-repo support.",
        "body": "Repositories will be searched in order for the requested archive file.\n\nErrors will be reported as warnings as long as a valid copy of the archive file is found."
    },
    {
        "commit": "e28f6f11e97a80e9c1adf1a6eaeeabbfc991914f",
        "date": "2021-02-23 12:20:02 -0500",
        "subject": "Expire continues if an error occurs processing a repository.",
        "body": "Errors are logged to the log file rather than thrown. If, after processing all repos, one or more errors occurred, then a single error error will be thrown to indicate there were errors and the log file should be inspected.\n\nAlso update log messages to be more consistent with new patterns."
    },
    {
        "commit": "e14036bf57866ea7c2ed4c6fdf7cc204a8f00cb7",
        "date": "2021-02-23 07:33:32 -0500",
        "subject": "Remove unused header files in S3 and Azure storage modules."
    },
    {
        "commit": "6fb9de9a48630722df3b398cacb09ae964dc825d",
        "date": "2021-02-23 06:35:45 -0500",
        "subject": "Use list to search for WAL segments to preserve in queueNeed().",
        "body": "The regular expression predates strLstFind() on sorted lists. Using the list is both simpler and faster."
    },
    {
        "commit": "00b60e564eef13f8adba0ab867fcde2c352669d6",
        "date": "2021-02-19 19:21:06 -0500",
        "subject": "Add base64url encoding.",
        "body": "For now only encoding is supported. Decoding is not needed and may never be."
    },
    {
        "commit": "a1f4fd32a1790e569ccae3598cd9648bb25d13b6",
        "date": "2021-02-19 19:03:42 -0500",
        "subject": "Add ASSERT_MSG().",
        "body": "Used when execution reaches an invalid location rather than an invalid condition."
    },
    {
        "commit": "f6c3262861252b24e7e0cffd6d67e0c5e3291f3e",
        "date": "2021-02-19 18:25:50 -0500",
        "subject": "Do not expose valid/validate functions from encode module.",
        "body": "These functions have never been used externally. Validation is always part of decoding so performing validation separately would be wasteful."
    },
    {
        "commit": "edab2a0b89eabc5fd5ba6e795d938670bd5d3105",
        "date": "2021-02-19 17:57:13 -0500",
        "subject": "Use switch rather than if-else for encoding types.",
        "body": "This is more efficient and the error case can be an assert rather than a runtime error.\n\nFor extra safety initialize destinationSize to SIZE_MAX to increase the chances of an error if the switch fails."
    },
    {
        "commit": "abcbe0f9c1804ecb1b93b811cfb0a362c17e1b85",
        "date": "2021-02-19 17:25:00 -0500",
        "subject": "Combine encode module files into a single file.",
        "body": "There is not enough code here to justify multiple files and declaring the functions for each encoding as static allows the compiler to inline where appropriate."
    },
    {
        "commit": "d4856096587c72daee76f8ad8408db677a16d6dd",
        "date": "2021-02-19 17:05:15 -0500",
        "subject": "Add strNewEncode(), strCatEncode(), and bufNewDecode().",
        "body": "These constructors wrap encodeToStr() and decodeToBin(), making them convenient and safe by eliminating the need to create intermediate buffers. Encoding/decoding is performed directly into the target String/Buffer. Sizing of the destination buffer is handled by the new functions so it doesn't have to be done at each call site."
    },
    {
        "commit": "5b98968605d5ce73918ee84d8bb3ec83b6f21c65",
        "date": "2021-02-19 10:29:29 -0500",
        "subject": "Do not lower-case help summaries when first word is an acronym.",
        "body": "If the second letter is capital or a digit then the word is likely an acronym so don't lower-case the first letter.\n\nFor now only the digit case is checked since there are no summaries with a capital as the second letter."
    },
    {
        "commit": "66a4ff496afe63305cb1a437bcb52d1efc11edf7",
        "date": "2021-02-19 09:05:32 -0500",
        "subject": "Encode path before passing to HttpRequest.",
        "body": "GCS requires mixed encoding in the path so encoding inside HttpRequest does not work.\n\nInstead, require the path to be correctly encoded before being passed to HttpRequest."
    },
    {
        "commit": "1b4b3538cc218f66ed1e903c3caeade4b0ab1120",
        "date": "2021-02-19 08:22:50 -0500",
        "subject": "Rename uri to path where appropriate in HTTP and storage modules.",
        "body": "The path was originally named uri due to the canonicalized path being called \"canonicalized uri\" in the S3 authentication documentation. The name got propagated everywhere from there.\n\nThis is not correct for general usage, however, so rename to path when describing the path component of an HTTP request."
    },
    {
        "commit": "dcb79ab8fb18c63c2d56ecacd9d680b999ea044b",
        "date": "2021-02-19 07:32:40 -0500",
        "subject": "Decode JSON \\u escaped characters.",
        "body": "ASCII may occasionally be encoded (e.g. &) to prevent ambiguity depending on where the JSON is located.\n\nOnly ASCII can be decoded. In general Unicode should not be encoded in JSON."
    },
    {
        "commit": "c4243331de250926328045aa25c60a0c94262fa2",
        "date": "2021-02-19 07:24:59 -0500",
        "subject": "Silence chmod warning of empty path when removing unit test data."
    },
    {
        "commit": "3837e61a7504b1e211e4b3a70cbe97343c1cf2e6",
        "date": "2021-02-18 13:29:09 -0500",
        "subject": "Fix option warnings breaking async archive-get/archive-push.",
        "body": "Option warnings will cause the async process to fail because a warning is logged but stdout is closed so the process aborts.\r\n\r\nThis bug has existed for quite some time, but it was made worse by abb8ebe because now the async role can have different valid options than the default role. Previously at least a warning would be emitted before the async process died.\r\n\r\nFix this by only allowing warnings for the default role. Warnings were already suppressed for local and remote roles so the logic already exists."
    },
    {
        "commit": "d7befd4189cbfafb8984468fc13318fa087dc812",
        "date": "2021-02-16 16:28:19 -0500",
        "subject": "Fix tests that ensure log levels are not set for local/remote roles.",
        "body": "These tests were broken because they were being gated by resetLogLevel. So they were not setting the log levels, but not because of the role setting. Because resetLogLevel was being checked last coverage testing indicated that the tests were working.\n\nFix the resetLogLevel parameter in the tests and move resetLogLevel to be tested first so coverage reporting works as expected. This isn't perfect but it is an improvement."
    },
    {
        "commit": "d29855bd0bf8b957fa8c06445d22e425c443a704",
        "date": "2021-02-12 10:08:47 -0500",
        "subject": "Fix stack overflow in cipher passphrase generation.",
        "body": "The destination buffer on the stack was not large enough to contain the zero-terminating character.\r\n\r\nIncrease the buffer size and add an assertion to prevent regressions.\r\n\r\nFound on arm64 running musl libc. Other architectures and glibc do not seem to be affected though it is clearly a bug."
    },
    {
        "commit": "920c746adb1f4db5850bc2e5fdfbb5e1b89d313f",
        "date": "2021-02-10 15:54:37 -0500",
        "subject": "Better exclusions for configure help.",
        "body": "Exclude known unused options rather than trying to include used options. This works better when new options are added."
    },
    {
        "commit": "6a717e032f1309ddc9dc955042b5e2ac2bc7324d",
        "date": "2021-02-10 14:46:26 -0500",
        "subject": "Set config path in configure script.",
        "body": "This allows the config path to be modified with a parameter to the configure script, though this commit does not do that.\n\nUpdate the Perl code generator to allow literals so that defaults can be C defines rather than static strings."
    },
    {
        "commit": "3408f1ee2ee3f774699a15de045e0afe3eaf9a26",
        "date": "2021-02-10 12:03:52 -0500",
        "subject": "Enhance expire command multi-repo support.",
        "body": "The expire command has been enhanced to expire backups and archives from all configured repositories by default.\n\nIn addition, it will accept the --repo option to expire backups and archives only from the specified repository. Using the --repo options the --set option can also be refined further to the specified repo. If --set is provided but the --repo option has not, then all repositories will be searched and retention settings will be applied on each whether the backup set has been found or not."
    },
    {
        "commit": "26cbebbda7b04d0b142e28b41205337717959616",
        "date": "2021-02-10 09:10:51 -0500",
        "subject": "Use latex sloppypar to fix monospace wrapping in PDF rendering.",
        "body": "Monospaced identifiers could end up running over if latex was not able to find a place to break the line. Using sloppypar forces breaks so monospaced identifiers don't run over or get broken up.\n\nAlso add vspace to admonitions so they have some separation from the prior text."
    },
    {
        "commit": "c7d7280fa8f2b91cca2517b1bdab4b40603b9bd6",
        "date": "2021-02-08 16:36:38 -0500",
        "subject": "Ensure test user has permissions before removing test files.",
        "body": "This allows files to be deleted even when tests have limited the permissions."
    },
    {
        "commit": "b2bba678a0c7de2a8a0e2c949c68c4897e986151",
        "date": "2021-02-08 16:28:16 -0500",
        "subject": "Add missing linefeeds."
    },
    {
        "commit": "b9f0070d91ef79dab3ee34015418f0d3bd941089",
        "date": "2021-02-08 13:44:50 -0500",
        "subject": "Update config.guess and config.sub to latest versions."
    },
    {
        "commit": "00f06065e70916f626e4a5278fed6a1f23898c4c",
        "date": "2021-02-08 13:18:22 -0500",
        "subject": "Begin v2.33 development."
    },
    {
        "commit": "aadc9e2fe6ac54783e61c1ff1660feea4d7b1da0",
        "date": "2021-02-08 09:08:16 -0500",
        "subject": "v2.32: Repository Commands"
    },
    {
        "commit": "d350d1cc2139038d6f45cfcb5b59a5dc5994d269",
        "date": "2021-02-05 11:48:07 -0500",
        "subject": "Improve expire command documentation."
    },
    {
        "commit": "b65c370346948708af6f762770836aa27b1acf86",
        "date": "2021-02-05 10:39:03 -0500",
        "subject": "Add repo-get command."
    },
    {
        "commit": "218cd078a65f4cf15191cc9232eda8d576523592",
        "date": "2021-02-05 10:07:43 -0500",
        "subject": "Add repo-ls command."
    },
    {
        "commit": "73f61a1f60856d6d7a05d36458981c46222cf3cf",
        "date": "2021-02-04 17:24:42 -0500",
        "subject": "Add missed comment."
    },
    {
        "commit": "9154d730308f4bf7a37e4a7c513d45b845d2a2cd",
        "date": "2021-02-02 17:05:55 -0500",
        "subject": "Add -g accidentally removed in 4e8d469f.",
        "body": "The tests all run fine without debug info but gdb and valgrind are a lot less useful without it."
    },
    {
        "commit": "4b46115345c8eddaa658bc2051dba30676444fef",
        "date": "2021-02-02 13:43:14 -0500",
        "subject": "Add archive-mode-check option.",
        "body": "This option disallows the PostgreSQL archive_mode=always setting and disabling it allows the setting."
    },
    {
        "commit": "101bf5d11466990092530709e419e83b0d9ce4d4",
        "date": "2021-02-01 14:50:22 -0500",
        "subject": "Log configuration parameters in config test harness.",
        "body": "This makes it easier to find the current configuration in tests."
    },
    {
        "commit": "9baf5d7da7bc7107584c613ccf8ef7192d304ef5",
        "date": "2021-02-01 14:42:22 -0500",
        "subject": "Set dry-run before updating options in config test harness.",
        "body": "This is the same order that is used in cfgLoad() so apply it here as well.\n\nAlso remove vestigial HRN_FEATURE_STORAGE define."
    },
    {
        "commit": "67d444b9e8673aafa6c68ef14e8a7352dda9571e",
        "date": "2021-02-01 09:22:01 -0500",
        "subject": "Add bufEmpty().",
        "body": "This seems more readable than bufUsed() == 0, just like 7d6c0319."
    },
    {
        "commit": "7d6c0319f0cafa1b0ac0d62db57f3970290b40e2",
        "date": "2021-01-29 14:27:56 -0500",
        "subject": "Add lstEmpty(), strLstEmpty(), and varLstEmpty().",
        "body": "This seems more readable than lst*Size() == 0.\n\nHopefully this will also eliminate usage of lst*Size() > 0/lst*Size() != 0 variants for the inverse."
    },
    {
        "commit": "5281e314221538ca2c09a36cd0a3110458457dbe",
        "date": "2021-01-27 17:25:13 -0500",
        "subject": "Add configurable error handlers.",
        "body": "The stackTrace and memContext error handlers were hard-coded which made testing the error module in isolation impossible.\n\nMaking the error handlers configurable also makes adding new ones in the future easier."
    },
    {
        "commit": "8e9f04cc3290f378b90120243b3694dfb113fe16",
        "date": "2021-01-27 16:54:41 -0500",
        "subject": "Add HRN_INTEST_* define to indicate when a test is being run.",
        "body": "This is useful for initialization that needs to be done for the test and all subsequent tests.\n\nUse the new defines to implement initialization for sockets and statistics."
    },
    {
        "commit": "d5b919e65772557f98a211a1e1628c8192053df2",
        "date": "2021-01-27 16:33:01 -0500",
        "subject": "Update expire command log messages with repo prefix.",
        "body": "In preparation for multi-repo support, a repo tag is added in this commit to the expire command log and error messages. This change also affects the expect logs and the user-guide. The format of the tag is \"repoX:\" where X is the repo key used in the configuration.\r\n\r\nUntil multi-repo support has been completed, this tag will always be \"repo1:\"."
    },
    {
        "commit": "5d34bf3f38ff8ce3f88c8aed6c6ff01eb929d62b",
        "date": "2021-01-27 11:50:10 -0500",
        "subject": "Move cvtDoubleToStr() to strNewDbl().",
        "body": "This is a more logical location and it reduces the dependencies required to compile the common/convert module."
    },
    {
        "commit": "87eb081a8f7bf35f7f993316a17d5d42ad225176",
        "date": "2021-01-27 10:57:42 -0500",
        "subject": "Make unit test builds incremental based on coverage in prior tests.",
        "body": "When building tests only include files covered by the current test or by prior tests. This increases performance (less compilation and linking) and also helps detect cross-dependencies in the code. Since there are currently cross-dependencies the depend option is used to document them and allow compilation. The idea is to resolve them incrementally over time.\n\nAdd the harness option to include harness modules when the minimum requirements for compilation are met.\n\nAdd the feature option to indicate which features are now available in the harness (based on source modules already tested). This allows conditional compilation in harness modules when some features are not yet available."
    },
    {
        "commit": "73a8e91868f80b21e35685966aec343cca6a9c7a",
        "date": "2021-01-27 10:29:23 -0500",
        "subject": "Disable DEBUG_TEST_TRACE when NDEBUG defined.",
        "body": "The underlying functions used by the FUNCTION_TEST*() macros will not be able when NDEBUG is defined so disable them.\n\nIt would be better to change #ifndef NDEBUG to #ifdef DEBUG_TEST_TRACE where needed to bring these into alignment but that will be a larger effort best undertaken separately."
    },
    {
        "commit": "088df03355be88150e8a91c9d51dd73c895f5e4c",
        "date": "2021-01-26 19:59:14 -0500",
        "subject": "Fix indentation in .cirrus.yml."
    },
    {
        "commit": "14f2b41bdaf44eb697b80cbdf58289235234bb74",
        "date": "2021-01-26 19:58:28 -0500",
        "subject": "Fix .editorconfig indent for yaml files."
    },
    {
        "commit": "59e57c7231488006e5a3681dc72c9328d1998450",
        "date": "2021-01-26 19:55:20 -0500",
        "subject": "Remove storageLocal() dependency from common/parse module.",
        "body": "storageLocal() requires the storage helper which is a huge dependency for this module.\n\nPass in a storage object instead."
    },
    {
        "commit": "468507843f0217f5eb7e9ba437691f4b6dcdb760",
        "date": "2021-01-26 19:34:39 -0500",
        "subject": "Replace storageLocal() with storageTest in postgres/interface test."
    },
    {
        "commit": "77823af53db1e8efb43def926e5b5e63d989c8c4",
        "date": "2021-01-26 19:31:48 -0500",
        "subject": "Add test in common/error module.",
        "body": "This is required for coverage when the common/error module is run with just the source files required to make it run, rather than all source files as we do now.\n\nLikely something in the harness is providing coverage, but cover it explicitly so the coverage won't be lost if the harness changes."
    },
    {
        "commit": "85ad1aa2be9a2702dbcd923bb1a4e08abc4c7445",
        "date": "2021-01-26 12:47:52 -0500",
        "subject": "Remove version comment left over from Perl."
    },
    {
        "commit": "456a300bb703024df46cbc34746649c7b54181b2",
        "date": "2021-01-26 12:10:24 -0500",
        "subject": "Remove too-verbose braces in switch statements.",
        "body": "The original intention was to enclose complex code in braces but somehow braces got propagated almost everywhere.\n\nDocument the standard for braces in switch statements and update the code to reflect the standard."
    },
    {
        "commit": "f669da7dcc228da2167b6ad1966a9c035506553f",
        "date": "2021-01-26 11:25:29 -0500",
        "subject": "Use minio latest in documentation and integration tests.",
        "body": "At one time Minio had stability problems with latest but that appears to be resolved for the last year or so.\n\nUse latest so we'll know if something breaks since Minio is frequently used in production."
    },
    {
        "commit": "2e60b937097313be135bce551b59e3f6b9ebb51a",
        "date": "2021-01-26 11:21:36 -0500",
        "subject": "Add backup verification to internal verify command.",
        "body": "This is phase 2 of verify command development (phase 1 was processing the archives and phase 3 will be reconciling the archives and backups). In this phase the backups are verified by verifying each file listed in the manifest for the backup and creating a result set with the list of invalid files, if any. A summary is then rendered.\r\n\r\nUnit tests have been added and duplicate tests have been removed."
    },
    {
        "commit": "5d48dd2fb3717167062acf7c157d0caffb77b2e4",
        "date": "2021-01-25 11:33:41 -0500",
        "subject": "Use explicit characters instead of Posix class in restore expression.",
        "body": "It is not clear how portable/supported the Posix character classes are. This way seems simpler and more portable.\n\nUpdated from 5c98157b."
    },
    {
        "commit": "e251ec574a29b9137defc0f493bc84ce5b82014a",
        "date": "2021-01-25 11:14:28 -0500",
        "subject": "Add note about removing configuration to stanza-delete documentation."
    },
    {
        "commit": "00fac1c0d18aef6c29067bb00500abc5867f702c",
        "date": "2021-01-25 09:19:05 -0500",
        "subject": "Improve info command text output and --set handling.",
        "body": "The info command provides total sizes for files in the backup on the database as well as the repository. The text output and associated user documentation has been updated to provide more clarity regarding the sizes being displayed.\n\nIn addition, the info command is updated to allow a user to optionally specify the repository when requesting a specific backup set. In this case, the text output will reflect the status of the stanza, the cipher types and archive min/max over all the repositories instead of a single repository when the repo option is specified."
    },
    {
        "commit": "8e48308b0b4110cc11276231c4dee2067ca54e38",
        "date": "2021-01-24 18:30:14 -0500",
        "subject": "Add XML::Checker::Parser to MacOS Perl modules."
    },
    {
        "commit": "ee71eb28c4ea7986cfd86cd00a9cd30cd058669a",
        "date": "2021-01-24 16:27:00 -0500",
        "subject": "Add .editorconfig to help enforce project style."
    },
    {
        "commit": "4e8d469f4d02e0956fcbafc54e762252c8964513",
        "date": "2021-01-24 16:24:14 -0500",
        "subject": "Use configure to generate Makefile variables for unit tests.",
        "body": "The unit test Makefile generation was a hodge-podge of constants and rules based on distros/versions that easily got out of date and did not work on an unknown system. All of this dates from the mixed Perl/C unit test implementation.\n\nInstead use configure to generate most of the important Makefile variables, which allows the unit tests to run on multiple platforms, e.g. MacOS and FreeBSD.\n\nThere is plenty of work to be done here and not all the unit tests work on MacOS and FreeBSD for various reasons.\n\nAs a POC update the MacOS and FreeBSD tests on Cirrus-CI to run a few command unit tests."
    },
    {
        "commit": "ef2dc6d3f4fe10251e5ed67375723ec20b87e096",
        "date": "2021-01-24 15:48:32 -0500",
        "subject": "Add chmod to make file removal after tests more reliable.",
        "body": "MacOS does not allow files to be removed recursively unless the owner has write and execute permissions on all the directories.\n\nSome tests leave the permissions in a bad state so fix them up before trying to delete."
    },
    {
        "commit": "04e84da0effa5d3be312c123e5203a9ebc1d04d3",
        "date": "2021-01-24 15:35:40 -0500",
        "subject": "Allow the make command to be configured for test.pl."
    },
    {
        "commit": "aafd2f528d0536f4a83cb7086b55bb6ff1e6d89c",
        "date": "2021-01-24 15:29:10 -0500",
        "subject": "Cast constants explicitly in command/backupCommon test.",
        "body": "Clang was not clear that these constants should be uint64_t.\n\nFound on MacOS M1."
    },
    {
        "commit": "d922cb6b8e3995cf0303184e2a2c24ed36f2d56b",
        "date": "2021-01-24 15:25:02 -0500",
        "subject": "Add wheel as possible group name in storage/posix test.",
        "body": "Some platforms use wheel as the group for symlinks instead of root."
    },
    {
        "commit": "88e54ee6c7156da4359134cfb2838925d16bc315",
        "date": "2021-01-24 15:22:29 -0500",
        "subject": "More reliable log expect in common/log test.",
        "body": "The exact message is platform dependent so get the platform error to use in the expect.\n\nIt doesn't matter what the message is as long as there is an error and it is logged."
    },
    {
        "commit": "cbccae05b8619019a17dd8bfe2fca8cc7f7cb098",
        "date": "2021-01-24 15:18:02 -0500",
        "subject": "Skip lz4 in performance/storage test when it is not present."
    },
    {
        "commit": "fda105ebd18f050d8071f62add2933ecbff8b8a7",
        "date": "2021-01-24 15:15:50 -0500",
        "subject": "Add casts to performance/storage test for 32-bit architectures."
    },
    {
        "commit": "d2057c53bd91ffb96d46d4ee71cc8029d30d6d49",
        "date": "2021-01-24 15:06:38 -0500",
        "subject": "Use YAML::Any module instead of YAML::XS in Perl.",
        "body": "YAML::XS requires libyaml so it not as portable as pure Perl versions of YAML.\n\nInstead of using YAML:PP just use the general YAML::Any module which uses whatever is installed. We are not concerned about performance for YAML so whatever works is fine."
    },
    {
        "commit": "ea0dc8c2cb5c7e6e9d4b09b4fbf451b2d30bfdc8",
        "date": "2021-01-24 13:39:13 -0500",
        "subject": "Add header required for test harness to compile on FreeBSD."
    },
    {
        "commit": "5c98157bce2ae74a11c04cc6ecc01cd067fadb9a",
        "date": "2021-01-24 11:46:55 -0500",
        "subject": "Use [[:blank:]] instead of \\s for leading space matching in restore.",
        "body": "This is more accurate since we don't really want lf/cr anyway, though the lines have already been split so that's not possible in this code for lf.\n\nFound on MacOS M1. FreeBSD also seems to be fine with the new expression."
    },
    {
        "commit": "3b05f77d083d03c34f47a2372e7eeb684ad5b655",
        "date": "2021-01-24 09:08:26 -0500",
        "subject": "Add optional warnings to configure.",
        "body": "These warnings do not exist on all compilers/versions but are useful when present."
    },
    {
        "commit": "4a83ca4f78c75e905b4b84aff1529ba91213c4dc",
        "date": "2021-01-24 08:55:13 -0500",
        "subject": "Remove semicolons from TEST_RESULT*() macros.",
        "body": "These prevented the macros from being used in single line statements (e.g. if-else).\n\nAlso fix some missing semicolons in macro invocations."
    },
    {
        "commit": "5cb9f166ecf191891f7defcb41d03f4b0ea93475",
        "date": "2021-01-24 08:23:59 -0500",
        "subject": "Add stderr to unit test error messages.",
        "body": "Messages on stderr were being lost due to the error suppression used to customize the error message.\n\nAlso update the formatting to be more informative and concise."
    },
    {
        "commit": "f95850c546ae6c5407eb0b1682362101d5e77c95",
        "date": "2021-01-24 08:12:31 -0500",
        "subject": "Fix logical -> bitwise boolean operator in backup unit test.",
        "body": "This unset more than the storageFeatureCompress flag but the test was not affected.\n\nFound on MacOS M1."
    },
    {
        "commit": "a7d32259cf00565986d065c93be25dc82bb1a024",
        "date": "2021-01-24 08:05:31 -0500",
        "subject": "Avoid NULL pointer arithmetic in MemContext unit test.",
        "body": "Similar to b23a2a0b. In this case add 1 to avoid a NULL pointer.\n\nFound on MacOS M1."
    },
    {
        "commit": "fe8ef3197e85ff30950867254cba15b9112f34bd",
        "date": "2021-01-24 07:58:07 -0500",
        "subject": "Add MacOS error messages to RegExp unit test."
    },
    {
        "commit": "483695cac6508b03b621742eef9940f4c1fe0bc9",
        "date": "2021-01-22 13:16:48 -0500",
        "subject": "Don't pass --ignore-missing-args to rsync on MacOS.",
        "body": "MacOS has a very old version of rsync that does not support this option.\n\nRather than require a newer version of rsync exclude the option since the plan is to remove the requirement for it."
    },
    {
        "commit": "708c3e9135d69a2d7ac670fe8efbc4ff08b95fa5",
        "date": "2021-01-22 12:52:30 -0500",
        "subject": "Move version check against release notes to release.pl.",
        "body": "This is a more appropriate place for the check and means test.pl can avoid loading any XML files if --no-gen is specified.\n\nThe XML::Checker::Parser module originally selected for XML in Perl is not very portable so the requirement reduces the number of platforms where tests can be run."
    },
    {
        "commit": "fdf1c299f90ccc3b02758af072a58e5d20eaf2c1",
        "date": "2021-01-22 11:51:36 -0500",
        "subject": "Remove unused VerifyFileResult struct."
    },
    {
        "commit": "b23a2a0baf51b27c3c02fc99074fb033ad61d4dd",
        "date": "2021-01-22 10:48:22 -0500",
        "subject": "Use uintptr_t in ASSERT_ALLOC_VALID() to avoid pointer arithmetic.",
        "body": "Clang justifiably complains about pointer arithmetic on a known NULL value during testing. We know this is fine but use uintptr_t to silence the warnings.\n\nFound on MacOS M1."
    },
    {
        "commit": "185a508f44bbb4cf939658424c2bdb8012cfcb0f",
        "date": "2021-01-22 09:50:29 -0500",
        "subject": "Add format attribute to stackTraceFmt().",
        "body": "Let the compiler know this is a printf-style function so a non-literal format is allowed.\n\nFound on MacOS M1."
    },
    {
        "commit": "a5ebaab249764ccb0727b481d4f7a65512117b34",
        "date": "2021-01-22 09:16:36 -0500",
        "subject": "Use enum for signalType in exitSignalName().",
        "body": "This should have been an enum all along but was somehow missed.\n\nFound on MacOS M1."
    },
    {
        "commit": "547b297387b2097e457c2893beefc1cb1d3ccd1d",
        "date": "2021-01-22 09:04:28 -0500",
        "subject": "Use uint variant to store enum in verifyProtocol().",
        "body": "Avoid the need for a cast by using a matching type.\n\nFound on MacOS M1."
    },
    {
        "commit": "8d883ea76b2e4d48bea3772367ca3e3257434a07",
        "date": "2021-01-21 18:30:24 -0500",
        "subject": "Fix return type for PQresultStatus().",
        "body": "Found on MacOS M1."
    },
    {
        "commit": "bc25e9bf056b7082a1e69a7a59affb1b61ae6f51",
        "date": "2021-01-21 17:36:33 -0500",
        "subject": "Change variant to uint when building option lists.",
        "body": "Enums are uints on most platforms so this works without casting.\n\nFound on MacOS M1."
    },
    {
        "commit": "0869b8afffed2664331a68f72194648593dc7b45",
        "date": "2021-01-21 17:29:24 -0500",
        "subject": "Cast result of cfgParseOptionId() to int.",
        "body": "It would probably make more sense to add an \"invalid\" enum value, but at least fix the cast for now. The function was originally designed to interface with Perl which required -1 in this case.\n\nFound on MacOS M1."
    },
    {
        "commit": "3f72eca90954e26cb060037b97aada4f6f323ccf",
        "date": "2021-01-21 17:26:12 -0500",
        "subject": "Remove useless casts of vsnprintf() return value.",
        "body": "The return value is not checked because we are happy with a truncated result in this case, which is guaranteed by passing the buffer size.\n\nFound on MacOS M1."
    },
    {
        "commit": "6a992a5884976555c20754d57b7ea1f1c30b7b5e",
        "date": "2021-01-21 17:23:24 -0500",
        "subject": "Add missing mode_t casts.",
        "body": "Found on MacOS M1 where mode_t is short."
    },
    {
        "commit": "4b3200961ed8aca74e2fb47feff40b9206fd59b4",
        "date": "2021-01-21 17:20:13 -0500",
        "subject": "Fix cast for timeval.tv_usec.",
        "body": "Found testing on MacOS M1."
    },
    {
        "commit": "6f529155b673fc5c04a51e6d2549655fe2667f3a",
        "date": "2021-01-21 17:17:03 -0500",
        "subject": "Remove useless assignment."
    },
    {
        "commit": "f32eb9b94ecf01d12f53a1bd6addeba81e811d7f",
        "date": "2021-01-21 15:21:50 -0500",
        "subject": "Partial multi-repository implementation.",
        "body": "Multi-repository implementations for the archive-push, check, info, stanza-create, stanza-upgrade, and stanza-delete commands.\r\n\r\nMulti-repo configuration is disabled so there should be no behavioral changes between these commands and their current single-repo implementations.\r\n\r\nMulti-repo documentation and integration tests are still in the multi-repo development branch. All unit tests work as multi-repo since they are able to bypass the configuration restrictions."
    },
    {
        "commit": "1333748550d61b98c83f0ea1e730ff8360328a8c",
        "date": "2021-01-21 14:20:39 -0500",
        "subject": "Fix incorrect variable in parameter logging."
    },
    {
        "commit": "d3d484b27c8f9b695ef283a789796751cba43531",
        "date": "2021-01-21 11:59:19 -0500",
        "subject": "Use standard environment variable format in hrnCfgEnv*().",
        "body": "The option portion was not being capitalized or replacing - with _.\n\nThe parser does not care, but in cases where we have mixed hrnCfgEnv*()/setenv() calls the env variable might not get cleared, which can lead to funny test results."
    },
    {
        "commit": "4e56948128878cbeb8ac6faf89d65aae644679bc",
        "date": "2021-01-19 12:07:05 -0500",
        "subject": "Compensate for numeric auto conversion in newer Perls."
    },
    {
        "commit": "d9fae0984853173f9f867f2eaf640a21e424ec32",
        "date": "2021-01-19 11:59:47 -0500",
        "subject": "Remove errant todo comment.",
        "body": "The test is not a duplicate of the one above because it adds the archive-async option."
    },
    {
        "commit": "a1365b26d4c2383eaacea3714eeb521435ca79aa",
        "date": "2021-01-18 23:41:09 -0500",
        "subject": "Remove duplicate mkdir for /tmp/pgbackrest in Vagrantfile."
    },
    {
        "commit": "8322dfd7af97e307b952cfb37e6a65b65f55be0f",
        "date": "2021-01-18 23:39:14 -0500",
        "subject": "Add pkg-config package to Vagrantfile.",
        "body": "Newer Ubuntu versions do not install this package by default."
    },
    {
        "commit": "49582c13cfbb49736cc50d333ec74e5be1b9388e",
        "date": "2021-01-18 23:05:55 -0500",
        "subject": "Use test lock path in archive-get test.",
        "body": "The default lock path should fail since the test VM gives ownership of /tmp to root.\n\nFor some reason this was not working as expected under u18 but it fails under u20."
    },
    {
        "commit": "065b5f93aec471b4ac5c189520eb354a3d078b5f",
        "date": "2021-01-15 10:56:51 -0500",
        "subject": "Improve test coverage list handling.",
        "body": "All unit tests now require full coverage so the \"full\" keyword is obsolete and has been removed.\n\nThe covered code modules are simply listed, with only \"no code\" modules annotated."
    },
    {
        "commit": "a8fb285756853bbe2f7b2e88bc817236d23b7ed8",
        "date": "2021-01-15 10:15:52 -0500",
        "subject": "Improve archive-get performance.",
        "body": "Check that archive files exist in the main process instead of the local process. This means that the archive.info file only needs to be loaded once per execution rather than once per file to get.\r\n\r\nStop looking when a file is missing or in error. PostgreSQL will never request anything past the missing file so there is no point in getting them. This also reduces \"unable to find\" logging in the async process.\r\n\r\nCache results of storageList() when looking for multiple files to reduce storage I/O.\r\n\r\nLook for all requested archive files in the archive-id where the first file is found. They may not all be there, but this reduces the number of list calls. If subsequent files are in another archive id they will be found on the next archive-get call."
    },
    {
        "commit": "38583b6414d8d55c92a25a1d32c4bc9457b912c4",
        "date": "2021-01-15 08:59:16 -0500",
        "subject": "Add cfgOptionValid() check to assert in cfgOptionIdxTest().",
        "body": "Skip the rest of the assert if the option is not valid since this function is intended to work with invalid options."
    },
    {
        "commit": "7f263dceb7aee6c8d43313ac954d279868be3661",
        "date": "2021-01-15 08:30:56 -0500",
        "subject": "Fix inverted cfgOption*() calls.",
        "body": "These currently work because repoIdx is always 0."
    },
    {
        "commit": "298cc4d5e5d79b400beac4b70352e625e56b0ed6",
        "date": "2021-01-14 10:39:25 -0500",
        "subject": "Remove non-conforming periods and reformat some comments."
    },
    {
        "commit": "c2c702c09d4ac3ea858d0450695a789c999b99da",
        "date": "2021-01-13 17:32:42 -0500",
        "subject": "Add co7 package to support llvm.",
        "body": "This is required for new package versions.\n\nAlso remove the obsolete 9.2 package and update the supported versions list."
    },
    {
        "commit": "a57e0be395146aa13d136b583a015c8077adbadd",
        "date": "2021-01-13 13:01:40 -0500",
        "subject": "Add duplicate WAL test to synchronous archive-get."
    },
    {
        "commit": "22fd223fc393908f6f0d5f0a64ee8f93317ce24e",
        "date": "2021-01-13 10:24:47 -0500",
        "subject": "Improve logging in archive-get command.",
        "body": "Append \"asynchronously\" to messages when the async process fetched the file (not in the actual async process log, though).\n\nAdd \"repo1\" to make it clear what archive we are talking about. This is not very useful by itself but soon we'll be able to add the archive id, which is very useful.\n\nAdd constants for messages that are used multiple times to ensure they stay consistent."
    },
    {
        "commit": "c6aaf66e9d8c83ba7443bcce145802b1147a4daf",
        "date": "2021-01-13 07:49:47 -0500",
        "subject": "Add FUNCTION_LOG_RETURN_STRUCT() and update where appropriate.",
        "body": "The FUNCTION_LOG_RETURN() macro requires logging macros (e.g. FUNCTION_LOG_*_TYPE and FUNCTION_LOG_*_FORMAT) when returning a struct but these macros don't deliver much value since they only output the name of the struct rather than the contents. A copy of the struct is also made during this operation, which is wasteful.\n\nFUNCTION_LOG_RETURN_STRUCT() does not make a copy of the struct and does not require any logging macros. Returned structures are logged as \"struct\" but this could be made more accurate using __typeof in the future.\n\nStructures as parameters are not addressed here and work as before, i.e. they require logging macros."
    },
    {
        "commit": "b21ed979821b247ed50ccd48c515ed3d742dc9da",
        "date": "2021-01-12 18:47:19 -0500",
        "subject": "Check for missing files in queueNeed().",
        "body": "Missing files would indicate that another process is running on the same spool path, which would be a very bad thing.\n\nThis check doesn't cost any additional I/O so it seems like a good idea."
    },
    {
        "commit": "aae6f06bcf69794e843486bb88c490f180d5f2e5",
        "date": "2021-01-12 18:20:28 -0500",
        "subject": "Add tests for the archive-get command.",
        "body": "Provide additional coverage for less common use cases."
    },
    {
        "commit": "aeee83044d97555723fdc6039be1c4d51e329d28",
        "date": "2021-01-12 12:38:32 -0500",
        "subject": "Fix resume after partial delete of backup by prior resume.",
        "body": "If files other than backup.manifest.copy were left in a backup path by a prior resume then the next resume would skip the backup rather than removing it. Since the backup path still existed, it would be found during backup label generation and cause an error if it appeared to be later than the new backup label. This occurred if the skipped backup was full.\r\n\r\nThe error was only likely on object stores such as S3 because of the order of file deletion. Posix file systems delete from the bottom up because directories containing files cannot be deleted. Object stores do not have directories so files are deleted in whatever order they are provided by the list command. However, the issue can be reproduced on a Posix file system by manually deleting backup.manifest.copy from a resumable backup path.\r\n\r\nFix the issue by removing the resumable backup if it has no manifest files. Also add a new warning message for this condition.\r\n\r\nNote that this issue could be resolved by running expire or a new full backup."
    },
    {
        "commit": "96fd678662775032254906ed7365fad5c223ab74",
        "date": "2021-01-11 15:15:25 -0500",
        "subject": "Add job-retry and job-retry-interval options.",
        "body": "These options specify the number of local worker job retries and the retry interval after one immediate retry.\r\n\r\nThere is some value in allowing retries to be specified by the user but for the most part these options are for suppressing retries during testing, which can save a lot of time. The bug introduced in d1d25c7 and fixed in 8b86d5e also suggests it is better not to use retries in tests.\r\n\r\nRemove the default delayed retries for archive-get/archive-push, leaving only the immediate retry. These commands are retried by PostgreSQL so it doesn't make sense to do too many retries internally.\r\n\r\nThese options are currently internal."
    },
    {
        "commit": "8b86d5ea7a7dcdfaa087f1de05d4b1332235124d",
        "date": "2021-01-11 11:34:03 -0500",
        "subject": "Restore storageRepo() call in archiveGetProtocol().",
        "body": "This call was removed by d1d25c71, which worked for archivePushProtocol() and verifyProtocol() since the encryption options are passed from the main process.\n\narchiveGetProtocol() still retrieves these options in the local process so the repo storage must be loaded first."
    },
    {
        "commit": "f35d69c1c73719caaa5b6222ea6a836b84f933d5",
        "date": "2021-01-08 16:48:32 -0500",
        "subject": "Refactor common/archiveGet unit test.",
        "body": "The test was pretty old and written in stages during the migration, so storage use was a bit archaic and the organization was poor.\n\nUpdate using the new storage macros and reorganize the tests to provide better coverage."
    },
    {
        "commit": "8567b7f733ce821dad8955a8086209e9b592ebf2",
        "date": "2021-01-08 16:29:56 -0500",
        "subject": "Make archive-get locality error generate a global.error file.",
        "body": "Moving this error into the try block ensures that a global.error file is generated, which will be seen by archive-get."
    },
    {
        "commit": "7d3d6ecbe1e04d577687e8d4da7465c40f211344",
        "date": "2021-01-08 16:14:26 -0500",
        "subject": "Add storage test macros for common operations.",
        "body": "The macros should make it much easier to write complex tests, especially when compression and encryption are involved.\n\nUpdate the command/archiveGet test to show how the new macros are used."
    },
    {
        "commit": "97c260bb56b14842e5fa272b6f5ef54cbc880dcb",
        "date": "2021-01-08 12:49:33 -0500",
        "subject": "Add TEST_RESULT_STRLST_*() unit test macros.",
        "body": "This avoids the need for strLstJoin() when testing lists.\n\nLists are \\n delimited (rather than command or pipe) so that non-trivial lists can be more easily diff'd."
    },
    {
        "commit": "1ef36b403235320269bc4a4f232ff0157447f351",
        "date": "2021-01-08 10:54:17 -0500",
        "subject": "Add clarifications to unit test string diff messages."
    },
    {
        "commit": "17e29eb1bdeb0fd70516eb1f835e3b87062923ca",
        "date": "2021-01-08 10:45:26 -0500",
        "subject": "Improve formatting of unit test titles.",
        "body": "Add separation and some visual cues to help identify the start of a test.\n\nAlso add a counter which can be used to search for a specific test, which is useful if there is a lot of debug output to search through."
    },
    {
        "commit": "dc0284412bf17cfc65218702f081dfca6da0b9a6",
        "date": "2021-01-08 10:35:26 -0500",
        "subject": "Add test paths for pg, repo, and spool.",
        "body": "These may be used as standard locations for these paths in tests."
    },
    {
        "commit": "6bdbcdc7fe9edf51979ec082cf6616e978dc2b6e",
        "date": "2021-01-08 10:32:57 -0500",
        "subject": "Create TEST_PATH define in test.c.",
        "body": "This allows paths to be constructed without using sprintf(), which makes the tests simpler and faster."
    },
    {
        "commit": "ca9c1707f020ee52348d488352e2a27fc16e14ec",
        "date": "2021-01-06 11:36:42 -0500",
        "subject": "Remove forks from command/archive-get test.",
        "body": "These were required to deal with the legacy Perl code being unable to load new options between tests.\n\nThe C code does not have this issue so remove the forks and update process ids in the log tests."
    },
    {
        "commit": "6e7a3eb38391b17fd82fccb4def1fae72532de4f",
        "date": "2021-01-05 18:11:28 -0500",
        "subject": "Remove archive-timeout from test in mock/archive.",
        "body": "No timeout is expected here but the small timeout prevents errors from being thrown.\n\nThis is not a bug since the error would be thrown on the next archive-get call but it does make the tests harder to debug when there is an error.\n\nIt is not clear why there was a timeout here at all. It is likely cruft from a prior test or a copy/paste error."
    },
    {
        "commit": "656e7112965ddb2fb31234f3bf7cc9d979f6d4af",
        "date": "2021-01-05 15:14:16 -0500",
        "subject": "Remove duplicate tests from command/infoTest.",
        "body": "Tests that are duplicated are being removed from the info command unit tests. Specifically tests where the only thing different was whether a lock was held or not which affects only the status display. Removing these tests will reduce churn in the upcoming multi-repo support."
    },
    {
        "commit": "a7491182dccade65fa84fc40524cac878b32caa3",
        "date": "2021-01-04 09:18:17 -0500",
        "subject": "Set build-max to 2 for Github actions.",
        "body": "Github runners only provide 2 virtual CPUs so the default build-max of 4 is not ideal."
    },
    {
        "commit": "9345fe4cb2e85d2a1273bfb072ccf7a427399350",
        "date": "2021-01-03 13:56:37 -0500",
        "subject": "Update LICENSE.txt and PostgreSQL copyright for 2020."
    },
    {
        "commit": "af17bc4b6d249d29617085aae696d630fcffac98",
        "date": "2020-12-31 15:34:07 -0500",
        "subject": "Update test to work with different collations.",
        "body": "The data returned by the protocol has not been sorted yet so it is vulnerable to differences in collation.\n\nMultiple records are not needed for this test so limit it to one path to solve this issue."
    },
    {
        "commit": "0e1612cda16ddad3fa537351b8ef23a4912367d0",
        "date": "2020-12-31 12:29:11 -0500",
        "subject": "Remove explicit command lists where they equal the default.",
        "body": "This reduces noise in the file and new commands will automatically get these options."
    },
    {
        "commit": "108038292c1aa96a261c152d8b7995a20ae01f51",
        "date": "2020-12-31 12:13:20 -0500",
        "subject": "Audit options valid for expire command."
    },
    {
        "commit": "0acfcb669e7458ccc518d9fc1c704772be914c76",
        "date": "2020-12-31 11:10:48 -0500",
        "subject": "Audit options valid for start/stop commands."
    },
    {
        "commit": "82a75268c1cc7bef2eedacec1c8464e26da00804",
        "date": "2020-12-31 10:22:09 -0500",
        "subject": "Remove option exclusions now handled by command role validity.",
        "body": "These options were explicitly excluded because it was possible for them to be mangled by SSH if they contained spaces.\n\nThey are now excluded by command role validity rules."
    },
    {
        "commit": "09fdde359c8b70653fcafe9ad39fcb25bdbc672b",
        "date": "2020-12-31 10:08:58 -0500",
        "subject": "Limit pg option validity and make it command-line only.",
        "body": "The pg option only has one current usage, to let the backup local know which pg index it should copy files from.\n\nThere are other possible uses for this option, but they need thought, tests, and documentation."
    },
    {
        "commit": "951cfa9e900a5ff98acc2a9ce8df9d83e0314862",
        "date": "2020-12-31 08:12:35 -0500",
        "subject": "Remove repo option.",
        "body": "This option was added in advance of the multi-repo functionality but it has no purpose and it is not clear what the validity rules should be.\n\nThe option will be added back when multi-repo functionality is committed."
    },
    {
        "commit": "e3762945c2344d6d2f8fa727cbbc40e87300e75c",
        "date": "2020-12-30 17:33:33 -0500",
        "subject": "Call storageRemoteInfoParse() in prior context to avoid dups.",
        "body": "This results in fewer data duplications and makes the code less fragile since new data add in storageRemoteInfoParse() does not need to be added to an additional list for duplication."
    },
    {
        "commit": "cc901632337ed9d50801037e1a31ad66ade6ad21",
        "date": "2020-12-30 16:17:56 -0500",
        "subject": "Add empty archive array to info command JSON when stanza is missing.",
        "body": "There is an inconsistency when the JSON is output for the case when a stanza is requested and it does not exist in the repo. This was the only case where the archive array was not added to the JSON. Adding it will simplify the upcoming multi-repo support code.\r\n\r\nAlso, a redundant test was removed rather than updating it for this case."
    },
    {
        "commit": "9bf7dbf6a2684c529da501eb95a1426ebb5d64ca",
        "date": "2020-12-30 16:03:49 -0500",
        "subject": "Do not pass pg-local/repo-local to a remote process.",
        "body": "This was a hack to prevent the remote from loading host settings, which is now handled by option validity for command roles.\n\nThese options are still useful so don't remove them, but do leave them internal for now."
    },
    {
        "commit": "141466875f42f2dc09567efbcf757ad1000e715c",
        "date": "2020-12-30 10:51:26 -0500",
        "subject": "Remove redundant command list in repo-s3-key option.",
        "body": "Use the repo-type command list as similar repo options do."
    },
    {
        "commit": "abb8ebe58b7a1325dd95d967347d221e2b196ba3",
        "date": "2020-12-29 15:49:37 -0500",
        "subject": "Limit option validity by command role.",
        "body": "Building on 23f5712, limit option validity by role. This is mostly for options that weren't needed for certain roles but were harmless. However, the upcoming multi repository functionality requires the granularity implemented here.\r\n\r\nThe remote role benefits since host options can automatically excluded when building the options. Also, many options that are only required for the default role (e.g. repo-retention-full) no longer need to be passed in tests for other roles."
    },
    {
        "commit": "26e81785d92775c6643e800644c6a73d01e54b53",
        "date": "2020-12-28 15:22:21 -0500",
        "subject": "Update unit tests for stricter option validity.",
        "body": "Some tests used options in contexts that are currently valid but are not correct usage, i.e. usage of internal options for the default role.\n\nUpdate these tests in advance of the option validity becoming stricter."
    },
    {
        "commit": "23f5712d022ab34d370b7832813a597088842ca2",
        "date": "2020-12-28 09:43:23 -0500",
        "subject": "Allow option validity to be determined by command role.",
        "body": "Validity by command was not granular enough so numerous options needed be marked internal so users would not stumble across them. Options were also needlessly being passed to roles that had no use for them.\r\n\r\nIntroduce per-role validity lists that depend on what roles are valid per command. Also add a check to ensure that only valid roles are used with a command.\r\n\r\nThis commit adds the functionality but does not introduce any new behavior, i.e. all options are valid for all roles that the command is valid for. A subsequent commit will introduce the new role restrictions to make the changes easier to audit."
    },
    {
        "commit": "715fa7a2f1f52dd1a82bb9ff3b0261ae046b1240",
        "date": "2020-12-28 08:51:22 -0500",
        "subject": "Fix indentation error preventing pull requests from being tested."
    },
    {
        "commit": "9e9e7c4a0d59b9dbcdaaefb5b5a2cf51621ef64a",
        "date": "2020-12-17 09:32:31 -0500",
        "subject": "Move all parse-related rules to parse module.",
        "body": "Data required for parsing was spread between the config and defined modules, mostly for historical reasons because the same data was used by Perl.\n\nRequiring all the parse rules to be accessed with function interfaces makes the code more complicated and new rules harder to implement.\n\nInstead, move the data to the parse module so in the most complex cases no interface functions are needed. This reduces the total amount of code and paves the way for more complex parse rules."
    },
    {
        "commit": "f520ecc89a211dbbe22a38c0b887e910bc1f866b",
        "date": "2020-12-16 15:59:36 -0500",
        "subject": "Move help data from define.auto.c/config.auto.c to a pack.",
        "body": "The help data can be represented more compactly in a pack and this separates data needed for help from data needed for parsing, freeing each to have a more appropriate representation."
    },
    {
        "commit": "996de0a3e6901219a84e7c1a20636835daf606a4",
        "date": "2020-12-16 11:33:51 -0500",
        "subject": "Remove cfgCmdNone from CFG_COMMAND_TOTAL.",
        "body": "cfgCmdNone is used to indicate a missing or invalid command so should not be used in the total used for command process."
    },
    {
        "commit": "558ff1e55587645ba033e30f147e56fe444b1276",
        "date": "2020-12-16 09:59:48 -0500",
        "subject": "Always advance id when pack field is NULL.",
        "body": "This was done in the internal versions but not the user-facing function. That meant the field had to be explicitly read after determining it was NULL, which is wasteful.\n\nSince there is only one behavior now, remove pckReadDefaultNull() and move the logic to pckReadNullInternal()."
    },
    {
        "commit": "39963f6aa5f86648da6cc6b36f856585654af28c",
        "date": "2020-12-14 14:37:23 -0500",
        "subject": "Remove cfgDefOptionIndexTotal().",
        "body": "This function was only used in one place, which was better served by cfgOptionGroupIdxTotal()."
    },
    {
        "commit": "7f66ba5762703af2b5ddaa504d092685184ec7c8",
        "date": "2020-12-10 17:58:59 -0500",
        "subject": "Remove deprecated option from command/archive-push unit test."
    },
    {
        "commit": "7429aca8fa4269e1370cc31283688b97b0848769",
        "date": "2020-12-09 17:26:52 -0500",
        "subject": "Remove redundant distro specification."
    },
    {
        "commit": "d01669aa58cfabeeff859819334b697984e69988",
        "date": "2020-12-09 15:19:01 -0500",
        "subject": "Move most tests to Github Actions.",
        "body": "Testing on Travis-CI has been getting slower (from ~18 minutes to 3-6 hours) and the travis-ci.org service will be terminated at the end of the year. Moving to travis-ci.com is an option but the quotas are too low for our purposes.\n\nInstead use Github Actions, which does not currently have quotas, and runs our current tests with just a few tweaks.\n\nThis still leaves multi-architecture tests on Travis-CI but we may be able to run those and stay within the new quotas.\n\nAlso fix a minor bug in restoreTest.c exposed by Github Actions using a different name for the user and group."
    },
    {
        "commit": "8361a97482c9b481863cf0d7300936a7d3dbe9df",
        "date": "2020-12-09 12:05:14 -0500",
        "subject": "Add pack type.",
        "body": "The pack type is an architecture-independent format for serializing data compactly, inspired by ProtocolBuffers and Avro.\r\n\r\nAlso add ioReadSmall(), which is optimized for small binary reads, similar to ioReadLineParam()."
    },
    {
        "commit": "87996558d2cc12d3795709cf07e9c36ebb21e127",
        "date": "2020-12-09 08:59:51 -0500",
        "subject": "Replace double type with time in config module.",
        "body": "The C code does not use doubles to represent seconds like the Perl code did so time can be represented as an integer which reduces the number of data types that config has to understand.\r\n\r\nAlso remove Variant doubles since they are no longer used.\r\n\r\nNote that not all double code was removed since we still need to display times to the user in seconds and it is possible for the times to be fractional. In the future this will likely be simplified by storing the original user input and using that value when the time needs to be displayed."
    },
    {
        "commit": "a137c6baaa17341ff4c9c85fe5954bbc02f47540",
        "date": "2020-12-07 11:26:34 -0500",
        "subject": "Update install-sh, config.guess, and config.sub to latest versions."
    },
    {
        "commit": "ab0500789e762d3a8cedf3c692c2646ea8db9cd6",
        "date": "2020-12-07 11:13:45 -0500",
        "subject": "Begin v2.32 development."
    },
    {
        "commit": "e116b535e6ad21248c00a6d0d948575ed06c6e38",
        "date": "2020-12-07 09:55:00 -0500",
        "subject": "v2.31: Minor Bug Fixes and Improvements"
    },
    {
        "commit": "31becf05b7445f201250d5956e3b725dd4b9338e",
        "date": "2020-12-04 10:59:57 -0500",
        "subject": "Add RHEL/CentOS 8 documentation.",
        "body": "Update RHEL/CentOS 7 to cover the versions that were previously covered by RHEL/CentOS 6.\n\nSince RHEL/CentOS 7/8 work the same update the documentation logic and labels to reflect this compatibility."
    },
    {
        "commit": "b0ea3379651f610113cb63f0743b6245dd9d5ffe",
        "date": "2020-12-02 22:42:50 -0500",
        "subject": "Add pg-database option.",
        "body": "In some rare cases there is no postgres database so this option may be used to specify an alternate database."
    },
    {
        "commit": "1913ecee639e0d40e0d7bfedb898f2d881ac49f0",
        "date": "2020-12-02 22:42:05 -0500",
        "subject": "Fix incorrect usage of TEST_RESULT_DOUBLE().",
        "body": "These work fine but it's better to use the correct macro."
    },
    {
        "commit": "d4211d3aaf6137f0a2e635c1ac9b089771356bfd",
        "date": "2020-12-02 22:41:14 -0500",
        "subject": "Add retries to PostgreSQL sleep when starting a backup.",
        "body": "Inaccuracies in sleep time or clock skew might make a single sleep insufficient to reach the next second.\n\nAdd a few retries to make the process more reliable but still avoid an infinite loop if something is seriously wrong."
    },
    {
        "commit": "ec9f23d31f809902156466a0e4c96ef042d31edb",
        "date": "2020-12-02 16:23:05 -0500",
        "subject": "Remove CentOS 6 from tests and documentation.",
        "body": "CentOS6 EOL'd and the mirrors were swiftly deleted, leading to failures in tests and documentation.\n\nRemove CentOS 6 for now to get builds going again with the intention to replace it in the near future with CentOS 8."
    },
    {
        "commit": "ffc50719d90832d1c24ca9b56ac36f76f5bfcaa6",
        "date": "2020-12-01 15:15:35 -0500",
        "subject": "Improve error message when PQgetCancel() returns NULL.",
        "body": "There is not a lot to be done in this case since it looks like PostgreSQL disconnected while the query was running, but at least improve the error message and remove the assert, which indicates a coding error."
    },
    {
        "commit": "d1d25c710d736a0946d53164b814f1c914603bdd",
        "date": "2020-11-30 18:03:24 -0500",
        "subject": "Remove extraneous storageRepo() calls.",
        "body": "These calls are not required since cipher info is passed explicitly. They are probably a copy-pasto from some past time when one of these functions required it."
    },
    {
        "commit": "5488de8b6a77e8fcd635af707cbd604f985d1b9a",
        "date": "2020-11-25 12:14:03 -0500",
        "subject": "Report page checksum errors in info command text output.",
        "body": "This feature currently only works for text output. JSON output is planned for the future."
    },
    {
        "commit": "3ed7b93b90eb61d40221701e0aef1318c1ea2b2b",
        "date": "2020-11-24 09:40:44 -0500",
        "subject": "Conform retry in lockAcquireFile() to the common retry pattern."
    },
    {
        "commit": "117f03eba15378cfa15097828041331b67d16f12",
        "date": "2020-11-23 15:55:46 -0500",
        "subject": "Prepare configuration module for multi-repository support.",
        "body": "Refactor the code to allow a dynamic number of indexes for indexed options, e.g. pg-path. Our reliance on getopt_long() still limits the number of indexes we can have per group, but once this limitation is removed the rest of the code should be happy with dynamic numbers of indexes (with a reasonable maximum).\n\nAdd an option to set a default in each group. This was previously handled by the host-id option but now there is a specific option for each group, pg and repo. These remain internal until they can be fully tested with multi-repo support. They are fully tested for internal usage.\n\nRemove the ConfigDefineOption enum and use the ConfigOption enum instead. They are now equal since the indexed options (e.g. cfgOptRepoHost2) have been removed from ConfigOption.\n\nRemove the config/config test module and add required tests to the config/parse test module. Parsing is now the only way to load a config so this removes some redundancy.\n\nSplit new internal config structures and functions into a new header file, config.intern.h. More functions will need to be moved over from config.h but that will need to be done in a future commit to reduce churn.\n\nAdd repoIdx to repoIsLocal() and storageRepo*(). Multi-repository support requires that repo locality and storage be accessible by index. This allows, for example, multiple repos to be iterated in a loop. This could be done in a separate commit but doesn't seem worth it since the code is related.\n\nRemove the type parameter from storageRepoGet(). This parameter existed solely to provide coverage for the case where the storage type was invalid. A better pattern is to check that the type is S3 once all other types have been ruled out."
    },
    {
        "commit": "7fda83b31e73467c881dca43cc6165e4a3ae3963",
        "date": "2020-11-23 12:41:54 -0500",
        "subject": "Allow multiple remote locks from the same main process.",
        "body": "Improve locking on remote processes by introducing an exec-id that is unique to the main process and passed to all remote processes. This allows the remote processes to determine if a lock is held by a remote from the same main process. If so, the lock is allowed.\r\n\r\nThe exec-id is also useful for associating remote logs with main logs for debugging purposes."
    },
    {
        "commit": "77198dce97dd70fdf59ade2886b41e9029553217",
        "date": "2020-11-22 16:26:30 -0500",
        "subject": "Update Vagrant box version."
    },
    {
        "commit": "191b8ec18ba6a2fceb55fb280c64f1a49767b646",
        "date": "2020-11-19 16:57:19 -0500",
        "subject": "Create standby.signal only on PostgreSQL 12 when restore type is standby.",
        "body": "When restore type standby is provided, the recovery.signal isn't needed and may lead to some confusion (see #1236).\r\n\r\nLately, when using pg_basebackup --write-recovery-conf, only the standby.signal file is created. This change would then align with that behaviour."
    },
    {
        "commit": "9aacd3c54a82ca27d6950300a34fbad8bd1ec45c",
        "date": "2020-11-18 18:19:49 -0500",
        "subject": "Move retrieval of archiveResult before while loop in verifyArchive().",
        "body": "The result structure for the archive id being processed only needs to be retrieved once so moving it outside of the WAL path list processing loop is more efficient."
    },
    {
        "commit": "62d9f2396127c305be2a2463cfe98ad872709403",
        "date": "2020-11-17 10:48:40 -0500",
        "subject": "Rename hrnCfgEnvId*() to hrnCfgEnvKey*().",
        "body": "The hrnCfg*() functions were renamed before commit but these got missed."
    },
    {
        "commit": "dd708e6d27ac7b5917704fd07b40bb6fe2a2eee7",
        "date": "2020-11-09 16:37:05 -0500",
        "subject": "Fix override of user option reset.",
        "body": "If a user reset an option such as pg-default on the command-line then an override in the code would not take effect.\n\nIgnore a reset when the code explicitly sets an option to prevent this."
    },
    {
        "commit": "6acd76b60ce9bacb7180da1661745f3eaa7d6674",
        "date": "2020-11-09 16:28:53 -0500",
        "subject": "Fix test title in storage/remote test."
    },
    {
        "commit": "63c12d25418d6252da643d50020f17cc496f0a11",
        "date": "2020-11-09 16:26:43 -0500",
        "subject": "Fix spacing and typos in backup/manifest modules."
    },
    {
        "commit": "3f7a66fffc1062027166056b9cad2459d160c613",
        "date": "2020-11-09 16:19:37 -0500",
        "subject": "Remove obsolete call to storageRepo() in archivePushProtocol().",
        "body": "This call to storageRepo() was used to fetch cipher options from a remote to determine if a repo cipher was enabled.\n\nNow the main process does this work and passes the cipher options directly to the local so there is no need to pre-load the repo storage here."
    },
    {
        "commit": "cbb9b8fd2b8579ea1e9f129c2b79e4a7151a2757",
        "date": "2020-11-09 16:16:41 -0500",
        "subject": "Check archive push queue limit before checking repository.",
        "body": "If the push queue limit has been exceeded then nothing will be pushed to the repo so there is no point in checking it. Worse, a failure in the check would cause drop not to run and potentially fill up the disk, exactly the case this feature was designed to prevent.\n\nThe async version already checks the push queue limit before checking the repository so now both versions have the same behavior."
    },
    {
        "commit": "8cf47f82e49cb3151cd48c8430a1a38c7b3ccaa0",
        "date": "2020-11-09 16:10:59 -0500",
        "subject": "Log warnings in archive-push async log.",
        "body": "These warnings were only being reported to PostgreSQL on the console. Now they are also recorded in the async log increasing the chance that they will be seen.\n\nThis also improves coverage by requiring a warning during async processing to have a test case, which has been added."
    },
    {
        "commit": "d5d1ec6f6f4820808f30f4e9015bf22f2534de4e",
        "date": "2020-11-04 11:09:05 -0500",
        "subject": "Use a constant to check restore target action.",
        "body": "Checking the default here was fragile. If the default were to change the code would break.\n\nThis also removes the only dependency on cfgOptionDefault() outside of the help command."
    },
    {
        "commit": "021a34a55bef5370441c7a416514efebb7086177",
        "date": "2020-10-29 17:16:15 -0400",
        "subject": "Fix typos."
    },
    {
        "commit": "f87a117b71ce0d99137b6df5405fa1fd592af4b4",
        "date": "2020-10-28 08:59:43 -0400",
        "subject": "Spell out three exclamation points in git-history.cache.",
        "body": "Three exclamation points are used by convention as a marker for code that needs attention before it can be committed to integration.\n\nIf the markers are in this file they come up in every search."
    },
    {
        "commit": "d25e965c475e0a36aad8e4a2df7e0d840185cded",
        "date": "2020-10-27 13:29:58 -0400",
        "subject": "Use harnessCfgLoad() in config/load unit tests.",
        "body": "The tests were originally written by loading values directly into the configuration before the parser was available.\n\nUpdate to use harnessCfgLoad() to simplify the tests and make them compatible with upcoming config changes."
    },
    {
        "commit": "d91e6014bd1b6ff6f68abee7944250ed16ee254c",
        "date": "2020-10-27 13:18:25 -0400",
        "subject": "Fix comment."
    },
    {
        "commit": "abe9d90c891fe61b0b0e7d1729dc89ca10b3b2e8",
        "date": "2020-10-27 08:34:18 -0400",
        "subject": "Improve info command output when a stanza is specified but missing.",
        "body": "Return a path missing error when a stanza is specified for the info command but the stanza does not exist in the repository.\r\n\r\nPreviously [] was returned, which is still the case if no stanza is specified and the repository does not exist."
    },
    {
        "commit": "770b65de804fc56a3e6a00d3916958c99774880d",
        "date": "2020-10-26 12:18:45 -0400",
        "subject": "Improve performance of large file lists in backup/restore commands.",
        "body": "lstRemoveIdx(list, 0) resulted in the entire list being moved down to the first position which could take a long time for big lists. This is a common pattern in backup/restore when processing file queues.\r\n\r\nInstead simply move the list pointer up when first item is removed. Then on insert check if there is space at the beginning when there is no longer space at the end and do the move then. This way if a list is built and then drained without any new inserts then no move is required."
    },
    {
        "commit": "d452e9cc38001e2258cc05137508ab692d226df2",
        "date": "2020-10-26 10:25:16 -0400",
        "subject": "Use zero-based indexes when referring to option indexes.",
        "body": "There were a number of places in the code where \"hostId\" was used, but hostId is just the option group index + 1 so this led to a lot of +1 and -1 to convert the id to an index and vice versa.\r\n\r\nInstead just use the zero based index wherever possible. This is pretty much everywhere except when the host-id option is read or set, or where a message is being formatted for the user.\r\n\r\nAlso fix a bug in protocolRemoteParam() where remotes spawned from the main process could get process ids that were not 0. Only the locals should spawn remotes with process id > 0. This seems to have been harmless since the process id is only a label, but it could be confusing when debugging."
    },
    {
        "commit": "ae35c4f0292e410c06e71eed6c5d8565017351d1",
        "date": "2020-10-26 07:41:08 -0400",
        "subject": "Remove unused FUNCTION_LOG_VERIFY_WAL_RANGE* defines.",
        "body": "The defines for FUNCTION_LOG_VERIFY_WAL_RANGE* are not used in the current verify.c and are currently not planned in the continuing development of the verify command, so they are dead code and are therefore being removed."
    },
    {
        "commit": "ea49151746a2d349ccb3c25e8e41df1e88d59a06",
        "date": "2020-10-24 13:18:02 -0400",
        "subject": "Replace misuse of bufSize() with bufUsed().",
        "body": "bufSize() should only be used whem checking the total size of the buffer, not how much of it is currently used.\n\nIn these cases bufUsed() and bufSize() are returning the same value but benign-looking code changes could break this assumption."
    },
    {
        "commit": "80a770ed2ea8d060d8ea77dabb239cf7e861774d",
        "date": "2020-10-24 11:16:06 -0400",
        "subject": "Clarify intended usage of harnessCfgLoadRaw()."
    },
    {
        "commit": "76cfd8ca703f4d6a71c6fe10b683209a2040368c",
        "date": "2020-10-24 11:07:07 -0400",
        "subject": "Allow [, #, and space as the first character in database names.",
        "body": "iniLoad() was trimming lines which meant that a leading space would not pass checksum validation when a manifest was reloaded. Remove the trims since files we write should never contain extraneous spaces. This further diverges the format for the functions that read conf files (e.g. pgbackrest.conf) and those that read info (e.g. manifest) files.\r\n\r\nWhile we are at it also allow [ and # as initial characters. # was reserved for comments but we never put comments into info files. [ denotes a section but we can get around this by never allowing arrays as values in info files, so if a line ends in ] it must be a section. This is currently the case but enforce it by adding an assert to info/info.c."
    },
    {
        "commit": "c573ef281489e274c9b59185275f9c595885f359",
        "date": "2020-10-20 16:14:03 -0400",
        "subject": "Add indexed option > 1 to config/exec unit test."
    },
    {
        "commit": "176cf0bf609ac2fc49c411537d4aa518dccd33d9",
        "date": "2020-10-20 14:54:28 -0400",
        "subject": "Use harnessCfgLoadRaw() in command/command and common/exit unit tests.",
        "body": "The tests were originally written by loading values directly into the configuration before the parser was available.\n\nUpdate to use harnessCfgLoadRaw() to simplify the tests and make them compatible with upcoming config changes.\n\nNote that some unreachable conditions were removed since they could not be reached via a parsed config, only by munging values directly into the config. cfgOptionTest(optionId) was removed because a non-default value must always be set. cfgOptionValid(cfgOptLogTimestamp) was removed because it is true for all commands except for cfgCmdNone, which is checked with an assert."
    },
    {
        "commit": "156b7d48cce789cc6e435219062ceeadbbb7b494",
        "date": "2020-10-20 12:39:23 -0400",
        "subject": "Get target-action default from cfgOptionDefault() in restore command.",
        "body": "cfgDefOptionDefault() worked but the default is available without having to peek into config definitions."
    },
    {
        "commit": "41789d70d16a3921c68132187f08a1b8fa058cf1",
        "date": "2020-10-20 11:24:26 -0400",
        "subject": "Remove cfgOptionId() and replace it with cfgParseOption().",
        "body": "cfgOptionId() did not recognize deprecated options which made the help command throw errors when they were specified on the command line. cfgParseOption() will correctly identify deprecated options.\n\ncfgParseOption() can also be used in cfgParse() to reduce code duplication when parsing info out of the option value returned by optionFind().\n\nFinally, code the option key index separately in parse.auto.c. For now they are simply added back together but future code will need them separated."
    },
    {
        "commit": "6414ae9707ab637f298df1ce55fe4bcf46fbe910",
        "date": "2020-10-19 18:17:47 -0400",
        "subject": "Remove ConfigDefineCommand enum.",
        "body": "This has always been equivalent to the ConfigCommand enum so it just adds complexity.\n\nIt was created for symmetry with ConfigDefineOption, which will also be removed soon."
    },
    {
        "commit": "ba29e24684414c610e58374c000cb66e28315975",
        "date": "2020-10-19 17:17:47 -0400",
        "subject": "Fix repo/pg-local option being overwritten.",
        "body": "This option would get overwritten when the option values were moved to index 1.\n\nSet the repo/pg-local option after options are moved to fix this."
    },
    {
        "commit": "2d38d2fc824db1bb3f56899addd51ab018977d12",
        "date": "2020-10-19 17:06:52 -0400",
        "subject": "Reset additional options in real/all integration test.",
        "body": "Currently indexes above 1 do not have dependencies checked, so this doesn't error.\n\nIn a future commit we will enable those checks and this will error if it is not fixed."
    },
    {
        "commit": "996387ea9312459db664e59d68b94455c9c56acc",
        "date": "2020-10-19 16:27:52 -0400",
        "subject": "Use harnessCfgLoadRaw() in command/help unit test.",
        "body": "This correctly set defaults from cfgLoadUpdateOption(), e.g. repo-host-cmd."
    },
    {
        "commit": "303b9b17e700dca00aa12a3afe23b1f7c9741752",
        "date": "2020-10-19 14:19:28 -0400",
        "subject": "Remove extraneous calls to cfgOptionValid() in unit tests."
    },
    {
        "commit": "7d069a2b9178498293372913b0fa287005aa93b4",
        "date": "2020-10-19 14:03:48 -0400",
        "subject": "Remove indexed option constants.",
        "body": "These constants don't scale well as the index total is increased for an option.\n\nThe core code rarely uses these options and they are easily replaced with cfgOptionName().\n\nThe tests had started to make use of the constants, so provide functions that build the option name from the optionId and, optionally, the optionKey."
    },
    {
        "commit": "86275c4f85668d4576c16c85c629a7f3515ade59",
        "date": "2020-10-16 07:42:03 -0400",
        "subject": "Expire history files.",
        "body": "WAL timeline history files were not being expired because they were small and generally not very plentiful.\r\n\r\nHowever, in some cases large numbers of history files may be generated so it makes sense to remove useless history files to keep things tidy.\r\n\r\nThe history file for the oldest retained timeline is kept for debugging purposes even though it is not used for recovery."
    },
    {
        "commit": "4b8dfd34c0a9ced0977c43c2b4159eb700eadf28",
        "date": "2020-10-08 17:09:21 -0400",
        "subject": "Assert when buffer used is greater than size limit.",
        "body": "099281c5 reduced used but this could lead to surprising behavior so assert instead.\n\nCall bufUsedSet() before bufLimitSet() to avoid the assertion."
    },
    {
        "commit": "401e4f1df41a40860c784f1908994c6ee51f6a51",
        "date": "2020-10-08 16:09:38 -0400",
        "subject": "Optimize small reads in IoRead.",
        "body": "Instead of using memmove() to manage the internal output buffer for every small read, track the current buffer position and only move data when the small read cannot be satisfied and more data is needed."
    },
    {
        "commit": "e0f09687e49805a4349933f5e244a2e88b27220b",
        "date": "2020-10-08 10:52:19 -0400",
        "subject": "Add option groups.",
        "body": "Group related options together so operations (e.g. valid, test, index total) can be performed on all options in the group.\r\n\r\nPreviously, options at the top of the hierarchy of the related options were used to do these tests. This was prone to error as option relationships changed and it was not always clear which option (or options) should be used."
    },
    {
        "commit": "dc8a9dab1b4e9b00a0e3b1394f519464c702cd60",
        "date": "2020-10-08 08:37:53 -0400",
        "subject": "Add missing assertion in lstSort()."
    },
    {
        "commit": "099281c51070fce5c801f90388b8f4316cea7f64",
        "date": "2020-10-07 18:02:05 -0400",
        "subject": "Reduce buffer used when size limit set.",
        "body": "If the size is reduced then the amount used should be reduced as well.\n\nThis is a bug but does not affect current use cases."
    },
    {
        "commit": "39aca3269c440e635ae6ff04235628a9f9d30a79",
        "date": "2020-10-07 16:34:13 -0400",
        "subject": "Add bufSizeAlloc()."
    },
    {
        "commit": "c8a94d9eb6bb3972071eb3a4eb8e54ece1a5b56e",
        "date": "2020-10-07 15:17:16 -0400",
        "subject": "Add missing assertion in lstFind()."
    },
    {
        "commit": "98f6a1cffdd6eb2667a3d042aa5ec3c192129700",
        "date": "2020-10-07 12:15:50 -0400",
        "subject": "Remove unused cfgDefOptionPrefix() function and data.",
        "body": "This function was made obsolete when Perl was removed in f0ef73db."
    },
    {
        "commit": "434282d343c131387ffc080ec5db9aa02ba3c413",
        "date": "2020-10-07 12:03:23 -0400",
        "subject": "Declare cfgDefOptionAllowListValue/Total() static.",
        "body": "These have not been used externally since Perl was removed in f0ef73db."
    },
    {
        "commit": "9377d050724d334a18706b49090575f2160433f1",
        "date": "2020-10-06 17:15:48 -0400",
        "subject": "Add repo-azure-endpoint option.",
        "body": "This option allows alternate endpoints (e.g. Azure Government) to be configured."
    },
    {
        "commit": "3ce6b3e5058a7b1893aeb0c587fe8938956bbef5",
        "date": "2020-10-05 13:12:48 -0400",
        "subject": "Update config.guess and config.sub to latest versions."
    },
    {
        "commit": "3c8774fbab80a4300fa1d6935bc87036e41057dc",
        "date": "2020-10-05 12:02:31 -0400",
        "subject": "Begin v2.31 development."
    },
    {
        "commit": "9229d6c866ee6296180bfefdbce42660b9e59b98",
        "date": "2020-10-05 11:51:45 -0400",
        "subject": "v2.30: PostgreSQL 13 Support"
    },
    {
        "commit": "74151d57ba03a4e9386f8e988d7f832ccfbe1e25",
        "date": "2020-10-05 08:42:18 -0400",
        "subject": "Add apt-get update to contributing guide.",
        "body": "This allows apt-get to work correctly even if the base container is a bit out of date."
    },
    {
        "commit": "293add28fdd306b863b077d27b0f3438b6594110",
        "date": "2020-10-05 08:37:48 -0400",
        "subject": "Add text rendering for page links missed in 597739fa.",
        "body": "Since links are not possible in the command line help just display the name of the linked section.\n\nAlso, during reference text rendering there is no out key so make sure it is defined before trying to use it."
    },
    {
        "commit": "597739fafecf349af470134200aafc65a53eabf2",
        "date": "2020-09-25 11:26:27 -0400",
        "subject": "Move info command text to the reference and link to user guide.",
        "body": "This means the same text will appear in both places, which should make it easier to find.\r\n\r\nAlso update the link code to allow both page and section to be specified rather than only one or the other."
    },
    {
        "commit": "31962377d9d53aed4b8b01accdba7801fa5ce435",
        "date": "2020-09-25 10:30:29 -0400",
        "subject": "Add hint and documentation for protocol version mismatches.",
        "body": "Update the documentation to explicitly state that versions must match across hosts when running remotely.\r\n\r\nAdd a hint to the protocol version mismatch error to help the user identify the problem."
    },
    {
        "commit": "b096a25b49875b1303c066b6f659dd5afffebc56",
        "date": "2020-09-24 11:19:51 -0400",
        "subject": "Update test containers for PostgreSQL 13.",
        "body": "Add older PostgreSQL versions to the u18 container that were not available before.\n\nThis also updates all minor versions for prior versions of PostgreSQL."
    },
    {
        "commit": "ad79932ba5bf3df7e59677c29b32477b7022ea16",
        "date": "2020-09-22 11:57:38 -0400",
        "subject": "Add internal verify command.",
        "body": "Scan the WAL archive for missing or invalid files and build up ranges of WAL that will be used to verify backup integrity. A number of errors and warnings are currently emitted but they should not be considered authoritative (yet).\r\n\r\nThe command is incomplete so is marked internal."
    },
    {
        "commit": "3e8a6febe66ef30dee104a895fd7e3c5f8ad0660",
        "date": "2020-09-21 14:37:07 -0400",
        "subject": "Update yum repository path for CentOS/RHEL user guide.",
        "body": "Update to the current yum.p.o repository so the CentOS/RHEL user guide will build on PostgreSQL 13."
    },
    {
        "commit": "927d9adbee780a51639955edb74ce7a4850db100",
        "date": "2020-09-18 16:55:26 -0400",
        "subject": "Improve PostgreSQL version identification.",
        "body": "Previously, catalog versions were fixed for all versions which made maintaining the catalog versions during PostgreSQL beta and release candidate cycles very painful. A version of pgBackRest which was functionally compatible was rendered useless by a catalog version bump in PostgreSQL.\r\n\r\nInstead use only the control version to identify a PostgreSQL version when possible. Some older versions require a catalog version to positively identify a PostgreSQL version, so include them when required.\r\n\r\nSince the catalog number is required to work with tablespaces it will need to be stored. There's already a copy of it in backup.info so use that (even though we have been ignoring it in the C versions)."
    },
    {
        "commit": "94475bfbe6a694b150091d5f7208b0d01ab07a40",
        "date": "2020-09-17 15:17:13 -0400",
        "subject": "Add missing semicolon in backtrace debug code.",
        "body": "Apparently backtrace has not been used for debugging since it was broken in 7fba1f0b.\n\nEven though this is test code it might be good to find a way to test it to prevent regressions."
    },
    {
        "commit": "4cd61152f510140a30525e995b0901590d55012c",
        "date": "2020-09-17 12:39:30 -0400",
        "subject": "Update PostgreSQL 13 test catalog versions missed in 6bb111c1.",
        "body": "These values are not used by the Perl integration tests so maybe it would be better to remove them, but for now just update since they should not be changing again for PG13."
    },
    {
        "commit": "9db314397302bc01d81a24cb0edaceefa2b2e9d0",
        "date": "2020-09-17 10:35:27 -0400",
        "subject": "Error with hints when backup user cannot read pg_settings.",
        "body": "This condition used to give a not-very-clear error which we have been intending to improve. But in the meantime the changes in fbff299 resulted in a segfault for this condition instead because the data_directory was assumed to be non-NULL.\r\n\r\nFix this by explicitly throwing an error with hints when any row in pg_settings cannot be selected."
    },
    {
        "commit": "c71609879bb3782dd7da40c14313e75e78262bfc",
        "date": "2020-09-16 09:33:37 -0400",
        "subject": "Fix incorrect control/catalog versions in command/stanza test.",
        "body": "These were not caught because backup info load automatically corrects them."
    },
    {
        "commit": "8dce7bbb608c65a16a4e41ae2cd95c588154e9e0",
        "date": "2020-09-14 10:15:40 -0400",
        "subject": "Ignore backup_manifest in PG13.",
        "body": "This file is created by pg_basebackup so might be in the data directory if the cluster was restored from a pg_basebackup backup. Also exclude backup_manifest.tmp since it is possible to find that in the backup directory."
    },
    {
        "commit": "fc77c511824feb77c0a5f4cd5d95795184b65d2e",
        "date": "2020-09-11 10:10:25 -0400",
        "subject": "Improve working directory error message.",
        "body": "Improve the wording of the error message and add a hint to make it clearer what is wrong and how the user can fix it.\r\n\r\nAlso change the assert to a regular error since this is not an internal error."
    },
    {
        "commit": "dac182c06e84ba94a3e03cc0769367bdc89ba3b7",
        "date": "2020-09-11 08:23:26 -0400",
        "subject": "Improve alignment in TEST_ERROR output.",
        "body": "Align the error types and messages so they are easier to compare."
    },
    {
        "commit": "ecb112f802be958fdccf003be2e9b62aada98bb3",
        "date": "2020-09-08 13:02:13 -0400",
        "subject": "Add infoArchiveMove() and infoBackupMove()."
    },
    {
        "commit": "5941f5631afc73e504d67827587a90ca91ead399",
        "date": "2020-09-08 12:55:56 -0400",
        "subject": "Extern infoBackupNewLoad() and infoArchiveNewLoad()."
    },
    {
        "commit": "4239f8a81aa5da52667149a4933956347492b748",
        "date": "2020-09-08 12:47:35 -0400",
        "subject": "Add manifestFree()."
    },
    {
        "commit": "fead0046918ad50eafa30991c2e8d6aabbf254a0",
        "date": "2020-09-08 12:44:08 -0400",
        "subject": "Move WAL constants to postgres/interface header."
    },
    {
        "commit": "b8efb13bcb11027fcbb3bd386446280cd8b625ce",
        "date": "2020-09-08 12:28:56 -0400",
        "subject": "Move archiveIdComparator() to archive/common module."
    },
    {
        "commit": "9fd31913a8cbff1f1371ccabfebb003cb3c47c05",
        "date": "2020-09-03 07:49:49 -0400",
        "subject": "Add hint about starting the stanza when WAL segment not found.",
        "body": "If a stop command has been issued the check command fails due to archiving timing out.\n\nProvide a hint to document this situation and point the user in the proper direction."
    },
    {
        "commit": "76900d676416758e82b12ea3966daadf6e3b3464",
        "date": "2020-09-02 14:45:09 -0400",
        "subject": "Fix contributor name."
    },
    {
        "commit": "41118e1b6813ea41a13c0441c726f3e7c28051d9",
        "date": "2020-09-02 11:03:49 -0400",
        "subject": "Allow ProtocolParallel to complete with no jobs.",
        "body": "If the callback never returned any jobs then protocolParallelDone() would never be true. The reason is that the done state was being set in protocolParallelResult(), which never gets called if there are no results.\r\n\r\nCalling protocolParallelResult() doesn't make much sense in this case so instead move the done logic to protocolParallelDone().\r\n\r\nFor current usage of ProtocolParallel we ensure there are jobs before processing so this is not a live issue, but the new behavior is required for future development."
    },
    {
        "commit": "ce6c492620d9408a432f5b7c04a437ec812788ac",
        "date": "2020-09-01 11:02:44 -0400",
        "subject": "Add notes about optional symlinks to repo format 6 design."
    },
    {
        "commit": "bb87d989b840e77d1ceafc8f699972101fb94d96",
        "date": "2020-08-31 08:20:40 -0400",
        "subject": "Update config.guess and config.sub to latest versions."
    },
    {
        "commit": "05ef03feb5550f7151ee34afe6b0358637f65fc8",
        "date": "2020-08-31 07:41:48 -0400",
        "subject": "Begin v2.30 development."
    },
    {
        "commit": "1df7d3eee5baa38504478fafa27de2b1b0fce724",
        "date": "2020-08-31 07:28:22 -0400",
        "subject": "v2.29: Auto S3 Credentials on AWS"
    },
    {
        "commit": "14e1fd10ca74ff9c6cdf32c66d374efb09067919",
        "date": "2020-08-27 10:59:04 -0400",
        "subject": "Add none to compress-type option reference and fix example."
    },
    {
        "commit": "8c2960fab39e3eda96f791d8a7b1f88f8dedd4f9",
        "date": "2020-08-25 15:05:41 -0400",
        "subject": "Add archive-mode option to disable archiving on restore.",
        "body": "When restoring a cluster that will be promoted but is not intended to be the new primary, it is important to disable archiving to avoid polluting the repository with useless WAL. This option makes disabling archiving a bit easier."
    },
    {
        "commit": "1812725c8e0cdd7335efdd9909c204e11c01c200",
        "date": "2020-08-25 12:50:06 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "851f2e814e1d733989c0330e7efef3def2cace80",
        "date": "2020-08-25 10:38:49 -0400",
        "subject": "Automatically retrieve temporary S3 credentials on AWS instances.",
        "body": "Automatically retrieve the role and temporary credentials for S3 when the AWS instance is associated with an IAM role. Credentials are automatically updated when they are <= 5 minutes from expiring.\r\n\r\nBasic configuration is to set repo1-s3-key-type=auto. repo1-s3-role can be used to set a specific role, otherwise it will be retrieved automatically."
    },
    {
        "commit": "1d2b8ae7bb1ff0621229514acff587793276a123",
        "date": "2020-08-24 14:51:08 -0400",
        "subject": "Improve detailed error output.",
        "body": "Add more info (command, version, options) to asserts, and errors when debug logging is enabled. This won't cover all cases but might mean we get more info in some circumstances."
    },
    {
        "commit": "7fba1f0bbef7072964eb4ad00275fbff00f94d50",
        "date": "2020-08-21 16:12:44 -0400",
        "subject": "Consolidate variables into structs in common/stackTrace module.",
        "body": "This makes it easier to determine which variables are used in which parts of the module and reduces the chance of name conflicts while unit testing."
    },
    {
        "commit": "2a73bd6cbf89135d652d5cff1c63095858068a6d",
        "date": "2020-08-21 11:45:54 -0400",
        "subject": "Move backTraceState variable inside #ifdef WITH_BACKTRACE.",
        "body": "This variable is only used when WITH_BACKTRACE is defined so there's no need to declare it otherwise."
    },
    {
        "commit": "0e8e5881d8859945760aa873b53a4b39ac26dfc3",
        "date": "2020-08-21 11:43:26 -0400",
        "subject": "Remove invalid call to stackTraceTestFileLineSet().",
        "body": "When testing the common/stack-trace module it is important not to call this test function since the trace stack is empty and it will cause a buffer under run.\n\nInstead use a macro that is only defined under the correct circumstances and add an assert() to catch future regressions."
    },
    {
        "commit": "25ee913932a9de1ca2a57d0b7c37309504af8a1f",
        "date": "2020-08-20 15:53:01 -0400",
        "subject": "Rearrange members in StackTraceData struct to save memory.",
        "body": "This arrangement is more efficient on 64-bit systems due to alignment. There is no difference on 32-bit systems."
    },
    {
        "commit": "859b8a50fdacad0ffa92210e0e8a3c98a2eba1b7",
        "date": "2020-08-20 14:16:36 -0400",
        "subject": "Remove unused parameter from cmdBegin()."
    },
    {
        "commit": "fccca0d716de2be92ddd5c7d8f532dcad41fd828",
        "date": "2020-08-20 14:11:40 -0400",
        "subject": "Refactor option logging into a general-purpose function."
    },
    {
        "commit": "959f77cd6a3be9dffa049d9b25901c72a7c947bb",
        "date": "2020-08-20 14:04:26 -0400",
        "subject": "Add general-purpose statistics collector.",
        "body": "Currently each module that needs to collect statistics implements custom code to do so. This is cumbersome.\r\n\r\nCreate a general purpose module for collecting and reporting statistics. Statistics are output in the log at detail level, but there are other uses they could be put to eventually.\r\n\r\nNo new functionality is added. This is just a drop-in replacement for the current statistics, with the advantage of being more flexible.\r\n\r\nThe new stats are slower because they involve a list lookup, but performance testing shows stats can be updated at about 40,000/ms which seems fast enough for our purposes."
    },
    {
        "commit": "53f8e7a9cf842745282cde66b99268b500073776",
        "date": "2020-08-20 12:12:21 -0400",
        "subject": "Asynchronous list/remove for S3/Azure storage.",
        "body": "Improve the performance of list/delete operations by using async requests.\r\n\r\nIt's questionable whether this will have any impact on Azure deletes since they are sent one at a time with little work done in between, but it doesn't hurt to try."
    },
    {
        "commit": "9876d7096d35496226fdbab788af9499f1b085d3",
        "date": "2020-08-20 11:24:27 -0400",
        "subject": "Disable s390x builds on Travis-CI (again).",
        "body": "s390x currently is too unreliable to be part of required CI builds. They can sometimes take hours or days to get queued which makes getting commits through our workflow very time-consuming."
    },
    {
        "commit": "de0f8c2654ce5a924e3b93959a26c39930f02b60",
        "date": "2020-08-18 10:01:24 -0400",
        "subject": "Add user-agent to HTTP requests."
    },
    {
        "commit": "4391497a05b0d645c5ed472f0b139ce545ece5e9",
        "date": "2020-08-18 08:17:13 -0400",
        "subject": "Enable s390x builds on Travis-CI.",
        "body": "These were disabled in 6fc25c7a because s390x builds were not being queued. It looks like they are working again."
    },
    {
        "commit": "d935af5e598e27f0bff58f34f60a81d432d0491e",
        "date": "2020-08-18 07:26:02 -0400",
        "subject": "Update *((Type *)lstGet()) pattern to *(Type *)lstGet().",
        "body": "This pattern has extra parens and was only used in a few places so replace it with the general *(Type *)lstGet() pattern."
    },
    {
        "commit": "fbee6ec170a5f4629fa0d40494cc89c40cfa934c",
        "date": "2020-08-14 13:11:33 -0400",
        "subject": "Add support for HTTP/1.0.",
        "body": "HTTP/1.0 connections are closed by default after a single response. Other than that, treat 1.0 the same as 1.1.\r\n\r\nHTTP/1.0 allows different date formats that we can't parse but for now, at least, we don't need any date headers from 1.0 requests."
    },
    {
        "commit": "6bb111c1700d34bed23ca65518d4b10970aa8554",
        "date": "2020-08-14 10:08:25 -0400",
        "subject": "PostgreSQL 13 beta3 support."
    },
    {
        "commit": "afcc4d193dea3dfa13b56035e49fbc55a259e936",
        "date": "2020-08-11 14:38:38 -0400",
        "subject": "Add missing azure type in repo-type option reference."
    },
    {
        "commit": "f40c7b65fa4e9b10eaad687300007a4510766a4b",
        "date": "2020-08-11 10:41:06 -0400",
        "subject": "Fix typo in repo-cipher-type option reference."
    },
    {
        "commit": "65858d12dd67f3bf6983ad5c8521edb168da004b",
        "date": "2020-08-10 16:16:11 -0400",
        "subject": "Improve server test harness to support multiple protocols/connections.",
        "body": "The prior implementation only supported a single connection on TLS. This is not flexible enough for complex testing scenarios which might require multiple simultaneous connections on different protocols.\n\nAllow multiple simultaneous connections and add plain sockets as a protocol option. Rename the functions used for server scripting to hrnServerScript*() to make it clear they are related. Improve error messages when less input is received by the server than expected.\n\nAlso, do a bit of cleanup and add more comments."
    },
    {
        "commit": "7fdbd94e39ff6a97d00f1aa4a40c02c0b7b2ef4c",
        "date": "2020-08-10 16:03:38 -0400",
        "subject": "Implement IoClient/IoSession interfaces for SocketClient/SocketSession.",
        "body": "Following up on 111d33c, implement the new interfaces for socket client/session. Now HTTP objects can be used over TLS or plain sockets.\r\n\r\nThis required adding ioSessionFd() and ioSessionRole() to provide the functionality of sckSessionFd() and sckSessionType(). sckClientHost() and sckClientPort don't make sense in a generic interface so they were replaced with ioSessionName()."
    },
    {
        "commit": "54c3c39645b84867c3e4bc04c6ad07a2da7f5f2d",
        "date": "2020-08-10 11:35:09 -0400",
        "subject": "Delay backup remote connection close until after archive check.",
        "body": "Only close the remote connection after verifying that the WAL files have been received. This is necessary if the archive_command on the PostgreSQL host is conditional, i.e. archiving only happens while a backup lock is held, to ensure all WAL segments are archived."
    },
    {
        "commit": "63ad4786af704cf20670f67271444c04a3cc0e32",
        "date": "2020-08-08 16:06:05 -0400",
        "subject": "Remove deleteMax parameter from storageS3New().",
        "body": "This was included primarily for testing but now that storageS3New() is not called directly in the tests the value needs to be modified after configuring storage anyway.\n\nSince there is no need to make this parameter user-configurable just remove it."
    },
    {
        "commit": "8b34f854f3b88fb8c361d5b9d559f8b00295b894",
        "date": "2020-08-08 15:52:33 -0400",
        "subject": "Simplify S3 configuration tests and add security token tests.",
        "body": "Rather than calling storageS3New() directly, create the storage by loading a configuration and calling repoStorageGet(). This is a better end-to-end test and cuts down on a lot of redundant tests.\n\nAdd tests that include security tokens in error messages to ensure they are redacted."
    },
    {
        "commit": "38f66d4bd390ee0994559951b09298d700d02533",
        "date": "2020-08-08 14:32:21 -0400",
        "subject": "Add debug log function for HttpClient."
    },
    {
        "commit": "426e6933daec2ee71619bb14e7082983049de9d5",
        "date": "2020-08-08 14:18:03 -0400",
        "subject": "Redact x-amz-security-token header in errors.",
        "body": "This header should not be displayed to the user in error output, even if it is useless by itself."
    },
    {
        "commit": "4d22d6eeca23aef038b85dc1c4c3a69fb79f1942",
        "date": "2020-08-08 11:23:37 -0400",
        "subject": "Move file descriptor read/write ready into IoRead/IoWrite.",
        "body": "Move sckSessionReadyRead()/Write() into the IoRead/IoWrite interfaces. This is a more logical place for them and the alternative would be to add them to the IoSession interface, which does not seem like a good idea.\r\n\r\nThis is mostly a refactor, but a big change is the select() logic in fdRead.c has been replaced by ioReadReady(). This was duplicated code that was being used by our protocol but not TLS. Since we have not had any problems with requiring poll() in the field this seems like a good time to remove our dependence on select().\r\n\r\nAlso, IoFdWrite now requires a timeout so update where required, mostly in the tests."
    },
    {
        "commit": "111d33c12324a27e68cc3a1349f0566a319eef42",
        "date": "2020-08-08 10:39:39 -0400",
        "subject": "Add IoClient and IoSession interfaces.",
        "body": "These interfaces allow the HttpClient and HttpSession objects to work with protocols other than TLS, .e.g. plain sockets. This is necessary to allow standard HTTP -- right now only HTTPS is allowed, i.e. HTTP over TLS.\r\n\r\nFor now only TlsClient and TlsSession have been converted to the new interfaces. SocketClient and SocketSession will also need to be converted but first sckSessionReadyRead() and sckSessionReadyWrite() need to be moved into the IoRead and IoWrite interfaces, since they are not a good fit for IoSession."
    },
    {
        "commit": "9b7fd1a894ad9fb9cb443458e2296337750b963f",
        "date": "2020-08-08 10:02:04 -0400",
        "subject": "Improve error message in HARNESS_FORK_END().",
        "body": "Also include expected exit status to make debugging easier."
    },
    {
        "commit": "0b349c0f2f54d1e45beaa604dba40c2cf9efc15e",
        "date": "2020-08-07 13:44:01 -0400",
        "subject": "Clear the callback before calling storageReadPosixFreeResource().",
        "body": "If storageReadPosixFreeResource() errors then it will be called again when the object is freed, which is not ideal since it might error in a different way and lose the original error."
    },
    {
        "commit": "cde2c756ea8ae32663e0a817098fc9f5d4f2a1f2",
        "date": "2020-08-05 18:25:07 -0400",
        "subject": "Rename handle to fd.",
        "body": "Pretty much everywhere handle is used what is really meant is file descriptor (fd). This terminology got migrated over from Perl and is just not quite correct, or at least not as correct as fd.\n\nThere were also plenty of places fd was used so now all uses are consistent.\n\nThe Perl code was not updated but might be in a future commit."
    },
    {
        "commit": "a1d7d50223510eda06d68234a03e3c19f972dc47",
        "date": "2020-08-05 17:30:38 -0400",
        "subject": "Fix macro spacing."
    },
    {
        "commit": "d5edc3fe371e16d5612e841861ae9c10ae69cca7",
        "date": "2020-08-05 15:24:13 -0400",
        "subject": "Remove unused port struct member.",
        "body": "This does not appear to have been used in quite some time and the tests are equally useless because they don't prove the correct port was passed to httpClientNew()."
    },
    {
        "commit": "d74c8f4b5813f3b0ce5df246c36469257a549e4d",
        "date": "2020-08-05 14:07:04 -0400",
        "subject": "Add memContextFreeing().",
        "body": "This can be used to determine if functions are running in a callback from memContextFree(). In this case, data in child mem contexts is not valid."
    },
    {
        "commit": "6fc25c7a69a09f105f9fdd41ddb33c700d983a2e",
        "date": "2020-08-05 13:38:44 -0400",
        "subject": "Disable s390x builds on Travis-CI.",
        "body": "s390x has not been building for about a day which is clogging the integration branch."
    },
    {
        "commit": "847e61ce21710cc0cb7baa9af9b3740d9250b4fa",
        "date": "2020-08-04 15:15:24 -0400",
        "subject": "Improve TLS error reporting.",
        "body": "Before 9f2d647 TLS errors included additional details in at least some cases. After 9f2d647 a connection to an HTTP server threw `TLS error [1]` instead of `unable to negotiate TLS connection: [336031996] unknown protocol`.\r\n\r\nBring back the detailed messages to make debugging TLS errors easier. Since the error routine is now generic the `unable to negotiate TLS connection context` is not available so the error looks like `TLS error [1:336031996] unknown protocol`."
    },
    {
        "commit": "94d3a01f7368a547dfecaafce67995e24738be78",
        "date": "2020-08-04 13:20:01 -0400",
        "subject": "Proactively close file descriptors after forking async process.",
        "body": "PostgreSQL may be using most of the available file descriptors when it executes the the archive-get/archive-push commands (especially archive-get). This can lead to problems depending on how many file descriptors are needed for parallelism in the async process.\r\n\r\nProactively free file descriptors between 3 and 1023 to help ensure there are enough available for reasonable values of process-max, i.e. <= 300."
    },
    {
        "commit": "e81533bbabb2e4f809596c0a88671b2b6616da01",
        "date": "2020-08-04 10:16:51 -0400",
        "subject": "Improve memory usage of unlogged relation detection in manifest build.",
        "body": "This loop was using a lot of memory without freeing it at intervals.\r\n\r\nRewrite to use char arrays when possible to reduce memory that needs to be allocated and freed."
    },
    {
        "commit": "e044eaf55faf102d84389b04ff79a7a00fef0965",
        "date": "2020-08-04 09:23:59 -0400",
        "subject": "Use forkSafe() in common/exec module.",
        "body": "forkSafe() will throw an exception if the fork fails. This is a pretty unlikely scenario but the function is already there so may as well use it."
    },
    {
        "commit": "5a9856c2f9aeb6efccada86c229713665100eba0",
        "date": "2020-08-01 09:42:03 -0400",
        "subject": "Add functions for Zigzag encoding/decoding.",
        "body": "Zigzag encoding places the sign bit in the least significant bit so that -1 is encoded as 1, 1 as 2, etc. This moves as many bits as possible into the low order bits which is good for other types of encoding, e.g. base-128.\n\nSee https://en.wikipedia.org/wiki/Variable-length_quantity#Zigzag_encoding."
    },
    {
        "commit": "f6d22ccb6fab7d7308d26c11c770362e312e600f",
        "date": "2020-07-31 17:33:15 -0400",
        "subject": "Improve comment locations."
    },
    {
        "commit": "caef2ba482a887113d08fd926a582ff68786a39f",
        "date": "2020-07-31 16:35:58 -0400",
        "subject": "Accept NULL filenames in hrnStorageInfoListCallback().",
        "body": "This allows it to be used with StorageInfo objects returned from storageInfo(), which do not contain a filename."
    },
    {
        "commit": "a8e47c38c6d70c202070fa585d4096592a9961cf",
        "date": "2020-07-31 16:27:57 -0400",
        "subject": "Add lstGetLast() and lstRemoveLast().",
        "body": "When a list is being treated as a stack it is useful to get/remove the last (top) item."
    },
    {
        "commit": "bfb489a82d7451830abec45e3d8a79f4d8580827",
        "date": "2020-07-31 16:18:56 -0400",
        "subject": "Add file name to make performance/storage test more realistic.",
        "body": "Also add timing information."
    },
    {
        "commit": "9f1e7d88da845083a1e45d99c123b1718af9808d",
        "date": "2020-07-31 16:13:05 -0400",
        "subject": "Remove special protocol encoding for StorageType.",
        "body": "It seems like overkill to encode this when other enums (e.g. StorageInfoLevel) are passed as integers.\n\nInstead note that StorageType values should not be changed and remove the special encoding."
    },
    {
        "commit": "afe1568bb1713c3520618bac87ba15e4374274bb",
        "date": "2020-07-31 15:55:17 -0400",
        "subject": "Fix missing space."
    },
    {
        "commit": "ac72e1f193d8d4a9de7d8877528e78e317c135e2",
        "date": "2020-07-30 10:59:50 -0400",
        "subject": "Preserve Variant parsed from JSON in iniLoad().",
        "body": "The fix for = characters in info files (039d314) added JSON validation but discarded the resulting Variant which means the JSON is being parsed twice. This nearly doubles the time to load a manifest since a lot of complex JSON is involved.\r\n\r\nTime to load a million file manifest:\r\nBefore 039d314: 7.8s\r\n039d314: 15.5s\r\nThis patch: 7.5s\r\n\r\nTo fix this regression return the Variant in the callback so the caller does not have to parse it again. The new code appears slightly more efficient overall, probably because there are fewer operations against Strings."
    },
    {
        "commit": "3e9dce0d7615f0f56f3eff754095c57c6d56fd6b",
        "date": "2020-07-30 07:49:06 -0400",
        "subject": "Rename strPtr()/strPtrNull() to strZ()/strZNull().",
        "body": "We use the Z suffix in many functions to indicate that we are expecting a zero-terminated string so make this function conform to the pattern.\n\nAs a bonus the new name is a bit shorter, which is a good quality in a commonly-used function."
    },
    {
        "commit": "039d314438f7881e7c7062d645f7800ee2dd8872",
        "date": "2020-07-28 14:00:23 -0400",
        "subject": "Fix issue with = character in file or database names.",
        "body": "The manifest uses the = character as the key/value separator so = characters in the key cause parsing errors and lead to an error or segfault.\r\n\r\nSince the value must be valid JSON we can keep checking the value on the right side of the = and stop building the key when the value is valid. It's a bit hackish but it does seem to do the job without breaking the manifest format.\r\n\r\nUnsurprisingly this makes parsing about 50% slower but it's still more than fast enough. Parsing 10 million key/values takes about 6.5s for the old code and 10s for the new code. Since the value is used as JSON downstream we can reclaim most of this time by just passing the JSON value rather than making the callback reparse it. We'll save that for another commit, though."
    },
    {
        "commit": "63a93db6fd97c6e8e22478ee69b05487fa3db69d",
        "date": "2020-07-28 12:15:33 -0400",
        "subject": "Suppress errors when closing local/remote processes.",
        "body": "Since the command has completed it is counterproductive to throw an error but still warn to indicate that something unusual happened.\r\n\r\nAlso fix the related issue that the local processes were not being shut down when they completed, which meant that they might timeout before being closed when pgbackrest terminated."
    },
    {
        "commit": "d9309f13a4c7b962b401832881a593b92f29c438",
        "date": "2020-07-28 11:20:07 -0400",
        "subject": "Add quarterly press release instructions to doc/RELEASE.md."
    },
    {
        "commit": "a260d4a53b68e40f8ebbdc9129143ac61d0ac88b",
        "date": "2020-07-28 08:09:10 -0400",
        "subject": "Add zstd to CentOS/RHEL 6 test container.",
        "body": "Zstd is now required by the upstream yum package."
    },
    {
        "commit": "aa37a21084f75c7af8d8ca047be0376057a86bb6",
        "date": "2020-07-25 13:37:39 -0400",
        "subject": "Add strBaseZ().",
        "body": "Since the base name is at the end of the filename it is possible to return the char pointer without making a copy, which is preferred in some cases."
    },
    {
        "commit": "8e140ad7e06f7e4abdd2c6fa32018ff463d63a6f",
        "date": "2020-07-25 11:39:24 -0400",
        "subject": "Build new manifest inside a temporary context.",
        "body": "There is a fair amount of temporary data that is created during the build and it should not end up as a permanent part of the manifest."
    },
    {
        "commit": "8e776cc537117292504bc17a1691481fce9bae3d",
        "date": "2020-07-25 11:26:14 -0400",
        "subject": "Add manifestNewBuild() to performance/type test.",
        "body": "Use a test storage driver to allow manifestNewBuild() to be run against a test cluster at any scale without having to write files to disk.\n\nSimplify the test by using the output of manifestNewBuild() to feed manifestSave() and manifestNewLoad().\n\nAlso add manifest size to the output."
    },
    {
        "commit": "f9d923ca3b2c7b2d3eacb3a3cd4fba347cef701e",
        "date": "2020-07-25 11:06:25 -0400",
        "subject": "Add memContextSize().",
        "body": "Calculates the memory used by the context and all child contexts.\n\nThis is primarily useful for debugging but it is not conditional on DEBUG because it is useful for profile/performance tests."
    },
    {
        "commit": "216a61d93626683acdcd0fbf2e145c8751aa7064",
        "date": "2020-07-25 08:44:41 -0400",
        "subject": "Move dummy storage driver to test harness.",
        "body": "The dummy driver is the basis for creating test storage drivers so it makes sense to locate it in the harness where all tests can access it."
    },
    {
        "commit": "cbf5dd19c2e273ce8ec65eab256bde9591fb0760",
        "date": "2020-07-24 11:05:09 -0400",
        "subject": "Fix non-JSON ini values in tests.",
        "body": "A number of tests used invalid JSON values where an error was expected or the value would be ignored.\n\nUpdate these tests to use valid JSON values so all values in the file can be validated even if they are not used."
    },
    {
        "commit": "9d8f6d9fc2a91f20dfc1d3c531459f37fa642a49",
        "date": "2020-07-24 10:47:51 -0400",
        "subject": "Error in jsonToVar() when input not entirely consumed.",
        "body": "Something like 3=\"string\" would return an Int64 variant and ignore the invalid portion after the integer. Other JSON interface functions have this check but it was forgotten here.\n\nThere are no current issues because of this but we want to be able to validate arbitrary JSON strings and this function was not working correctly for that usage."
    },
    {
        "commit": "78ef442a18d62368f4bd05d946660bdcfb7ea40b",
        "date": "2020-07-21 16:28:05 -0400",
        "subject": "Add storage parameter to pgWalFromFile()."
    },
    {
        "commit": "ed8829386103b27053c4a1d9e29f1d767d0238ce",
        "date": "2020-07-21 10:57:47 -0400",
        "subject": "Clarify that expire must be run regularly when expire-auto is disabled."
    },
    {
        "commit": "d1ac2f7637866c2044f0d40068dcae2de373aa3b",
        "date": "2020-07-21 07:34:02 -0400",
        "subject": "Rearrange Travis CI jobs based on current runtimes.",
        "body": "In general it is better to have slower jobs run earlier."
    },
    {
        "commit": "90ffde8881f50ba8b91d9d9e881bf59c6488052e",
        "date": "2020-07-20 18:09:32 -0400",
        "subject": "Remove unused constructor strLstNewParam().",
        "body": "This function is not used in the core code so remove it and update the test where it was used.\n\nThere may eventually be a need for a strLstNewP() function but it doesn't seem worth the code churn until there is an actual requirement."
    },
    {
        "commit": "1783e0490abe266233e65ba1904670a7adde48bb",
        "date": "2020-07-20 15:22:33 -0400",
        "subject": "Remove lstNew() constructor in favor of lstNewP().",
        "body": "The old constructor was left around to reduce code churn during the migration but it just makes the code harder to read and search.\n\nRemove the old constructor and rename all remaining instances to lstNewP(), which by default has the same semantics."
    },
    {
        "commit": "a92b1f9776acea52627d59fc734707ec90d78b4e",
        "date": "2020-07-20 13:44:11 -0400",
        "subject": "Small wording change in website index / Github readme."
    },
    {
        "commit": "738900a3a9e9fb7d63fbc5e4e4642977b8b65e2e",
        "date": "2020-07-20 11:08:18 -0400",
        "subject": "Update config.guess and config.sub to latest versions.",
        "body": "Also update the policy in doc/RELEASE.md to get the latest versions at the beginning of the release cycle. The older policy was created when we were getting new versions right before the release."
    },
    {
        "commit": "3f0b41eb9c1137b0b19138d22d2c26009d477602",
        "date": "2020-07-20 09:59:16 -0400",
        "subject": "Add support for testing on 64-bit big-endian architectures.",
        "body": "In particular add support for s390x but we hope this will work for other 64-bit big-endian architectures.\n\nRun basic unit tests on Travis CI for 390x."
    },
    {
        "commit": "55277357b8457e3a215bc00e8e97de523949eba6",
        "date": "2020-07-20 09:47:43 -0400",
        "subject": "Reduce reliance on static checksums in unit tests.",
        "body": "Testing against static checksums is valuable but it can be become burdensome when supporting multiple architectures.\n\nReduce the number of tests we are doing against static checksums when the architecture can cause the checksum to vary."
    },
    {
        "commit": "f8c1957127c148e36843d77ef0bd26a8c8c78fd1",
        "date": "2020-07-20 09:22:53 -0400",
        "subject": "Fix ill-advised cast in CipherBlock.",
        "body": "Little-endian architectures store the low-order bytes in the lowest memory location so this worked even in the case that size_t and int had different byte representations. Since buffer sizes are constrained there was no chance of the integer becoming negative and causing a problem that way.\n\nOn big-endian architectures this cast caused the low-order bytes to get loaded into the high-order bytes resulting in a huge buffer size that immediately triggered an assertion (and without the assertion would have certainly segfaulted).\n\nInstead use a temporary int variable and cast that to size_t after the function call. This is the correct way to do it regardless of architecture.\n\nThis issue was detected while testing on the s390x architecture."
    },
    {
        "commit": "615c41e52564a8629e57b9892fd3361c92ae22f6",
        "date": "2020-07-20 09:08:59 -0400",
        "subject": "Begin v2.29 development."
    },
    {
        "commit": "5a4b91f90a81019e456a50c0f7311824f7e61475",
        "date": "2020-07-20 08:57:22 -0400",
        "subject": "v2.28: Azure Repository Storage"
    },
    {
        "commit": "67d9d3350c8a844bd4cf3c2bc5496739b6c8ed8a",
        "date": "2020-07-17 13:27:14 -0400",
        "subject": "Update recovery.conf in user guide for PostgreSQL >= 12.",
        "body": "The postgresql.auto.conf file was being used instead of recovery.conf, but there were still instances in the text that used recovery.conf. Update to postgresql.auto.conf for PostgreSQL >= 10 and change wording where needed."
    },
    {
        "commit": "24d2c5b27780ad8bc8a5a255eeed422a3a4c7a49",
        "date": "2020-07-16 13:57:14 -0400",
        "subject": "Remove real/all integration tests now covered by unit tests.",
        "body": "Remove all check and stanza-* tests except for the ones that are intended to succeed. The successful tests show that the queries run with expected results against each version of PG which should also validate queries for the failure tests in the unit tests.\r\n\r\nAlso remove the tests for --no-online backups since they don't require a database and are well tested in the unit tests."
    },
    {
        "commit": "332f2fb7f56483e266e7fbc046c96576cb58ac39",
        "date": "2020-07-16 12:54:52 -0400",
        "subject": "Update PostgreSQL versions used to build user guides.",
        "body": "Also add version ranges to indicate that a user guide is accurate for a range of PostgreSQL versions even if it was built for a specific version."
    },
    {
        "commit": "232d14993dac215571fbc152368913c3fb0cfc90",
        "date": "2020-07-16 12:45:24 -0400",
        "subject": "Fix CentOS path for PostgreSQL >= 10 logs in user guide.",
        "body": "Debian worked since logs default to another location, but CentOS/RHEL on PostgreSQL >= 10 requires the new location."
    },
    {
        "commit": "047d85c26395bd8f47845fc3ba9d5de0b8c37cf0",
        "date": "2020-07-16 12:24:03 -0400",
        "subject": "Automatically determine cipher passphrase in repo-get command.",
        "body": "The prior code was only able to use the main passphrase automatically and expected sub passphrases to be specified for each operation. This was fine for testing but hardly sufficient for a user-facing feature.\r\n\r\nUpdate the code to determine which passphrase to use for any file in the repository and error when an invalid file or location is selected.\r\n\r\nThe repo-get command is still internal for now, but with this improvement it should be ready to be made public."
    },
    {
        "commit": "aa4e13b665b71b249bb74e124109d29b438bd654",
        "date": "2020-07-16 11:27:14 -0400",
        "subject": "Move encrypted files as raw in integration tests.",
        "body": "The encryption key should not be changed when moving a file so no need to decrypt/encrypt."
    },
    {
        "commit": "50ff5d905eddd46f8780a0b1bebc04ed40dd3c12",
        "date": "2020-07-15 13:54:01 -0400",
        "subject": "Update comment and parameter in HttpRequest."
    },
    {
        "commit": "88b0f6245d5f3b49ece2ce33b8d0f9c131b53190",
        "date": "2020-07-15 13:19:16 -0400",
        "subject": "Run non version specific real/tests on the expect version.",
        "body": "There are a few non version specific tests that need to be run in integration because we can't get coverage in the unit tests.\n\nTo save some time we'll only run those tests against the same version we use for expect testing."
    },
    {
        "commit": "574f36c9d2a64d5caac18c2311defcd0c949dcb6",
        "date": "2020-07-14 15:14:41 -0400",
        "subject": "Rename httpRequest() to httpRequestResponse() and fix comment."
    },
    {
        "commit": "620a8d17cfc0d6d8bdd892171abeea9ab7b9c1b3",
        "date": "2020-07-14 15:05:31 -0400",
        "subject": "Automatic retry for backup, restore, archive-get, and archive-push.",
        "body": "If a local command, e.g. backupFile(), fails it will stop the entire process. Instead, retry local commands to deal with transient errors.\r\n\r\nRemove special logic in the S3 storage driver to retry RequestTimeTooSkewed errors since this is now handled by the general retry mechanism in the places where it is most likely to happen, i.e. file read/write. Also, this error should have been entirely eliminated by the asynchronous TLS implementation."
    },
    {
        "commit": "91c7adc8341db64390156336e487d5fc9b45e851",
        "date": "2020-07-14 13:09:48 -0400",
        "subject": "Allow redactions for HTTP queries.",
        "body": "The Azure storage driver exposes secrets in the query when using SAS authorization. These secrets can show up during logging or when an error occurs.\n\nAllow redaction of queries to prevent secrets from being exposed in logs and errors."
    },
    {
        "commit": "d3dd32a031fa7dab98bbef3eee5c7390a774a9d9",
        "date": "2020-07-14 08:12:25 -0400",
        "subject": "Add expire-auto option.",
        "body": "This allows automatic expiration after a successful backup to be disabled."
    },
    {
        "commit": "083350aeda2f1ccf5b6cb5f0988a84d174208152",
        "date": "2020-07-10 08:18:15 -0400",
        "subject": "Inline Buffer functions when possible.",
        "body": "It makes sense to inline these functions for the same reasons String functions were inlined in fbff2995 and f1edf0ad."
    },
    {
        "commit": "f1edf0ad100db961e4ddaa429c1c4c60c933800c",
        "date": "2020-07-10 08:00:18 -0400",
        "subject": "Inline strSize().",
        "body": "Inlining strPtr() in fbff2995 does not seem to have caused any problems so do the same with strSize()."
    },
    {
        "commit": "d5df3974b51efccc628461c6428414e3a6307e23",
        "date": "2020-07-09 17:32:36 -0400",
        "subject": "Read segment size from WAL headers.",
        "body": "This allows validation of the WAL segment size for PostgreSQL versions <= 10."
    },
    {
        "commit": "2f7823c627c62715a7970233fd6171da94b4b479",
        "date": "2020-07-09 14:46:48 -0400",
        "subject": "Add shared access signature (SAS) authorization for Azure.",
        "body": "A shared access signature (SAS) provides granular, delegated access to resources in a storage account. This is often preferable to using a shared key which provides more access and is a greater security risk if compromised."
    },
    {
        "commit": "511e5db5bf9016ce74722ebc019a33fab72955dc",
        "date": "2020-07-09 11:16:45 -0400",
        "subject": "Improve buffer size limit implementation.",
        "body": "Rework size limits so that this->size is always the current size no matter how much is allocated.\n\nMost importantly, this removes the conditional in bufSize(), which makes it a better candidate for inlining."
    },
    {
        "commit": "15502f5b4b21f4e4b932714c387f7ba029e6fcb0",
        "date": "2020-07-09 07:16:15 -0400",
        "subject": "Remove bufNewUseC().",
        "body": "This was used in the Perl LibC interface to wrap Perl-allocated buffers but is no longer needed since LibC was removed."
    },
    {
        "commit": "18f36752ae4d048006a835192e0b11e4e6c62d46",
        "date": "2020-07-08 17:31:48 -0400",
        "subject": "Add ASSERT_INLINE() macro.",
        "body": "When coverage testing ASSERT() macros in inline functions will be expanded and won't be recognized in our coverage rules that ignore ASSERT(). Since there are then uncovered conditions the coverage is incomplete.\n\nThe prior method required copying several lines of code and an explanatory comment into each inline function. Instead create a special macro for inclusion in inline functions.\n\nAnother possibility would be to automatically identify inline functions and add them to the coverage exclusions but that's an idea for another day."
    },
    {
        "commit": "eaa05fdc49e3ee5166655c28105eea58138d4ffa",
        "date": "2020-07-08 15:07:29 -0400",
        "subject": "Write HTTP request as a buffer to hide secrets.",
        "body": "The prior method of writing headers as strings could expose secrets in trace level logs.\n\nInstead write the entire request as a buffer to prevent secrets from being logged and also reduce the amount of logging."
    },
    {
        "commit": "dd9e14b628db37fe7e87e3ab3a6e70cd105a9637",
        "date": "2020-07-08 12:25:39 -0400",
        "subject": "Add pgLsnFromWalSegment().",
        "body": "Provides the reverse operation for pgLsnToWalSegment()."
    },
    {
        "commit": "a27ff7c33578c5e262a20ad126229cb23aed0a09",
        "date": "2020-07-07 08:24:08 -0400",
        "subject": "Remove dead test code that should have been removed in 3f4371d7."
    },
    {
        "commit": "57ddd38c51dfa202eeec720a230f08de47685f5e",
        "date": "2020-07-06 16:57:12 -0400",
        "subject": "S3 storage driver cleanup inspired by Azure review.",
        "body": "These improvements were suggested during the review of 3f4371d7 and it seemed a good idea to apply them to the S3 driver as well."
    },
    {
        "commit": "682ac656f552a35dba946c303610a69c70a4de42",
        "date": "2020-07-06 15:03:24 -0400",
        "subject": "Fix restore --force acting like --force --delta.",
        "body": "This caused restore to replace files based on timestamp and size rather than overwriting, which meant some files that should have been updated were left unchanged. Normal restore and restore --delta were not affected by this issue."
    },
    {
        "commit": "8409ab7b2ba798ceaf738e1e38805bc2998feb7b",
        "date": "2020-07-06 12:04:35 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "cf284fbe8ad8dd9c32ca9b5b39869e32fe04f9ac",
        "date": "2020-07-06 07:48:12 -0400",
        "subject": "Add httpUriDecode(), httpQueryNewStr(), and httpQueryMerge().",
        "body": "httpUriDecode() reverses the encoding in httpUriEncode().\n\nhttpQueryNewStr() creates a new HttpQuery by parsing a query string.\n\nhttpQueryMerge() merges the contents of one query into another query."
    },
    {
        "commit": "3f4371d7a2407b0ef12404cc2ff2661229bdf283",
        "date": "2020-07-02 16:24:34 -0400",
        "subject": "Azure support for repository storage.",
        "body": "Azure and Azure-compatible object stores can now be used for repository storage.\n\nCurrently only shared key authentication is supported but SAS will be added soon."
    },
    {
        "commit": "3e2c8874f7249cc5a70ec8738370f654e280e582",
        "date": "2020-07-01 07:39:29 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "be16bf69a8e66f3eb42bb0789ff210e6d36ddee3",
        "date": "2020-06-29 15:07:17 -0400",
        "subject": "Remove internal commands from HTML and man command references.",
        "body": "Some of these commands will be made public in the future but for now their interfaces are not stable so they remain internal."
    },
    {
        "commit": "c2dea180fbac39782ed0051205affbb1266642a2",
        "date": "2020-06-26 16:50:29 -0400",
        "subject": "Remove redundant storage type constants.",
        "body": "These constants predate the C storage drivers which now provide their own constants."
    },
    {
        "commit": "1416dc32251e66992bbf1639079f7137af3f2d99",
        "date": "2020-06-26 16:44:10 -0400",
        "subject": "Add missing end braces in debug log functions.",
        "body": "These had no effect on functionality but made debug messages harder to read."
    },
    {
        "commit": "96adf8e513f62d4fbcc2905286127b3558b5aa3d",
        "date": "2020-06-26 07:44:56 -0400",
        "subject": "PostgreSQL 13 beta2 support.",
        "body": "There don't appear to be any behavioral changes since PostgreSQL 12 and all the tests pass.\n\nChanges to the control/catalog/WAL versions in subsequent betas may break compatibility but pgBackRest will be updated with each release to keep pace."
    },
    {
        "commit": "e53de3ce46497edee69dc4fb65d54185ccbcfd66",
        "date": "2020-06-26 06:50:20 -0400",
        "subject": "Add/update comments in storage/s3 module."
    },
    {
        "commit": "974cc10b90b11d67ba32ba765e1c445cf3a3b3c7",
        "date": "2020-06-26 06:46:25 -0400",
        "subject": "Minor improvements to storage/s3 unit test."
    },
    {
        "commit": "e46eeefadae218c2552b17a0303b15b6af90718d",
        "date": "2020-06-26 06:34:21 -0400",
        "subject": "Add review for ea04ec7b."
    },
    {
        "commit": "ea04ec7b3f4c6cf25c1b827c25c6a3c5896159a8",
        "date": "2020-06-25 08:02:48 -0400",
        "subject": "Disable query parallelism in PostgreSQL sessions used for backup control.",
        "body": "There is no need to have parallelism enabled in a backup control session. In particular, 9.6 marks pg_stop_backup() as parallel-safe but an error will be thrown if pg_stop_backup() is run in a worker."
    },
    {
        "commit": "c5a507b9a64b2d775f3269690e925698ce56e9e1",
        "date": "2020-06-24 19:33:56 -0400",
        "subject": "Add comment about setting application_name."
    },
    {
        "commit": "ce98e326e1a9477d2cb1253e00f917e350f96527",
        "date": "2020-06-24 18:40:19 -0400",
        "subject": "Replace HRNPQ_MACRO_OPEN_92() test macro with HRNPQ_MACRO_OPEN_GE_92()."
    },
    {
        "commit": "f55cb386d4d1ab87404643619f054e1b27d35944",
        "date": "2020-06-24 18:33:20 -0400",
        "subject": "Fix versions passed to HRNPQ_MACRO_OPEN_GE_92() test macro.",
        "body": "These were not noticed because currently 9.3 and 9.6 behave the same on open."
    },
    {
        "commit": "c5892d129169b2d6e62390e7aaa597bc412f528b",
        "date": "2020-06-24 13:44:00 -0400",
        "subject": "Asynchronous S3 multipart upload.",
        "body": "When uploading large files the upload is split into multiple parts which are assembled at the end to create the final file. Previously we waited until each part was acknowledged before starting on the processing (i.e. compression, etc.) of the next part.\r\n\r\nNow, the request for each part is sent while processing continues and the response is read just before sending the request for the next part. This asynchronous method allows us to continue processing while the S3 server formulates a response.\r\n\r\nTesting from outside AWS in a high-bandwidth, low-latency environment showed a 35% improvement in the upload time of 1GB files. The time spent waiting for multipart notifications was reduced by ~300% (this measurement included the final part which is not uploaded asynchronously).\r\n\r\nThere are still some possible improvements: 1) the creation of the multipart id could be made asynchronous when it looks like the upload will need to be multipart (this may incur cost if the upload turns out not to be multipart). 2) allow more than one async request (this will use more memory).\r\n\r\nA fair amount of refactoring was required to make the HTTP responses asynchronous. This may seem like overkill but having well-defined request, response, and session objects will also be advantageous for the upcoming HTTP server functionality.\r\n\r\nAnother advantage is that the lifecycle of an HttpSession is better defined. We only want to reuse sessions that complete the request/response cycle successfully, otherwise we consider the session to be in a bad state and would prefer to start clean with a new one. Previously, this required complex notifications to mark a session as \"successfully done\". Now, ownership of the session is passed to the request and then the response and only returned to the client after a successful response. If an error occurs anywhere along the way the session will be automatically closed by the object destructor when the request/response object is freed (depending on which one currently owns the session)."
    },
    {
        "commit": "45d9b0313632dce934d842e8daf7245a70bc026c",
        "date": "2020-06-24 12:09:24 -0400",
        "subject": "Add strCatZ().",
        "body": "strCat() did not follow our convention of appending Z to functions that accept zero-terminated strings rather than String objects.\r\n\r\nAdd strCatZ() to accept zero-terminated strings and update strCat() to accept String objects.\r\n\r\nUse LF_STR where appropriate but don't use other String constants because they do not improve readability."
    },
    {
        "commit": "dab00e2010dca8acdd559ebfc0161b69a936842d",
        "date": "2020-06-24 07:45:00 -0400",
        "subject": "Remove expect logs obsoleted in a3e5e66f.",
        "body": "These expect logs are no longer used but are not automatically removed by test.pl."
    },
    {
        "commit": "a3e5e66f05362cc3a0ea41db0098c2fca56c4cd7",
        "date": "2020-06-23 13:44:29 -0400",
        "subject": "Simplify test matrix for real/all tests.",
        "body": "Test matrices were previously simplified for the mock/* tests (e.g. d4410611, d489eb87) but not for real/all since the rules for which tests would run with which options was extremely complex. This only got more complex when new compression formats were added.\n\nBecause the loop-generated matrix was so large, mosts tests were skipped for most option combinations following arcane logic which was nearly impossible to decipher even when reading the code, and completely impossible from the test.pl interface. As a consequence, important tests got excluded. For example, backup from standby was excluded for most versions of PostgreSQL because it was only run once per distro, against the latest version to be included in that distro.\n\nSimplify the tests by having a single run per PostgreSQL version and vary test parameters according to the capabilities of each version and the underlying distro. So, ZST testing is based on whether the distro supports ZST. Every test is run for each set of parameters based on the capabilities of the PostgreSQL version, e.g. backup from standby is not attempted on versions that don't support it.\n\nNote that since more tests are running the overall time to run the mock/all tests has increased by about 20-25%. Some time may be saved my removing tests that are adequately covered by unit tests but that should the subject of another commit. Another option would be to limit some non version-specific tests to a single, well defined version of PostgreSQL, .e.g the version that is run by expect tests, currently 9.6.\n\nThe motivation for this refactor is that new storage drivers are coming and the loop-generated test matrix simply was not up to the task of adding them.\n\nThe following is an example of the new test log (note longer runtime of each test):\n\nmodule=real, test=all, run=1, pg-version=10 (106.91s)\nmodule=real, test=all, run=1, pg-version=9.5 (151.09s)\nmodule=real, test=all, run=1, pg-version=9.2 (123.11s)\nmodule=real, test=all, run=1, pg-version=9.1 (129s)\n\nvs. the old test log (sub-second tests were skipped entirely):\n\nmodule=real, test=all, run=2, pg-version=10 (0.31s)\nmodule=real, test=all, run=3, pg-version=10 (0.26s)\nmodule=real, test=all, run=4, pg-version=10 (60.39s)\nmodule=real, test=all, run=1, pg-version=10 (69.12s)\nmodule=real, test=all, run=6, pg-version=10 (34s)\nmodule=real, test=all, run=5, pg-version=10 (42.75s)\nmodule=real, test=all, run=2, pg-version=9.5 (0.21s)\nmodule=real, test=all, run=3, pg-version=9.5 (0.21s)\nmodule=real, test=all, run=4, pg-version=9.5 (0.21s)\nmodule=real, test=all, run=5, pg-version=9.5 (0.26s)\nmodule=real, test=all, run=6, pg-version=9.5 (0.21s)\nmodule=real, test=all, run=1, pg-version=9.2 (72.78s)\nmodule=real, test=all, run=2, pg-version=9.2 (0.26s)\nmodule=real, test=all, run=3, pg-version=9.2 (0.31s)\nmodule=real, test=all, run=4, pg-version=9.2 (0.21s)\nmodule=real, test=all, run=5, pg-version=9.2 (0.21s)\nmodule=real, test=all, run=6, pg-version=9.2 (0.21s)\nmodule=real, test=all, run=1, pg-version=9.5 (88.41s)\nmodule=real, test=all, run=2, pg-version=9.1 (0.21s)\nmodule=real, test=all, run=3, pg-version=9.1 (0.26s)\nmodule=real, test=all, run=4, pg-version=9.1 (0.21s)\nmodule=real, test=all, run=5, pg-version=9.1 (0.31s)\nmodule=real, test=all, run=6, pg-version=9.1 (0.26s)\nmodule=real, test=all, run=1, pg-version=9.1 (72.4s)"
    },
    {
        "commit": "d560c1bf19b2ef3699971790e1f887dac4168964",
        "date": "2020-06-23 12:42:46 -0400",
        "subject": "Ignore \"unsupported frontend protocol\" error on Centos/RHEL 6.",
        "body": "The unsupported version error is showing up on older versions of PostgreSQL (e.g. 9.1, 9.2) on RHEL6 when setting up a standby with streaming replication. The error occurs when a client does not properly send a version number and it's not clear why it is happening here, but it does not appear to have anything to do with pgBackRest and only affects RHEL6, i.e. 9.1 and 9.2 do not show this error on other distros.\n\nFor now ignore the error since RHEL6 is nearly EOL."
    },
    {
        "commit": "04b2e4a831409d1a2edff669bedb6108a9ca20ed",
        "date": "2020-06-23 09:24:18 -0400",
        "subject": "Increase log level of checkManifest() to debug.",
        "body": "This function is only called once and is very likely throw errors so debug level is more appropriate."
    },
    {
        "commit": "1aedc75b03c5d17acde853918150c2dc043dae35",
        "date": "2020-06-21 11:47:41 -0400",
        "subject": "Rename http/Http to HTTP in comments and messages.",
        "body": "HTTP is an acronym so it should be capitalized. Coding conventions dictate otherwise for function and type names but that should not have been propagated to comments and messages."
    },
    {
        "commit": "911384d9b9b7cfd042a18eeb79b5a6f0c79544e7",
        "date": "2020-06-21 11:07:18 -0400",
        "subject": "Add httpDateFromTime().",
        "body": "Also rename httpLastModifiedToTime() to httpDateToTime() since the RFC-2822 date format used by HTTP is used in all Date headers."
    },
    {
        "commit": "fbff29957cd165e6262359629a672e240d45c3bb",
        "date": "2020-06-18 13:13:55 -0400",
        "subject": "Inline strPtr() to increase profiling accuracy.",
        "body": "strPtr() is called more than any other function and during profiling (with or without optimization) it can end up using a disproportionate amount of the total runtime. Even though it is fast, the profiler has a minimum resolution for each function call so strPtr() will often end up towards the top of the list even though the real runtime is quite small.\r\n\r\nInstead, inline strPtr() and indicate to gcc that it should be inlined even for non-optimized builds, since that's how profiles are usually generated.\r\n\r\nTo make strPtr() smaller require \"this\" to be non-NULL and add another function, strPtrNull(), to deal with the few cases where we need NULL handling.\r\n\r\nAs a bonus this makes the executable about 1% smaller even when compared to a prior optimized build which would inline some percentage of strPtr() calls."
    },
    {
        "commit": "3d74ec1190c14f103c88852e3419d8b1b49cca50",
        "date": "2020-06-17 15:14:59 -0400",
        "subject": "Use PostgreSQL instead of postmaster where appropriate.",
        "body": "Using postmaster in messages was not very helpful since users rarely interact directly with the postmaster. Using PostgreSQL instead seems clearer."
    },
    {
        "commit": "417818dccae7b6e1b559d3adb423a26999040882",
        "date": "2020-06-17 15:07:30 -0400",
        "subject": "Add --no-coverage-report to test.pl to disable report generation.",
        "body": "There is no sense in generating detailed coverage reports in CI environments where they will never be seen. It takes time and format differences in some older versions can cause problems in the report generation code.\n\nNote that missing coverage will still be reported on stdout and the test will fail."
    },
    {
        "commit": "ea984c4d3e4749afa8b17bfd991023e590cb76b8",
        "date": "2020-06-17 09:46:09 -0400",
        "subject": "Update TEST_RESULT_PTR() to TEST_RESULT_STR() where appropriate.",
        "body": "These were missed in d41eea68 when the functionality of TEST_RESULT_STR() was changed. Using TEST_RESULT_STR() instead of TEST_RESULT_PTR() is more type-safe and clearer.\n\nAdd a comment to make it clear that TEST_RESULT_PTR() should be used only when a better alternative is not available."
    },
    {
        "commit": "c4fe09dabe48c9aa2ccff2b1cd94d0614c3808e9",
        "date": "2020-06-16 19:25:16 -0400",
        "subject": "Fix incorrect param log types."
    },
    {
        "commit": "6a851994f3c2822115e1819f9739368344d9c08a",
        "date": "2020-06-16 15:40:32 -0400",
        "subject": "Make sure functions/types needed for profiling are defined.",
        "body": "Profiling runs with debugging disabled but the tests still need TestError and stackTraceTestFileLineSet() to be valid even if they are noops."
    },
    {
        "commit": "0680cfc8dca832d4733302cce5bc67bfe1fedee2",
        "date": "2020-06-16 14:06:38 -0400",
        "subject": "Rename most instances of master to primary in tests.",
        "body": "This aligns better with general PostgreSQL usage and our own documentation (updated in 4bcef702).\n\nUsage in the backup.manifest tests has not been updated since it might break the file format."
    },
    {
        "commit": "11c192f30ee859e011f1db026fcff76e6560eed0",
        "date": "2020-06-16 13:20:01 -0400",
        "subject": "Add hint when checksum delta is enabled after a timeline switch.",
        "body": "This warning is normal when restoring a backup or promoting a standby so add a hint to make that clear."
    },
    {
        "commit": "1094a2d802a9c3e0af9f222e8e0e74dc81128086",
        "date": "2020-06-12 11:27:18 -0400",
        "subject": "Update the PITR FAQ to clarify the default behavior."
    },
    {
        "commit": "a60d4c939accb0e3d380968ed2bbcbe55ac8249c",
        "date": "2020-06-11 14:06:36 -0400",
        "subject": "Update FAQ page for expiring a specific backup set.",
        "body": "The FAQ should have been updated with the addition of ad hoc expire in 1c1a7104."
    },
    {
        "commit": "6fe60a2428f5c28a2da66b84cb2d7910155df60c",
        "date": "2020-06-11 13:17:35 -0400",
        "subject": "Improve behavior of the repo-ls command.",
        "body": "* Exclude linefeed when there is no output to avoid a blank line.\r\n* Honor filter when adding . path or listing a single file."
    },
    {
        "commit": "237ba54d206b2a598ba0113bbaa5bedf39b6f583",
        "date": "2020-06-11 11:48:42 -0400",
        "subject": "Fix expression when recursion enabled in storageInfoListP().",
        "body": "Expressions only worked at the first level of recursion because the expression was also being applied to paths so the path had to match the filter in order to recurse.\r\n\r\nThis is not considered a bug since it does not affect any existing code paths, but it is required for the general-purpose repo-ls command."
    },
    {
        "commit": "da4f15663b517ce7922012efc05105e1f9d0e6e6",
        "date": "2020-06-10 11:41:08 -0400",
        "subject": "Improve error when pg1-path option missing for archive-get command.",
        "body": "The assert thrown was not as descriptive as a proper option missing error."
    },
    {
        "commit": "d0e08a537d36bb1b321ab3c8a305e4988666364d",
        "date": "2020-06-05 15:08:39 -0400",
        "subject": "Better error when closing an already closed session in TLS test harness."
    },
    {
        "commit": "38bf3d51546486a5085e9dda3cfc7c5bdad24b46",
        "date": "2020-06-03 09:02:53 -0400",
        "subject": "Add missing ioReadClose().",
        "body": "This probably wouldn't be a big issue since the close would happen when the IoRead object was destroyed, but better to be safe."
    },
    {
        "commit": "9efbafc84c4a51f48aaf64616c10de1f395fda10",
        "date": "2020-06-01 13:19:47 -0400",
        "subject": "Fix incorrect example for repo-retention-full-type option."
    },
    {
        "commit": "ae15aced9983daebe5b935670e55095e8b03e4f6",
        "date": "2020-06-01 12:24:19 -0400",
        "subject": "Update RHEL package to add logrotate script."
    },
    {
        "commit": "fe829af4ece88afabc026e876250fc04851bb51c",
        "date": "2020-05-28 10:27:45 -0400",
        "subject": "Remove exclamations from test data.",
        "body": "Three exclamations are commonly used to mark areas of the code that need attention before commit so having them in a test is distracting."
    },
    {
        "commit": "28676e1707a36e273b7f236d495b3e611a06328d",
        "date": "2020-05-28 09:19:12 -0400",
        "subject": "Add missing parameter logging."
    },
    {
        "commit": "3b5f76b434a2c5831104fc582327ef1f584f5fe0",
        "date": "2020-05-27 15:13:55 -0400",
        "subject": "Improve handling of invalid HTTP response status.",
        "body": "A truncated HTTP response status could lead to an an unfriendly error message, which would be retried, but could be confusing if the error was persistent and required debugging.\r\n\r\nImprove the error handling overall to catch more error cases explicitly and respond better to edge cases.\r\n\r\nAlso update the terminology in comments to align with the RFC. Variable and function names were not changed because a refactor is intended for HTTP response and it doesn't seem worth the additional code churn."
    },
    {
        "commit": "d05090ab7bacdd95cc5c2d4b45fd25b7bc71a602",
        "date": "2020-05-27 09:22:30 -0400",
        "subject": "Remove Debian package patch now that it has been merged upstream."
    },
    {
        "commit": "b27f9e886b4f21ac199ededde3a189355eac9f88",
        "date": "2020-05-26 09:16:57 -0400",
        "subject": "Refactor TLS server test harness for ease of use.",
        "body": "The prior harness required a separate function to contain the server behavior but this made keeping the client/server code in sync very difficult and in general meant test writing took longer.\n\nNow, commands to define server behavior are inline with the client code, which should greatly simplify test writing."
    },
    {
        "commit": "d92d0513c09c3e28a4c5961c4fc5a62aaac263d8",
        "date": "2020-05-26 08:40:40 -0400",
        "subject": "Update install-sh to v1.16.2.",
        "body": "No version bump for some reason.\n\nhttps://git.savannah.gnu.org/gitweb/?p=automake.git;a=commit;h=6774c9b219cd78445964cd694588cfc4df9b8316"
    },
    {
        "commit": "943b80e1a712b9040967ff8a4aeb4a0f0e8f39a9",
        "date": "2020-05-26 08:30:27 -0400",
        "subject": "Begin v2.28 development."
    },
    {
        "commit": "d8214e0d78ca8922eecb4da03008034c6a258b3b",
        "date": "2020-05-26 08:11:50 -0400",
        "subject": "v2.27: Expiration Improvements and Compression Drivers"
    },
    {
        "commit": "20d8c76b6cbf4d803b155680802e8dd245f3d107",
        "date": "2020-05-22 13:51:26 -0400",
        "subject": "Ignore pg-host* and repo-host* options for the remote command.",
        "body": "The purpose of the remote command is to get access to local resources, so a remote should never start another remote. However, this could happen if there were host settings on the remote host, which ended badly with lock errors, loops, etc.\r\n\r\nAdd pg-local and repo-local options to indicate that the resource is local even if there are host settings.\r\n\r\nNote that for the time being these options are internal and not intended for general usage. However, this is likely the direction needed to allow for more symmetric and manageable configurations."
    },
    {
        "commit": "35ab61da708c6b42341449ed5fb68b24bd3a854c",
        "date": "2020-05-22 09:28:50 -0400",
        "subject": "Remove extra spaces.",
        "body": "These spaces crept in over time and then got copy-pasted all over the place."
    },
    {
        "commit": "ae75ffc1731e2d3e7f230d8cceee1e6050b37a33",
        "date": "2020-05-21 16:09:23 -0400",
        "subject": "Fix possibly missing pg1-* options for the remote command.",
        "body": "Some pg1-* options are required by the remote so if they are not provided in the remote's configuration file then it may cause a configuration error, depending on the operation. This currently only applies to the pg1-path option.\r\n\r\nThis is still an issue for repo-* options but the same solution cannot be applied because some repo-* options are secure and cannot be passed on the command-line."
    },
    {
        "commit": "ec7b7c5a3e2062de05e68baec987c35eef4d0a27",
        "date": "2020-05-21 13:46:16 -0400",
        "subject": "PostgreSQL 13 beta1 support.",
        "body": "There don't appear to be any behavioral changes since PostgreSQL 12 and all the tests pass.\r\n\r\nChanges to the control/catalog/WAL versions in subsequent betas may break compatibility but pgBackRest will be updated with each release to keep pace."
    },
    {
        "commit": "ed814321514259a55e84607cd28358ec8cfae754",
        "date": "2020-05-21 13:43:12 -0400",
        "subject": "Revert PostgreSQL comment to original source version.",
        "body": "Not sure how \"iff\" got changed to \"if\". Perhaps an unintentional spell check."
    },
    {
        "commit": "f15d6104d245330db0de59714e9872a18a65e658",
        "date": "2020-05-20 14:56:13 -0400",
        "subject": "Add local MD5 implementation so S3 works when FIPS is enabled.",
        "body": "S3 requires the Content-MD5 header for many requests but MD5 is not available via OpenSSL when FIPS is enabled because it is considered to be insecure.\r\n\r\nEven though our usage does not present any security risks a local M5 implementation is required to circumvent the over-broad FIPS restriction.\r\n\r\nVendorize the MD5 implementation found at https://openwall.info/wiki/people/solar/software/public-domain-source-code/md5 and add full coverage for the module in the common/crypto unit tests."
    },
    {
        "commit": "d5f451a8b99609b220e24346df636e902e9f1aee",
        "date": "2020-05-20 08:52:15 -0400",
        "subject": "Add missing asserts."
    },
    {
        "commit": "ea9147e2e082ef4bcb793de31b166e65719e9d08",
        "date": "2020-05-19 16:58:49 -0400",
        "subject": "Reduce buffer-size default to 1MiB.",
        "body": "The prior default was determined by benchmarking the Perl code prior to the 1.0 release. In general buffer allocation was more expensive in Perl so large buffers gave the best performance. This was due to multiple buffer allocations for each filter in an IO operation.\n\nThe C code allocates fixed buffers for each IO operation so the cost for buffer allocation is lower than Perl. That being the case it made sense to benchmark the C code to determine the optimal buffer default.\n\nThe performance/storage tests were used to measure the performance of a variety of filters. 1GiB of data was processed by each filter 10 times and the results of the tests were averaged.\n\nWhile most buffer sizes gave similar performance, 1MiB appeared to perform the best overall. Of course, different architectures are likely to yield different results but this seems like a sensible default. The buffer-size option may still need to be manually configured to give optimal results.\n\nRaw test data for reference:\n\n4MB buffer (prior default)\n\ncopy time 1807ms, avg time 180ms, avg throughput: 5942MB/s\nmd5 time 14200ms, avg time 1420ms, avg throughput: 756MB/s\nsha1 time 11431ms, avg time 1143ms, avg throughput: 939MB/s\nsha256 time 23463ms, avg time 2346ms, avg throughput: 457MB/s\ngzip -6 time 381199ms, avg time 38119ms, avg throughput: 28MB/s\nlz4 -1 time 15484ms, avg time 1548ms, avg throughput: 693MB/s\n\n1MB buffer (new default)\n\ncopy time 1760ms, avg time 176ms, avg throughput: 6100MB/s\nmd5 time 13739ms, avg time 1373ms, avg throughput: 781MB/s\nsha1 time 11025ms, avg time 1102ms, avg throughput: 973MB/s\nsha256 time 22539ms, avg time 2253ms, avg throughput: 476MB/s\ngzip -6 time 372995ms, avg time 37299ms, avg throughput: 28MB/s\nlz4 -1 time 15118ms, avg time 1511ms, avg throughput: 710MB/s\n\n512K buffer\n\ncopy time 1782ms, avg time 178ms, avg throughput: 6025MB/s\nmd5 time 13724ms, avg time 1372ms, avg throughput: 782MB/s\nsha1 time 10959ms, avg time 1095ms, avg throughput: 979MB/s\nsha256 time 22982ms, avg time 2298ms, avg throughput: 467MB/s\ngzip -6 time 378120ms, avg time 37812ms, avg throughput: 28MB/s\nlz4 -1 time 15484ms, avg time 1548ms, avg throughput: 693MB/s\n\n256K buffer\n\ncopy time 1805ms, avg time 180ms, avg throughput: 5948MB/s\nmd5 time 13706ms, avg time 1370ms, avg throughput: 783MB/s\nsha1 time 11074ms, avg time 1107ms, avg throughput: 969MB/s\nsha256 time 22588ms, avg time 2258ms, avg throughput: 475MB/s\ngzip -6 time 372645ms, avg time 37264ms, avg throughput: 28MB/s\nlz4 -1 time 16346ms, avg time 1634ms, avg throughput: 656MB/s"
    },
    {
        "commit": "f773d909be42ba68125df991e8fbabb30f2bbe4a",
        "date": "2020-05-19 14:35:20 -0400",
        "subject": "Improve storage filter performance tests.",
        "body": "Improve the accuracy of the calculations in several areas with better integer expressions.\n\nMake the input buffer size configurable. Previously it was always 1mb, i.e. block size.\n\nUse a macro for output results to reduce code duplication."
    },
    {
        "commit": "a3d9d9a387c61d02cf66eac0c6ab84517898dc34",
        "date": "2020-05-19 08:20:33 -0400",
        "subject": "Handle missing reason phrase in HTTP response.",
        "body": "Reason phrases (e.g. OK) are optional in HTTP 1.1 but the space after the status code is not. When the reason phrase was missing the required space was trimmed along with the trailing CR leading to a format error.\n\nRework the logic to preserve the space and allow empty reason phrases.\n\nFound while testing against the Backblaze S3-compatible API."
    },
    {
        "commit": "cffdadad927e3860bd33247ef6b7c3037fc7d9cb",
        "date": "2020-05-18 19:55:09 -0400",
        "subject": "Fix typo pp64le -> ppc64le.",
        "body": "Travis-CI guessed the correct value but logged a warning."
    },
    {
        "commit": "688ec2a8f5634694a3985ec003d118ed8c74b540",
        "date": "2020-05-18 19:11:26 -0400",
        "subject": "Use an extension to denote vendorized code.",
        "body": "Vendorized code is copied from another project when a library is not available and a git subproject won't work. Currently all the vendorized code is copied from PostgreSQL but it makes sense to have a more general mechanism for indicating vendorized code.\n\nThe .vendor extension will be used to denote vendorized code in the same way that .auto is used to denote auto-generated code."
    },
    {
        "commit": "a329afd3be16206e0397732f0de79c93686702f1",
        "date": "2020-05-18 19:02:11 -0400",
        "subject": "Add MD5 hash filter to performance tests."
    },
    {
        "commit": "92c036b966b3f88b4914c5be24c96c22d5019e98",
        "date": "2020-05-18 18:09:41 -0400",
        "subject": "Add code count rule for valgrind suppression missed in 6be5ea33.",
        "body": "6be5ea33 changed valgrind suppression file naming but failed to update the code count rules."
    },
    {
        "commit": "ac5d46dc50a662c97c2948aac9101c0df71110f3",
        "date": "2020-05-16 18:25:31 -0400",
        "subject": "Increase buffer size for lz4 compression flush.",
        "body": "Some lz4 versions between r131 and 1.7.5 did not return a sufficient buffer size from LZ4F_compressBound() to allow LZ4F_compressEnd() to complete reliably. While this issue was fixed in lz4 1.7.5 there are affected versions in supported distributions such as CentOS/RHEL 7.\n\nUse one of the hacks suggested in https://github.com/lz4/lz4/issues/290 to increase the buffer size enough for LZ4F_compressEnd() to complete. This means that a slightly larger buffer size is required for all versions but it seems worth it to (hopefully) to fix the issue in all lz4 versions."
    },
    {
        "commit": "f4e6e6bd80c68dca6a33a8e23e0fa32026f52d23",
        "date": "2020-05-15 07:49:23 -0400",
        "subject": "Add missing cryptoInit() in cryptoHmacOne().",
        "body": "If cryptoInit() had not already been called then EVP_get_digestbyname() would fail.\n\nThis does not appear to be a problem currently because of call order. Also, newer versions of OpenSSL auto-initialize."
    },
    {
        "commit": "ea485e916bb29c9c0306b7c28148f09883835482",
        "date": "2020-05-14 18:45:23 -0400",
        "subject": "Add jq to tools installed by Vagrantfile."
    },
    {
        "commit": "ed5149c9be9e41ba4b2ccccac3644f24ecb36bd7",
        "date": "2020-05-14 18:27:26 -0400",
        "subject": "Disable package builds for CentOS 7 which are broken upstream."
    },
    {
        "commit": "e7ad795ffba6f963457b27142fe17d4aa6bd5c01",
        "date": "2020-05-13 19:00:48 -0400",
        "subject": "Move common HTTP headers to HTTP client.",
        "body": "Some headers in the S3 driver were common HTTP headers that may be used by other drivers that utilize HTTP.\n\nAlso change the order of HTTP_HEADER_TRANSFER_ENCODING to be alphabetical."
    },
    {
        "commit": "4cbd1f1e7efe5217540e2e69bb3baf5d55556068",
        "date": "2020-05-13 14:27:28 -0400",
        "subject": "Fix incorrect whitespace."
    },
    {
        "commit": "b5dd14e6f306b18f4a1f555ccde28ffda8e41ac8",
        "date": "2020-05-12 18:55:20 -0400",
        "subject": "Make storage type more generic in the integration tests.",
        "body": "Rather than bS3 use strStorage which can indicate more than two storage types.\n\nFor the moment there are still only two storage types but this change is required before more can be added."
    },
    {
        "commit": "9639a2c15fa3e3bb5cffc6bf6ac4eb82f85aef49",
        "date": "2020-05-12 13:30:46 -0400",
        "subject": "Add missing do...while loop to harness macro."
    },
    {
        "commit": "b8a5c3ac6fe5b4c321270ae256492e11b8276445",
        "date": "2020-05-12 13:13:04 -0400",
        "subject": "Fix incorrect command in reference documentation.",
        "body": "Also update process to command to be more consistent with the surrounding text."
    },
    {
        "commit": "33cbdb78fd3f51f758b2da948faaee97d6bcd870",
        "date": "2020-05-11 10:10:22 -0400",
        "subject": "Add ppc64le to Travis-CI build matrix.",
        "body": "apt.postgresql.org provides packages for ppcle64 so it's important that we support it.\n\nRearrange jobs a bit based on current runtimes and importance. Also reduce the number of tests run for arm64 since it is slower than other architectures."
    },
    {
        "commit": "86855e271d476e9cf04d5844a7630a979b0398d6",
        "date": "2020-05-09 12:12:29 -0400",
        "subject": "Fix subtle timing issue in command/expire tests.",
        "body": "cdebfb09 added relative times to backup.into but a subtle issue was introduced that would cause the tests to fail if the time acquired by cmdExpire() was exactly the same as timeNow used to format backup.info. cmdExpire() was working correctly given the inputs, but the tests did not run predictably.\n\nThis was found while running the tests with --no-valgrind --no-coverage which allows them to run a lot faster, thus exposing the timing issue."
    },
    {
        "commit": "22d260ad53c4517ece42fe64ff75e022e5054466",
        "date": "2020-05-09 09:17:33 -0400",
        "subject": "Allow more tests to run outside of containers.",
        "body": "These tests required sudo to achieve complete coverage.\n\nAdd a new coverage exception, vm_covered, that applies to code that can only be covered in a container. When the test is run outside of a container code sections that require a container will be excluded with TEST_CONTAINER_REQUIRED and the coverage exception will be added to prevent a coverage error.\n\nThis does require marking up the core code with vm_covered, which in some modules (e.g. common/io/tls/client) can be extensive. It's possible that some of these tests can be rewritten to be less dependent on sudo but no attempt was made to do that here.\n\nOnly allow coverage summaries in a vm since coverage summaries outside a vm will not be complete, which was true even before this commit."
    },
    {
        "commit": "b4fc1804a83beb2628b1094cec2962f550e40bcd",
        "date": "2020-05-08 16:27:54 -0400",
        "subject": "Minor updates for bzip2 compression after more review.",
        "body": "Update error types throw by bzip2 to be more consistent with gzip.\r\n\r\nUpdate the bzip2 and gzip error default to be AssertError as that's the more common case in both, and add a 'break;' to the default clause -- we don't intend to be just falling through those case statements, even if the default is the last, we should be explicit about that.\r\n\r\nClean up some tabs that snuck in, rename a variable to be more clear, and add some comments."
    },
    {
        "commit": "14369c1c3c8231e7b09b60493f2ad5047f39053c",
        "date": "2020-05-08 15:36:20 -0400",
        "subject": "Mark variables modified in TRY block as volatile.",
        "body": "It's important that the values in these variables are maintained even after an exception is thrown, so they must be marked volatile.\n\nFound while testing on the ppc64le architecture."
    },
    {
        "commit": "cdebfb09e01e64d6acfe650345a56d2b1805374e",
        "date": "2020-05-08 15:25:03 -0400",
        "subject": "Add time-based retention for full backups.",
        "body": "The --repo-retention-full-type option allows retention of full backups based on a time period, specified in days.\r\n\r\nThe new option will default to 'count' and therefore will not affect current installations. Setting repo-retention-full-type to 'time' will allow the user to use a time period, in days, to indicate full backup retention. Using this method, a full backup can be expired only if the time the backup completed is older than the number of days set with repo-retention-full (calculated from the moment the 'expire' command is run) and at least one full backup meets the retention period. If archive retention has not been configured, then the default settings will expire archives that are prior to the oldest retained full backup. For example, if there are three full backups ending in times that are 25 days old (F1), 20 days old (F2) and 10 days old (F3), then if the full retention period is 15 days, then only F1 will be expired; F2 will be retained because F1 is not at least 15 days old."
    },
    {
        "commit": "e873ad6da0b1c2b15a360a117f71df386aa23a0d",
        "date": "2020-05-07 17:26:46 -0400",
        "subject": "Update Minio version to 2020-05-06T23-23-25Z in tests/documentation.",
        "body": "This release fixes the issue we submitted regarding an unquoted eTag: https://github.com/minio/minio/issues/9517"
    },
    {
        "commit": "faabf1227d05dcfbefcd0dfa57fae9a537e2fc08",
        "date": "2020-05-07 11:06:56 -0400",
        "subject": "Update Fedora container to Fedora 32.",
        "body": "This allows unit testing on gcc 10.\n\nAlso fix an incorrect enum in the config/config unit test that was caught by the new compiler."
    },
    {
        "commit": "6646446d2a1ed6182c8388c0007e184d15522127",
        "date": "2020-05-07 10:22:22 -0400",
        "subject": "Use Z_STREAM_END to detect gz compression finish.",
        "body": "Checking for free space in the output buffer worked, but if the buffer was completely filled then deflate() would need to be called again, which was wasteful and a bit confusing for debugging.\n\nInstead, use Z_STREAM_END to detect that compression is done.\n\nThis change was inspired by the bz2 implementation in a021c9fe since bz2 does not allow BZ2_bzCompress() to be called after BZ_STREAM_END is returned. That made it obvious that gz would prefer the same implementation, even if it is more tolerant. The documentation at https://www.zlib.net/manual.html agrees."
    },
    {
        "commit": "f8509ab76ca9fc3469ab8a9752223c6462213e00",
        "date": "2020-05-07 07:38:28 -0400",
        "subject": "Don't allow sudo to disable core dumps in test containers.",
        "body": "Newer versions of sudo output this message to stderr when run in a container:\n\nsudo: setrlimit(RLIMIT_CORE): Operation not permitted\n\nSee https://github.com/sudo-project/sudo/issues/42 for details.\n\nA simple workaround is to prevent sudo from disabling core dumps. This seems safe enough because if sudo is segfaulting then core files are the least of our worries."
    },
    {
        "commit": "3a7558985505ce1a764e846aa01e943dc1e470d1",
        "date": "2020-05-07 07:23:15 -0400",
        "subject": "Don't allow sudo to disable core dumps in documentation.",
        "body": "Newer versions of sudo output this message to stdout when run in a container:\n\nsudo: setrlimit(RLIMIT_CORE): Operation not permitted\n\nSee https://github.com/sudo-project/sudo/issues/42 for details.\n\nA simple workaround is to prevent sudo from disabling core dumps. This seems safe enough because if sudo is segfaulting then core files are the least of our worries."
    },
    {
        "commit": "ad784e19971d43d886abdec9ee2c326954d9d7a3",
        "date": "2020-05-07 07:12:42 -0400",
        "subject": "Add libz-dev to required build packages in Debian documentation.",
        "body": "This is apparently not installed by default in Ubuntu 20.04 as it was in prior versions."
    },
    {
        "commit": "12a5d8a155aeb999a4683caaa0e2ca22925be443",
        "date": "2020-05-06 19:11:28 -0400",
        "subject": "Add arm64 to Travis-CI build matrix.",
        "body": "apt.postgresql.org will soon be providing packages for arm64 so it's important that we support it.\n\nTesting on multiple architectures also helps expose potential issues in popular architectures. See 10a5182d for an example."
    },
    {
        "commit": "6be5ea3388a0238247e2a2cf47f9efd6b1a21d74",
        "date": "2020-05-06 18:24:48 -0400",
        "subject": "Suppress Valgrind errors on a per-VM basis.",
        "body": "There are a number of Valgrind errors on Ubuntu 12.04 which do not happen on newer distro versions. However, suppressions for these errors have masked legitimate issues in subsequent code.\n\nInstead, make suppressions VM specific so errors in other VMs are not masked."
    },
    {
        "commit": "28967951abb47d82914b3b8822a6bc4b79502ac0",
        "date": "2020-05-06 18:17:50 -0400",
        "subject": "Fix leak in TlsClient object.",
        "body": "sckClientOpen() is the most likely part of this code to error so move it up above SSL session creation to reduce the chance of a leak."
    },
    {
        "commit": "e67792980249b2e35c81d26d2fa574bab52250cb",
        "date": "2020-05-06 18:09:11 -0400",
        "subject": "Fix leak in CipherBlock object.",
        "body": "EVP_CIPHER_CTX_cleanup() was being called instead of EVP_CIPHER_CTX_free() so most of the memory was being freed but not all of it.\n\nThis leak was masked by Valgrind suppressions which are only applicable to Ubuntu 12.04, which will be addressed in a future commit."
    },
    {
        "commit": "10a5182d626bd4ba55d4c6ae711555fb030121ca",
        "date": "2020-05-06 15:00:34 -0400",
        "subject": "Simplify retry handling in tls/http/socket clients.",
        "body": "Travis-CI arm64 was not happy with this pattern, perhaps because connected was being reset after a longjmp() even though it should have stayed with its originally initialized value of false. In any case, tlsClientOpen() ended up returning NULL on error rather than throwing an exception.\n\nThe new pattern seems simpler and passes all tests unmodified, so even though the error was only seen in TlsClient it makes sense to propagate to the other clients."
    },
    {
        "commit": "8aede3353cac6a7ddd08f89e23343c6e8b81d3fd",
        "date": "2020-05-06 14:49:03 -0400",
        "subject": "Always use 127.0.0.1 on TLS tests outside of containers.",
        "body": "Resolving localhost can vary based on the local network configuration so it is safer to just use a static IP.\n\nThis was found while testing on Travis-CI arm64."
    },
    {
        "commit": "3fe6ad5047515f51b6ef9bf783e41900eca21c24",
        "date": "2020-05-06 10:23:42 -0400",
        "subject": "Build branches with -cit suffix on Travis-CI.",
        "body": "This allows a branch to be targeted at only Travis-CI and not other CI services."
    },
    {
        "commit": "4c6dbe17eaea15b342f03292dd899de335ff2971",
        "date": "2020-05-06 09:12:50 -0400",
        "subject": "Remove redundant Cirrus-CI branch filter."
    },
    {
        "commit": "a021c9fe053934b9b620f20caffbbf311c457bb8",
        "date": "2020-05-05 16:49:01 -0400",
        "subject": "Add bzip2 compression support.",
        "body": "bzip2 is a widely available, high-quality data compressor. It typically compresses files to within 10% to 15% of the best available techniques (the PPM family of statistical compressors), while being around twice as fast at compression and six times faster at decompression.\r\n\r\nbzip2 is currently available on all supported platforms."
    },
    {
        "commit": "98f30ef2225e849ecaf501ff11db3952c7ff93c7",
        "date": "2020-05-05 15:00:13 -0400",
        "subject": "Move PostgreSQL 9.4 real integration tests to Ubuntu 18.04.",
        "body": "PostgreSQL 9.4 packages for RHEL 6 were dropped from yum.p.o."
    },
    {
        "commit": "99405cbb1582c6dcc133ce9d722beef6e4a0cf78",
        "date": "2020-05-05 13:23:36 -0400",
        "subject": "Replace booleans with enums in compressType parameters.",
        "body": "This was an oversight in 438b957f which added multiple compression type support. The booleans were interpreted as none and gz which works fine for the CompressType enum until the position of gz or none changes."
    },
    {
        "commit": "d04c21ca83163e875ad4d9e06c57402f45979272",
        "date": "2020-05-04 19:05:38 -0400",
        "subject": "Centralize String and Buffer constants in stringz.h.",
        "body": "It's not clear how useful single-character zero-terminated constants are or if we want propagate them through the code, but it at least makes sense to centralize the constants used by the Buffer and String objects."
    },
    {
        "commit": "47aa765375844509edc1b6e406d4d020590b2e1d",
        "date": "2020-05-04 15:25:27 -0400",
        "subject": "Add Zstandard compression support.",
        "body": "Zstandard is a fast lossless compression algorithm targeting real-time compression scenarios at zlib-level and better compression ratios. It's backed by a very fast entropy stage, provided by Huff0 and FSE library.\n\nZstandard version >= 1.0 is required, which is generally only available on newer distributions."
    },
    {
        "commit": "1aaaa94253c3d50b5f4adbe5521cf2cee6cadbe3",
        "date": "2020-05-04 14:02:25 -0400",
        "subject": "Remove Ubuntu 19.04 container definition.",
        "body": "Ubuntu 19.04 is no longer supported."
    },
    {
        "commit": "39f5f3a0b484f16c2820bd47c0a12a530bd04c30",
        "date": "2020-05-04 13:12:52 -0400",
        "subject": "Remove PostgreSQL 9.4 for Fedora 30 dropped from yum.p.o."
    },
    {
        "commit": "64a21920e2cbe8444f78ce281d06c9dfa118ed12",
        "date": "2020-05-03 18:42:33 -0400",
        "subject": "Move S3 initialization in user guide quickstart.",
        "body": "The previous location was too late to allow --var=s3-all=y to work with --require=/repo-host, which depends on /quickstart/configure-archiving.\n\nSince the section is not included in production documentation, the position is not very important to flow so just move it to where it works."
    },
    {
        "commit": "ef9324992250028657f7fcc9393d79fbbd0148c3",
        "date": "2020-05-01 17:32:31 -0400",
        "subject": "Add contributor for 816ba924 and reclassify as a bug."
    },
    {
        "commit": "816ba9244f31bc9cc333eeed1e7e12e76e36edc3",
        "date": "2020-05-01 10:30:35 -0400",
        "subject": "Allow pg-path1 to be optional for synchronous archive-push.",
        "body": "If the WAL path is absolute then pg1-path should be optional but in fact it was required to load pg_control.\n\nSkip the pg_control check when pg1-path is not specified. The check against the stanza version/system-id remains to protect the repo from corruption."
    },
    {
        "commit": "1d45282b9723a05d0b14e7222c42b915aa217735",
        "date": "2020-05-01 09:31:50 -0400",
        "subject": "Add missing spaces between while keyword and condition.",
        "body": "Our convention is to have a space here but some were missed."
    },
    {
        "commit": "28ab65df1049be7623ce7af99a58a6dee616ea36",
        "date": "2020-05-01 09:08:37 -0400",
        "subject": "Remove unused struct member.",
        "body": "Perhaps this was intended to verify the WAL size but was never implemented.\n\nVerifying the WAL size is probably a good idea so this member may be added back if the feature is implemented."
    },
    {
        "commit": "22ba1f02ceca93a8a0fba1f1ba93243bbcb12337",
        "date": "2020-04-30 11:01:38 -0400",
        "subject": "Convert storagePosixNew() to storagePosixNewP().",
        "body": "An upcoming feature requires new parameters for storagePosixNew() and this causes a lot of churn because almost every test creates a Posix storage object. Some refactoring in the tests might reduce this duplication but storagePosixNew() is collecting a lot of parameters so converting to storagePosixNewP() makes sense in any case.\n\nThere are relatively few call sites in the core code but they still benefit from better readability after this change."
    },
    {
        "commit": "baf8cb90684fe743e51412f305f4194196f429ea",
        "date": "2020-04-30 10:47:09 -0400",
        "subject": "Fix issue checking if file links are contained in path links.",
        "body": "There is no conflict if the path containing a file link is a parent path of a path link. The Perl code apparently had this right but the migration to C missed it.\n\nExclude this case when checking for link conflicts."
    },
    {
        "commit": "ce55866714ac706e542bba7e14a9306b5de848f1",
        "date": "2020-04-30 10:34:44 -0400",
        "subject": "Enforce non-null for most string options.",
        "body": "There have been a number of segfaults reported because a string option expected to be non-null was actually null. This is generally due to options that are expected to be set but are in fact optional.\n\nProtect against this by creating cfgOptionStrNull() to get options that can be null, while changing cfgOptionStr() to always expect non-null. There are relatively few places where nulls are expected.\n\nThere is definitely a chance for breakage here as null options might currently be working in the field but will be caught by this new check. Hopefully introducing the check early in the release cycle will allow us to catch any issues."
    },
    {
        "commit": "1158e7d645331ed364542f10b2c92a1740229601",
        "date": "2020-04-29 13:55:05 -0400",
        "subject": "Move command-line decompress check in common/compress test.",
        "body": "It makes sense to do this check right after the first compression so any issues are caught early.\n\nAlso, none of the current compression formats omit decompressCmd so make the test mandatory."
    },
    {
        "commit": "c5241e5007c4736b52a519e1eefd9a38f7971dc2",
        "date": "2020-04-29 08:06:49 -0400",
        "subject": "Expire WAL archive only when repo-retention-archive threshold is met.",
        "body": "Previously when retention-archive was set (either by the user or by default), archives prior to the archive-start of the oldest remaining full backup (after backup expiration occurred) would be expired even though the retention-archive threshold had not been met. For example, if there were 1 full backup remaining after backup expiration and the retention-archive was set to 2 and retention-archive-type=full, then archives prior to the archive-start of the remaining full backup would still be removed even though retention-archive required 2 full backups remaining before archives should be expired.\n\nThe thought was to keep the archive directory clean and since the full backup did not require prior archives, it was safe to delete them. However, this has caused problems for some users in the past (because they needed the WAL for other purposes) and with the new adhoc and time-based retention features, it was decided that the archives should remain until the threshold was met. The archives will eventually be removed and if having them causes space issues, the expire command and the retention-archive can always be run and adjusted."
    },
    {
        "commit": "775e81a74deb4da274c1e4fc86b218e957a2173d",
        "date": "2020-04-28 15:55:54 -0400",
        "subject": "Refactor regular expression error handling per Coverity report.",
        "body": "Coverity was concerned that regExpError() might return and lead to an invalid reference of \"this\". This was unlikely since the function should never return but Coverity didn't know that. Also, a difference in error-handling logic at the two sites could cause the issue Coverity reported if they were to get out of sync.\n\nFix by refactoring out the core error function so that it is clear it will never return."
    },
    {
        "commit": "e421cf9dd31e0916885e1510278f918afc2318fd",
        "date": "2020-04-28 15:04:34 -0400",
        "subject": "Fix possible NULL reference reported by Coverity.",
        "body": "this->input is set to NULL when the read input goes to EOF but it was possible that this->input could be used again in a subsequent loop, according to Coverity.\n\nIn fact this would really only be a problem if EOF suddenly went back to false, which is not allowed. However, checking this->input is cheaper than calling ioReadEofDriver() driver on each loop so this change makes sense as an optimization and it makes Coverity happy, too."
    },
    {
        "commit": "f764953b70ee1ec839079fbda262a60d91b284c9",
        "date": "2020-04-27 17:25:38 -0400",
        "subject": "Check that options are valid when requested.",
        "body": "If an option may not be valid for a command it should be checked with cfgOptionValid() or cfgOptionTest().\n\nIt appears this rule is followed pretty strictly since the only changes required were in unit tests."
    },
    {
        "commit": "1c1a7104604073feff3109a74d1d8ee4a2efc86d",
        "date": "2020-04-27 14:00:36 -0400",
        "subject": "Add --set option to the expire command.",
        "body": "The specified backup set (i.e. the backup label provided and all of its dependent backups, if any) will be expired regardless of backup retention rules except that at least one full backup must remain in the repository."
    },
    {
        "commit": "ad33f545d165260c85cb41f39fd9b0044cc97841",
        "date": "2020-04-27 13:17:30 -0400",
        "subject": "Move latest backup link functionality to backup/common module.",
        "body": "This function is needed for new expire features."
    },
    {
        "commit": "483838233fb4d36425a84dc6274cc1f8833feaa2",
        "date": "2020-04-27 10:57:19 -0400",
        "subject": "The expire command now checks if a stop file is present.",
        "body": "This check has always been missing but it was not noticed because expire is not usually run independently of backup, which does the check correctly."
    },
    {
        "commit": "a5b2630d7c089b229f48e2f9cbd1e9b390fcf496",
        "date": "2020-04-27 10:49:05 -0400",
        "subject": "Throw user-friendly error if expire is not run on repository host.",
        "body": "Running the expire command on a non-repository host threw an assertion because the command is not yet configured for remote execution."
    },
    {
        "commit": "987df62ec014c9b3f21b1ff9cd6db9a33f837a84",
        "date": "2020-04-26 17:22:37 -0400",
        "subject": "Centralize enforcement of option constraints.",
        "body": "Each option type enforced its own constraints but there was a lot of duplication. Centralize the enforcement to remove the duplication.\n\nAlso convert the option type assert to a production error. This is unlikely to happen in production but the test is quite cheap so it can't hurt.\n\nFinally, add a NULL check. Most option types can never be NULL."
    },
    {
        "commit": "12069ff8f388171cf094a579ad27f5969d92b60e",
        "date": "2020-04-24 08:45:54 -0400",
        "subject": "Add reviewer."
    },
    {
        "commit": "0dd6629a2dba7c011e03c5f39659dc516da28456",
        "date": "2020-04-24 08:40:54 -0400",
        "subject": "Automatically add default user as reviewer.",
        "body": "Contributions looked like they had no reviewer when reviewed by the default user."
    },
    {
        "commit": "e92eb709d6c60e44f406af139b8346b12fee1868",
        "date": "2020-04-24 08:00:00 -0400",
        "subject": "Add backup/expire running status to the info command.",
        "body": "This is implemented by checking for a backup lock on the host where info is running so there are a few limitations:\n\n* It is not currently possible to know which command is running: backup, expire, or stanza-*. The stanza commands are very unlikely to be running so it's pretty safe to guess backup/expire. Command information may be added to the lock file to improve the accuracy of the reported command.\n\n* If the info command is run on a host that is not participating in the backup, e.g. a standby, then there will be no backup lock. This seems like a minor limitation since running info on the repo or primary host is preferred."
    },
    {
        "commit": "2e6938fad9ab4e93c472a3f86812ed82fba1df4d",
        "date": "2020-04-21 17:55:36 -0400",
        "subject": "Restore works when PGDATA is a link.",
        "body": "Make the restore clean process look more like manifest build, i.e. do cleanup of each target root directory outside the main cleanup callback. This means some code duplication but removes the logic handling \"dot\" paths.\n\nAdd tests for both restore and backup (which already worked but was not tested)."
    },
    {
        "commit": "1eb26789387eff604e5902848be4ea7cb633557e",
        "date": "2020-04-21 17:20:42 -0400",
        "subject": "Fix minor leak in TLS host verification.",
        "body": "sk_GENERAL_NAME_free() only freed the name stack, not the names in the stack. sk_GENERAL_NAME_pop_free() frees both.\n\nDue to aggressive connection reuse this leak was unlikely to be very noticeable."
    },
    {
        "commit": "6d11fe53f773163407cf28096f3e48f75c119460",
        "date": "2020-04-21 10:51:38 -0400",
        "subject": "Update RHEL package location (again).",
        "body": "This changed (again) upstream so update the file paths."
    },
    {
        "commit": "a999500d2c6fe07cfc935ba40dbf2d9a192a8f0c",
        "date": "2020-04-20 16:21:53 -0400",
        "subject": "Remove XML source for test/README.md.",
        "body": "63b9f46a removed test/README.md but did not remove the XML source so it reappeared when the release documentation was built."
    },
    {
        "commit": "3e2dc058173bdd01f6d48d7715c70e3c5b17facb",
        "date": "2020-04-20 15:58:06 -0400",
        "subject": "Begin v2.27 development."
    },
    {
        "commit": "2352ecf7c0db8d12cda4759709b4cd570e1b5de4",
        "date": "2020-04-20 15:44:31 -0400",
        "subject": "v2.26: Non-blocking TLS"
    },
    {
        "commit": "93e4fe0199bdff3de34eee92b6ace99dab1acb98",
        "date": "2020-04-20 13:11:34 -0400",
        "subject": "Specify that the io-timeout option is measured in seconds."
    },
    {
        "commit": "1c319e051b26930da69bef8eebbe1414db820a1a",
        "date": "2020-04-20 11:49:11 -0400",
        "subject": "Remove stray copy of LibCAuto.pm.",
        "body": "This was removed in 79cfd3ae but accidentally added back in 2fa69af8, probably due to an incorrectly resolved merge conflict."
    },
    {
        "commit": "4b28f79c92b497eb336ab9b180f029a6bffda5c1",
        "date": "2020-04-20 11:08:58 -0400",
        "subject": "Clear error queue before each SSL_*() call.",
        "body": "The documentation recommends clearing the error queue before each SSL_*() call.\n\nSince we always check the results of SSL_*() for errors instead of blindly calling SSL_get_error() it's not clear this makes any difference, but it still seems like a good idea to be sure there are no stray errors in the queue."
    },
    {
        "commit": "6f41ce1182c3417f4a7844cbe5de5875c27e4363",
        "date": "2020-04-20 09:45:08 -0400",
        "subject": "Add expire to commands that support io-timeout.",
        "body": "The command list was not complete. Copy the command list from buffer-size to make sure all commands are included."
    },
    {
        "commit": "21a1cf9a2f18cc294474efda064a2ae08cc8d18d",
        "date": "2020-04-17 09:55:40 -0400",
        "subject": "Add sck-block option.",
        "body": "This option puts sockets into blocking mode.\n\nIt is only intended for internal use and is not included in the test matrix."
    },
    {
        "commit": "5d25e508aeb8febd509f26225425b391fe45ad06",
        "date": "2020-04-17 09:18:52 -0400",
        "subject": "Add io-timeout option.",
        "body": "Timeout used for connections and read/write operations.\n\nNote that the entire read/write operation does not need to complete within this timeout but some progress must be made, even if it is only a single byte."
    },
    {
        "commit": "c88684e2bf32cef8cc185cca4ef213457b03fa62",
        "date": "2020-04-16 16:05:44 -0400",
        "subject": "Non-blocking TLS implementation.",
        "body": "The prior blocking implementation seemed to be prone to locking up on some (especially recent) kernel versions. Since we were unable to reproduce the issue in a development environment we can only speculate as to the cause, but there is a good chance that blocking sockets were the issue or contributed to the issue.\n\nSo move to a non-blocking implementation to hopefully clear up these issues. Testing in production environments that were prone to locking shows that the approach is promising and at the very least not a regression.\n\nThe main differences from the blocking version are the non-blocking connect() implementation and handling of WANT_READ/WANT_WRITE retries for all SSL*() functions.\n\nTimeouts in the tests needed to be increased because socket connect() and TLS SSL_connect() were not included in the timeout before. The tests don't run any slower, though. In fact, all platforms but Ubuntu 12.04 worked fine with the shorter timeouts."
    },
    {
        "commit": "2260a7512aab7a50473466cc524aabb2a5002edf",
        "date": "2020-04-16 15:02:33 -0400",
        "subject": "Use poll() instead of select() for monitoring socket read/write ready.",
        "body": "select() is a bit old-fashioned and cumbersome to use. Since the select() code needed to be modified to handle write ready this seems like a good time to upgrade to poll().\n\npoll() has been around for a long time so there doesn't seem to be any need to provide a fallback to select().\n\nAlso change the error on timeout from FileReadError to ProtocolError. This works better for read vs. write and failure to poll() is indicative of a protocol error or unexpected EOF."
    },
    {
        "commit": "e5e81d3839648617266285ca519f76835b79f611",
        "date": "2020-04-16 14:48:16 -0400",
        "subject": "Only limit backup copy size for WAL-logged files.",
        "body": "The prior behavior introduced in dcddf3a5 could possibly lead to postgresql.conf or postgresql.auto.conf being truncated in the backup since they are copied via tmp files and could change size during the backup.\n\nIn general it seems safer to limit this feature to WAL-logged files which will be reconstructed during recovery."
    },
    {
        "commit": "85f4eef55e62dcaf05705ce3123cb04b59c2a1f4",
        "date": "2020-04-16 14:13:53 -0400",
        "subject": "Add Cirrus CI and Vagrant configuration for FreeBSD and MacOS.",
        "body": "Building on these platforms gives us better coverage for our build code. Cirrus CI was chosen because it is the only service that supports FreeBSD (that we could find).\n\nThe FreedBSD configuration for Vagrant is currently just enough to perform a build.\n\nThe MacOS configuration is not actually for Vagrant (yet) but does show the steps needed to setup the build environment on MacOS."
    },
    {
        "commit": "09fc69f3e8a0f8ccf6ce95b5d7e59b68b00d14ff",
        "date": "2020-04-16 13:58:46 -0400",
        "subject": "Make existing Vagrantfile configuration the default.",
        "body": "This allows us to add new configurations mostly without changing the behavior of vagrant from the command line, i.e. vagrant up and vagrant ssh will continue to bring up the default configuration.\n\nHowever, vagrant destroy -f will remove all configurations. That's really only a change in behavior if more than one configuration is running, which is not currently possible."
    },
    {
        "commit": "34d7338604b423b858e315db58a7a0976ad30e17",
        "date": "2020-04-16 11:50:35 -0400",
        "subject": "Fix headers for FreeBSD/MacOS.",
        "body": "It looks like Linux is tolerant of the BSD headers so remove the conditionals.\n\nEventually it might be a good idea to include these based on configure rules but that seems over overkill for now."
    },
    {
        "commit": "492180837ee654bb5052bbaca3d04111ee89a4c6",
        "date": "2020-04-14 18:03:41 -0400",
        "subject": "Classify all .h files as C.",
        "body": "Github classifies many C header files as C++, perhaps because they don't contain anything definitively C-like.\n\nAdd an override to ensure .h files are always classified as C since this project contains no C++."
    },
    {
        "commit": "0c07c5111fb73821abed678166cc7bfb132f2285",
        "date": "2020-04-14 15:33:43 -0400",
        "subject": "Remove empty subexpression from manifest regular expression.",
        "body": "MacOS was not happy about this though other platforms seemed to work fine.\n\nThis was likely a typo or a relic from refactoring."
    },
    {
        "commit": "8fb0a8fd6ed7453202ca6bee6516bb5489f9a555",
        "date": "2020-04-14 15:28:43 -0400",
        "subject": "Remove incorrect Github id.",
        "body": "This was a copy-pasto from another contributor entry."
    },
    {
        "commit": "02ebba02b29739b0ff7a1c8e3833c3ff8732041c",
        "date": "2020-04-14 15:23:19 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "9ffa2c618fe54710a37448302a0efa1368a041f0",
        "date": "2020-04-14 15:22:49 -0400",
        "subject": "Use SocketSession/TlsSession for test servers.",
        "body": "A session looks much the same whether it is initiated from the client or the server, so use the session objects to implement the TLS, HTTP, and S3 test servers.\n\nFor TLS, at least, there are some differences between client and server sessions so add a client/server type to SocketSession to determine how the session was initiated.\n\nAside from reducing code duplication, the main advantage is that the test server will now timeout rather than hanging indefinitely when less input that expected is received."
    },
    {
        "commit": "71fb28bf3f7387a225c8a32b810772f3f2b09820",
        "date": "2020-04-14 15:20:50 -0400",
        "subject": "Always throw error when OpenSSL returns SSL_ERROR_SYSCALL.",
        "body": "Previously an error was only thrown when errno was set but in practice this is usually not the case. This may have something to do with getting errno late but attempts to get it earlier have not been successful. It appears that errno usually gets cleared and spot research seems to indicate that other users have similar issues.\n\nAn error at this point indicates unexpected EOF so it seems better to just throw an error all the time and be consistent.\n\nTo test this properly our test server needs to call SSL_shutdown() except when the client expects this error."
    },
    {
        "commit": "9f2d647badb666c31ba25c4df8c7294331287a23",
        "date": "2020-04-14 15:02:18 -0400",
        "subject": "Split session functionality of TlsClient out into TlsSession.",
        "body": "This abstraction allows the session code to be shared between the TLS client and (upcoming) server code.\n\nSession management is no longer implemented in TlsClient so the HttpClient was updated to free and create sessions as needed. No test changes were required for HttpClient so the functionality should be unchanged.\n\nMechanical changes to the TLS tests were required to use TlsSession where appropriate rather than TlsClient. There should be no change in functionality other than how sessions are managed, i.e. using tlsClientOpen()/tlsSessionFree() rather than just tlsClientOpen()."
    },
    {
        "commit": "c9481bb95f1edaa93b26f8fce767950e00b40543",
        "date": "2020-04-14 14:51:14 -0400",
        "subject": "Update contributing.xml to use Ubuntu 18.04.",
        "body": "Ubuntu 19.04 was EOL in January and has been removed from the repository servers.\n\nIt may be best to stick to LTS versions from now on."
    },
    {
        "commit": "f03d1b5b7b880b25a19a087ec5e29e3393e2ce43",
        "date": "2020-04-14 11:43:50 -0400",
        "subject": "Use __noreturn_ on error functions when coverage testing.",
        "body": "The errorInternalThrowSys*() functions were marked as returning during coverage testing even when they had no possibility to return, i.e. the error parameter was set to constant true. This meant the compiler would treat the functions as returning even when they would not.\n\nInstead create completely separate functions for coverage to use for THROW_ON_SYS_ERROR*() that can return and leave the regular functions marked __noreturn__."
    },
    {
        "commit": "b7d8d61526e1ed7e617953fc36736d89f9295252",
        "date": "2020-04-13 16:59:02 -0400",
        "subject": "Split session functionality of SocketClient out into SocketSession.",
        "body": "This abstraction allows the session code to be shared between the socket client and (upcoming) server code. There should no difference in how the code works -- only the organization has changed. Note that no changes to the tests were required.\n\nThis same abstraction will be required for TlsClient but that will be done in a separate commit because it requires test changes."
    },
    {
        "commit": "b5347070af5e3e5b9d6a44555aed0212b5cd022a",
        "date": "2020-04-13 16:44:29 -0400",
        "subject": "Remove extraneous assignment.",
        "body": "This is likely leftover cruft from a prior refactor."
    },
    {
        "commit": "9d2223b18881bf862d6ca5da7a2ad28b86421fb1",
        "date": "2020-04-13 14:57:01 -0400",
        "subject": "Improve comments and fix typos in the storage interface."
    },
    {
        "commit": "310d42ca35431bb196dfc81300b7d8dfa96bbd35",
        "date": "2020-04-13 14:51:04 -0400",
        "subject": "Correct option name in test.pl help."
    },
    {
        "commit": "71ce6375571bf9253b7aebad5ee44774fb3cbb07",
        "date": "2020-04-12 09:01:41 -0400",
        "subject": "Use standard HARNESS_FORK*() macros to fork test servers.",
        "body": "These forks were done in a custom way (not sure why) and lack the capability of the standard macros for the parent to wait for child exit.\n\nThis mean that the server would continue to run after the tests were complete and that multiple servers could run at once. This caused subtle timing and connection issues that required larger timeouts to resolve.\n\nDon't change the timeouts here since they need to be adjusted in future commits anyway."
    },
    {
        "commit": "42246401b8805c14d8b2a6938dfef152d2905d70",
        "date": "2020-04-11 16:24:45 -0400",
        "subject": "Add comment."
    },
    {
        "commit": "674b65886face9b2f7966c4f9ff1dc321b90e61c",
        "date": "2020-04-11 16:21:03 -0400",
        "subject": "Suppress uncoverable error in common/io-tls test module.",
        "body": "It is pretty much impossible for a static IP to not resolve to an address but in theory the error could catch other conditions so it seems best to keep it."
    },
    {
        "commit": "9a751c2d98f27c4e270d6d47c0262cad68aee68f",
        "date": "2020-04-10 12:56:28 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "63b9f46a34ce20c172394a625858d807b1e2a5a9",
        "date": "2020-04-09 18:25:25 -0400",
        "subject": "Update contributing documentation and remove test/README.md.",
        "body": "When the Vagrant file was updated to use pgbackrest/ vs /backrest/ as the location for executing tests and building the documentation, parts of the contributing.xml (and hence the CONTRIBUTING.md) were not updated since some parts of the document are not actually executed when the CONTRIBUTING.md is built from contributing.xml: those parts that are executed were updated but those parts that are not executed were not.\n\nThis commit fixes the contributing.xml issue but also removes test/README.md as its contents were out of date and redundant given that they are covered in CONTRIBUTING.md."
    },
    {
        "commit": "55c3a3c8d3d58c4b02327be39b3cf080f3805358",
        "date": "2020-04-09 18:13:35 -0400",
        "subject": "Allow zero wait times in Wait object.",
        "body": "This limitation forced extra logic in cases where zero wait times were needed.\n\nRemove the limitation and the extra logic in cases where zero wait times are possible."
    },
    {
        "commit": "c292e8957ded825483f08060ce8857ad935637fd",
        "date": "2020-04-07 14:56:09 -0400",
        "subject": "Add some debugging to tests that fork servers.",
        "body": "Help identify whether errors are happening in the forked server or the main test by showing the line number where the server was forked off in the stack trace."
    },
    {
        "commit": "099bd85ed7cdca017fbfae4d12134a00fcf2236b",
        "date": "2020-04-07 14:42:05 -0400",
        "subject": "Reset line number in TEST_ERROR*() macros.",
        "body": "If these are not reset then an error not wrapped in a TEST_ERROR*() macro may show the line number of the previous error in a stack trace, which is confusing.\n\nIt is better for the line number to be unreported than wrong."
    },
    {
        "commit": "627b49535222bf8408b2593b633a79c8eba3b832",
        "date": "2020-04-07 14:35:36 -0400",
        "subject": "Add waitRemaining() to get remaining wait time.",
        "body": "This can be used to set timeouts so they do not wait longer than needed."
    },
    {
        "commit": "ac3cfa4c9c31a00fb9f88ad65430cd0c550fee49",
        "date": "2020-04-07 14:23:31 -0400",
        "subject": "Allow default process id to be specified in logInit().",
        "body": "The default process id was previously always 0 but there are cases where it is useful to be able to set the default.\n\nCurrently the only use case is for testing but the upcoming server code will also make use of it."
    },
    {
        "commit": "2ec379fa40142462fd018a385affa14346ca76e7",
        "date": "2020-04-07 11:10:58 -0400",
        "subject": "Add ideator to release note."
    },
    {
        "commit": "5e55d588507e7948dbb48bb8d9427ab4d4503c20",
        "date": "2020-04-06 16:09:18 -0400",
        "subject": "Simplify storage driver info and list functions.",
        "body": "The storage driver requires two list functions to be implemented, list and infoList. But the former is a subset of the latter so implementing both in every driver is wasteful. The reason both exist is that in Posix it is cheaper to get a list of names than it is to stat files to get size, time, etc. In S3 these operations are equivalent.\n\nIntroduce storageInfoLevelType to determine the amount of information required by the caller. That way Posix can work efficiently and all drivers can return only the data required which saves some bandwidth. The storageList() and storageInfoList() functions remain in the storage interface since they are useful -- the only change is simplifying the drivers with no external impact.\n\nNote that since list() accepted an expression infoList() must now do so. Checking the expression is optional for the driver but can be used to limit results or save IO costs.\n\nSimilarly, exists() and pathExists() are just specialized forms of info() so adapt them to call info() instead."
    },
    {
        "commit": "7679f8f88622cd14d442e69d133bd108783cdd80",
        "date": "2020-04-04 13:59:50 -0400",
        "subject": "Fix issue with THROW*_SYS_ERROR_CODE*() using wrong errno.",
        "body": "When DEBUG_COVERAGE was defined errno was being used instead of the value being passed. This apparently worked by happenstance in the single existing usage but it won't work in general."
    },
    {
        "commit": "f984aec66508354e8537b3f8c226f0e574592306",
        "date": "2020-04-03 18:15:32 -0400",
        "subject": "Standardize some section names in headers.",
        "body": "It's better to start out with plural forms rather than flip back and forth as functions are added and subtracted. So, use \"Constructors\" instead of \"Constructor\".\n\nUse \"Getters/Setters\" rather than \"Getters\" or \"Setters\" to avoid similar churn."
    },
    {
        "commit": "1aca2cc90290ffefcc95530dba55e19313754219",
        "date": "2020-04-03 18:01:28 -0400",
        "subject": "Move extern function comments to headers.",
        "body": "This has been the policy for some time but due to migration pressure only new functions and refactors have been following this rule. Now it seems sensible to make a clean sweep and move all the comments that have not been moved already (i.e. most of them).\n\nOnly obvious typos and gross inaccuracies in the comments have been fixed. For this most part this was a copy and paste operation.\n\nUseless comments, e.g. \"New object\", were not copied. Even so, there are surely many deficient comments left.\n\nSome rearranging was done where needed and functions were placed in the proper sections, e.g. \"Constructors\", \"Functions\", etc.\n\nA few function prototypes were found that not longer had an implementation. These were removed, but there may be more.\n\nThe coding document has been updated to reflect this policy, which is not new but has never been documented."
    },
    {
        "commit": "3fbde30c6fac4c752a3a1f47bbf309571b123b7a",
        "date": "2020-04-03 13:25:38 -0400",
        "subject": "Add/remove dependent backups during backup.info reconstruct.",
        "body": "Prior to performing a backup or expiring backups, the backup.info file is validated by reconstructing it from the backups in the repository. When a backup had already been removed from the repo, it was removed from the backup.info file but its dependents were not.\n\nNow, the dependent backups will also be removed from backup.info and only backups in the repo that have their full dependency chain will be added to backup.info if they are missing."
    },
    {
        "commit": "f3ae74b0d62a7b85e1452d46dd60aafbeb88226d",
        "date": "2020-04-03 08:38:28 -0400",
        "subject": "Remove storageRead() and storageWriteDriver().",
        "body": "These functions were only being used in the tests. This usage likely dates to before the include directive was available in define.yaml."
    },
    {
        "commit": "1214f1d70b5a34bd648892519777c6bd3b33619d",
        "date": "2020-04-03 08:18:07 -0400",
        "subject": "Update RHEL package location.",
        "body": "This changed upstream so update the file paths."
    },
    {
        "commit": "713211d89fd341e5b39b5273c4cb0cea495c245d",
        "date": "2020-04-02 17:25:49 -0400",
        "subject": "Clean up const usage in bufPtr() and bufRemainsPtr().",
        "body": "These functions accepted const Buffer objects and returned non-const pointers which is definitely not a good idea. Add bufPtrConst() to handle cases where only a const return value is needed and update call sites.\n\nUse UNCONSTIFY() in cases where library code out of our control requires a non-const pointer. This includes the already-documented exception in command/backup/pageChecksum and input buffers in the gzCompress and gzDecompress filters."
    },
    {
        "commit": "76b88a3cd58cb69ba8660247ed0959707c12401c",
        "date": "2020-04-02 16:58:38 -0400",
        "subject": "Add UNCONSTIFY() macro.",
        "body": "Allows casting const-ness away from an expression, but doesn't allow changing the type. Enforcement of the latter currently only works for gcc-like compilers.\n\nNote that it is not safe to cast const-ness away if the result will ever be modified (it would be undefined behavior). Doing so can cause compiler mis-optimizations or runtime crashes (by modifying read-only memory). It is only safe to use when the result will not be modified, but API design or language restrictions prevent you from declaring that (e.g. because a function returns both const and non-const variables).\n\nNote that this only works in function scope, not for global variables (it would be nice, but not trivial, to improve that).\n\nUNCONSTIFY() requires static assert which is a feature in its own right."
    },
    {
        "commit": "78beb16d6f30b2de561b391579c30b2811a94cd3",
        "date": "2020-04-01 19:33:11 -0400",
        "subject": "Remove unused getters in common/io/write module.",
        "body": "These were probably added for symmetry with IoRead but we would prefer to remove those getters.\n\nSo, just remove the equivalents in IoWrite."
    },
    {
        "commit": "f19c59ab38452bd4d247aa3a073c5c525b3b3cbe",
        "date": "2020-04-01 18:03:16 -0400",
        "subject": "Remove unused exports from pgBackRestBuild::Config::Data.",
        "body": "These were once used heavily in the Perl code but now only a few of them are used in the documentation.\n\nRemove the unused exports as there is generally no need create them for new commands/options."
    },
    {
        "commit": "3aedcd17760e677058e679ffaa7500ce57e42805",
        "date": "2020-04-01 17:20:47 -0400",
        "subject": "Enable FD_CLOEXEC.",
        "body": "PostgreSQL enables this option when available which seems like a good idea since we also do not share connections between processes.\n\nNote that as in PostgreSQL there is no way to disable this option."
    },
    {
        "commit": "967f2c0d7f56702059f433c248c1d2640dc26fde",
        "date": "2020-04-01 16:56:15 -0400",
        "subject": "Enable TCP_NODELAY.",
        "body": "PostgreSQL enables this option when available which seems like a good idea since we also buffer transmissions.\n\nNote that as in PostgreSQL there is no way to disable this option."
    },
    {
        "commit": "a1a0a23c6a086bb9f95ebdd280cca4c4f7ce683d",
        "date": "2020-04-01 16:51:29 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "789e364e6b35260a5805f1643761cd7f24b2bfdc",
        "date": "2020-04-01 15:44:51 -0400",
        "subject": "Rename tcp-keep-alive option to sck-keep-alive.",
        "body": "This is really a socket option so the new name is clearer.\n\nSince common/io/socket/tcp will contains a mix of options it makes sense to rename it to socket and cascade name changes as needed."
    },
    {
        "commit": "5c6fb88bef242c071fd02671798b296bd65fa47f",
        "date": "2020-03-31 18:13:11 -0400",
        "subject": "TCP keep-alive options are configurable.",
        "body": "Prior to 2.25 the individual TCP keep-alive options were not being configured due to a missing header. In 2.25 they were being configured incorrectly due to a disconnect between the timeout specified in ms and what was expected by the TCP options, i.e. seconds.\n\nInstead make the TCP keep-alive options directly configurable, with correct units and better testing. Keep-alive is enabled by default (though it can be defaulted to the system setting instead) and the rest of the options are not set by default. This is in line with what PostgreSQL does, though PostgreSQL does not allow keep-alive to be defaulted.\n\nAlso move configuration of TCP options before connect() as PostgreSQL does."
    },
    {
        "commit": "8989118cc656eeb3458404a4a9beff059c0c984c",
        "date": "2020-03-31 12:43:29 -0400",
        "subject": "Add SocketClient object.",
        "body": "This functionality was embedded into TlsClient but that was starting to get unwieldy.\n\nAdd SocketClient to contain all socket-related client functionality."
    },
    {
        "commit": "abb76398079fdfb7842bbd1f83fe46e33a5121b5",
        "date": "2020-03-31 11:10:26 -0400",
        "subject": "Add OBJECT_DEFINE_GET() macro to define object getters.",
        "body": "Simple object getters involve a lot of boilerplate code so create a macro to simplify implementing them."
    },
    {
        "commit": "da43db354343d629029fd78ceefecaa57bf58c73",
        "date": "2020-03-30 20:52:57 -0400",
        "subject": "Move common/object.h to common/type/object.h.",
        "body": "This header does not contain a type but is used to define types so this seems like a better location."
    },
    {
        "commit": "a29e25a845bed5d3b635766dd3ea7ca6a793ac47",
        "date": "2020-03-29 21:25:48 -0400",
        "subject": "Add storage filter performance test.",
        "body": "This test allows the important storage filters to be benchmarked by MiB/s."
    },
    {
        "commit": "1e0b0c9344c3cdb7e11ff67820a681bba1c1c05d",
        "date": "2020-03-29 09:17:39 -0400",
        "subject": "Remove Debian package patch now that it has been merged upstream."
    },
    {
        "commit": "bf7b989103d6804362b4fb0994b96f13f5cc0dd8",
        "date": "2020-03-28 18:25:51 -0400",
        "subject": "Add time since last test started to test output.",
        "body": "This makes it easier to see the timing of each step in the test."
    },
    {
        "commit": "7e519e72d516dc03f60c25252928a24de8cc6e58",
        "date": "2020-03-28 18:20:29 -0400",
        "subject": "Add TEST_TITLE_FMT() macro."
    },
    {
        "commit": "e1c72f6f97e9020874e1f31c97d1e1ff7269104d",
        "date": "2020-03-28 17:48:57 -0400",
        "subject": "Fix typos."
    },
    {
        "commit": "af734d69f4fc32502ae9b5baa7ba2ee244d0462c",
        "date": "2020-03-27 08:22:58 -0400",
        "subject": "Restore prefix/exec_prefix Makefile variables removed in 237a3da4."
    },
    {
        "commit": "4b1d995bbacac8baebd8a71045d87a2126ad851b",
        "date": "2020-03-26 22:20:09 -0400",
        "subject": "Update packages required for each CI job.",
        "body": "Documentation builds and tests have only a few packages in common so rearrange packages to save some time and clarify dependencies.\n\nRemove the libperl-dev package which became obsolete when the LibC module was removed in 79cfd3ae.\n\nAdd a few comments for good measure."
    },
    {
        "commit": "65285ff5b28f81a5e223337f93fe127d2eed2872",
        "date": "2020-03-26 22:00:40 -0400",
        "subject": "Rearrange Travis CI jobs based on current runtimes.",
        "body": "The runtimes of the tests have change with recent updates and it is generally best to order the slowest tests first."
    },
    {
        "commit": "0f742204e84c1a9529085fcfad61318e1c1a1842",
        "date": "2020-03-26 21:39:40 -0400",
        "subject": "Add comments to make the purpose of each CI job clearer."
    },
    {
        "commit": "09d26d54ceb42a1f14de4ed59541f602b7c99ee6",
        "date": "2020-03-26 21:16:21 -0400",
        "subject": "Updates for key changes in travis.yaml.",
        "body": "The format has evolved over time and the old keys were showing warnings during builds."
    },
    {
        "commit": "3d255dce3c83fe0de49ab5a5ff3d71151e0761b3",
        "date": "2020-03-26 21:05:36 -0400",
        "subject": "Add performance/storage test.",
        "body": "The primary purpose of this test (currently) is to measure the performance of storageRemoteInfoList(), which is critical for building a manifest when the PostgreSQL host is remote.\n\nThe starting baseline of 1 million files is perhaps a bit aggressive but it seems very likely to blow up if there are performance regressions."
    },
    {
        "commit": "b64755d6352c9e3e4ac2508b47e2a223f755afe5",
        "date": "2020-03-26 20:52:05 -0400",
        "subject": "Increase baseline of the performance/type test.",
        "body": "Recent performance improvements allow increasing the baseline of this test.\n\nIn general it is best if the baseline is large enough to cause the test to blow up if there are performance regressions."
    },
    {
        "commit": "50cf7370ee171053225a5d4511fd186da2c4c61e",
        "date": "2020-03-26 20:36:09 -0400",
        "subject": "Add --no-performance to test.pl to suppress performance tests.",
        "body": "Performance tests do not need to be run on all platforms. Using vm=none to run performance tests seems best ... for performance."
    },
    {
        "commit": "24e03e1320fcc19059599c136de293183cb77f43",
        "date": "2020-03-26 20:25:42 -0400",
        "subject": "Remove RHEL package patch now that it has been merged upstream."
    },
    {
        "commit": "fa8642237146bc1b79fd57271219e0e9aa07882e",
        "date": "2020-03-26 17:20:58 -0400",
        "subject": "Begin v2.26 development."
    },
    {
        "commit": "fd3dca036b1436564dec17b7c23b62b9d9fa1051",
        "date": "2020-03-26 17:14:53 -0400",
        "subject": "v2.25: LZ4 Compression Support"
    },
    {
        "commit": "8af0462c5d749ca798bc524e7a05d0e24f4ed0c7",
        "date": "2020-03-26 15:30:59 -0400",
        "subject": "Fix race condition in real/all integration tests.",
        "body": "If the tests are running quickly then the time target might end up the same as the end time of the prior full backup. That means restore auto-select will not pick it as a candidate and restore the last backup instead causing the restore compare to fail.\n\nSo, sleep one second."
    },
    {
        "commit": "86f71349efdc5970b9985c0155a65c2e3b193a04",
        "date": "2020-03-26 14:05:40 -0400",
        "subject": "Improve and centralize backup dependency calculation.",
        "body": "Add functions to select a current backup by label and to retrieve a backup dependency list for any given backup.\n\nUpdate the expire code to utilize the new functions and to expire backup sets from newest dependency to oldest."
    },
    {
        "commit": "048a36ea390334ddc019e958242c4d4ca0f9096f",
        "date": "2020-03-26 13:04:59 -0400",
        "subject": "Order commands alphabetically in definition of set option."
    },
    {
        "commit": "2c2bc8a32ba6e91e2a0241cc2d93d9809ab6c068",
        "date": "2020-03-26 12:16:22 -0400",
        "subject": "Debug and optimize flag cleanup for unit tests.",
        "body": "Decisions about when to optimize or enable debug code were spread out in too many places making it hard to keep them consistent.\n\nCentralize the logic as much as possible to make it easier to maintain."
    },
    {
        "commit": "e63fdfbfd24bb1893ed5c0abb9aed72d2a230d56",
        "date": "2020-03-26 11:16:35 -0400",
        "subject": "Debug and optimize flag cleanup for unit tests.",
        "body": "Decisions about when to optimize or enable debug code were spread out in too many places making it hard to keep them consistent.\n\nCentralize the logic as much as possible to make it easier to maintain."
    },
    {
        "commit": "d242114dc0feec9e87932e810ec3c1027752949b",
        "date": "2020-03-25 19:00:09 -0400",
        "subject": "Rough script to add tables to the user guide for performance tests.",
        "body": "This really needs to be worked on but for now at least preserve to code to be improved later."
    },
    {
        "commit": "10b4b9af8712c558ad1d3d1674dd494716fa1cb9",
        "date": "2020-03-25 18:52:20 -0400",
        "subject": "Improve performance of jsonToStrInternal() and jsonFromStrInternal().",
        "body": "Most strings do not contain escape/d characters, so optimize the path where the string contains few or no escape/d characters.\n\nThis means far fewer calls to strCatChr() in favor of strCatZN(), which is much more efficient."
    },
    {
        "commit": "88d7ee621547b28113af9c00712267642729b7ec",
        "date": "2020-03-25 18:37:35 -0400",
        "subject": "Add srtCatZN().",
        "body": "Append N characters from a zero-terminated string.\n\nNote that the string does not actually need to be zero-terminated as long as N is <= the end of the string being concatenated."
    },
    {
        "commit": "b10270eee87ebaa1c595d0ba486a61fefabd8d6d",
        "date": "2020-03-25 16:03:33 -0400",
        "subject": "Use conditional in strPtr() to encourage inlining.",
        "body": "This construct is logically equivalent but it seems to make the compiler more likely to inline the function, probably because the compiled code is slightly smaller."
    },
    {
        "commit": "eb7f7dd5caf9f48368b6c24b401f9094ad85a95e",
        "date": "2020-03-25 15:47:03 -0400",
        "subject": "Fix backup-prior for diff backups in mock/expire integration test.",
        "body": "In the ExpireEnvTest.pm backupCreate() function, backup-prior was incorrectly set for diff backups to the previous backup regardless of what backup type the previous backup was. This did not cause any issues in the Mock Expire tests before because it was not being checked. However, in order to reduce churn in the expect logs for a new feature where the backup-prior is utilized, this is being fixed so that the full backup is always used as backup-prior."
    },
    {
        "commit": "4c31a922a3b258b075c095b92d637eb2d367d7f2",
        "date": "2020-03-25 12:17:20 -0400",
        "subject": "Remove backup after timeline switch from user guide.",
        "body": "It is no longer necessary (since 2.07, 34c63276) to do a backup manually after a timeline switch."
    },
    {
        "commit": "480a11066db83ecb57d2ca3f23924a93d8590b5e",
        "date": "2020-03-25 12:04:23 -0400",
        "subject": "More refactoring of command/expire unit test module.",
        "body": "Buffer cleanup following on from e170c53e."
    },
    {
        "commit": "d20115d29e0b33062fce5dfc8285c0f884ef4246",
        "date": "2020-03-25 09:12:51 -0400",
        "subject": "Allocate a minimum amount of space when a string is likely to grow.",
        "body": "This helps prevent excessive memory reallocation."
    },
    {
        "commit": "ad4187eb9f5ff3cfca20537dd6d998d1afa4a96b",
        "date": "2020-03-24 19:08:00 -0400",
        "subject": "Improve performance of memResize().",
        "body": "The major bottleneck was finding the memory allocation to be resized since it required a sequential search through a list.\n\nInstead, put the allocation header at the beginning of the allocation and return an offset to the user for their buffer. This allows us to use pointer arithmetic to get back to the allocation header quickly when resizing. A side effect is to make memFree() faster as well. The downside is we won't detect garbage pointers passed to memResize()/memFree(), which is also true for MemContext pointers.\n\nThe performance benefits can be pretty large in certain cases, in particular when loading and saving manifests. The following are the before and after performance tests on a 900K file manifest.\n\nBefore:\n\nrun 003 - manifestNewLoad()/manifestSave()\n    000.000s l0125 - generate manifest\n    183.411s l0236 -     101.2MB manifest generated with 900000 files\n    183.411s l0239 - load manifest\n    403.816s l0243 -     completed in 220405ms\n    403.816s l0245 -        check file total\n    403.816s l0248 - save manifest\n    670.217s l0253 -     completed in 266401ms\n    670.217s l0256 - find all files\n    671.263s l0266 -     completed in 1046ms\n\nAfter:\n\nrun 003 - manifestNewLoad()/manifestSave()\n    000.000s l0125 - generate manifest\n    007.730s l0236 -     101.2MB manifest generated with 900000 files\n    007.730s l0239 - load manifest\n    033.431s l0243 -     completed in 25701ms\n    033.431s l0245 -        check file total\n    033.431s l0248 - save manifest\n    057.755s l0253 -     completed in 24324ms\n    057.755s l0256 - find all files\n    058.689s l0266 -     completed in 934ms"
    },
    {
        "commit": "98e5affa8aa1b1f7076e2d389d3afdf71dd80644",
        "date": "2020-03-24 18:44:13 -0400",
        "subject": "Free temp mem context periodically in storageRemoteInfoList().",
        "body": "Other storage*InfoList() functions do this but it was missed here.\n\nmemResize()/memFree() operations become more expensive as the mem context grows larger so freeing it periodically saves processing time."
    },
    {
        "commit": "e170c53e7efb84dc65e3a0c0b8e4ed3c060030d8",
        "date": "2020-03-23 14:31:04 -0400",
        "subject": "Refactor command/expire unit test module.",
        "body": "Add titles and use a Buffer to store backup.info instead of a String."
    },
    {
        "commit": "f9c86b11a54e5c37ad98afd5a2de76cd96ae1061",
        "date": "2020-03-23 12:17:34 -0400",
        "subject": "More improvements to custom coverage report.",
        "body": "* Fix a few issues with file names being truncated introduced in 787d3fd6.\n\n* Use function line info from the lcov file to calculate which lines to show for uncovered functions.  This is more accurate than what we were doing before and function comment headers are now excluded which reduces clutter in the report."
    },
    {
        "commit": "dbb1248bfbb1d469bae030084e6672772702f89d",
        "date": "2020-03-22 20:44:51 -0400",
        "subject": "Implement TEST_RESULT_*() macros with functions, mostly.",
        "body": "The prior macros had grown over time to be pretty significant pieces of code that required a lot of compile time, though runtime was efficient.\n\nMove most of the macro code into functions to reduce compile time, perhaps at a slight expense to runtime.  The overall performance benefit is 10-15% so this seems like a good tradeoff.\n\nAdd TEST_RESULT_UINT_INT() to safely compare uint to int with range checking."
    },
    {
        "commit": "d6ffa9ea6d45fcae46abd79a5f6d6123e79c9168",
        "date": "2020-03-22 20:25:31 -0400",
        "subject": "Fix incorrect result types in unit tests.",
        "body": "Upcoming changes to the TEST_RESULT_* macros are more type safe and identified that the wrong macros were being used to test results in many cases.\n\nCommit these changes separately to verify that they work with the current macro versions.\n\nNote that no core bugs were exposed by these changes."
    },
    {
        "commit": "e1da6a45e0e7f5223ac5210b2485f7946421a723",
        "date": "2020-03-22 16:14:33 -0400",
        "subject": "Remove TRY...CATCH blocks from TEST_RESULT*() macros.",
        "body": "TRY...CATCH blocks are fairly expensive and when all the TEST_RESULT*() macros succeed they are not needed.\n\nInstead just record info at the start of the result test so a detailed exception can be thrown in test.c in the rare case where an exception occurs."
    },
    {
        "commit": "5a8758cc8a49b88f731bb33d81579115cb1ea3c3",
        "date": "2020-03-22 16:04:24 -0400",
        "subject": "Add test function to set stack trace function line number.",
        "body": "This is helpful for test macros that know the line number.\n\nThe line number can now be non-zero below the top of the stack without WITH_BACKTRACE so instead ignore the line number for output when it is zero."
    },
    {
        "commit": "bd461a18997dd38443004eb962e37d348bcef03a",
        "date": "2020-03-22 14:40:36 -0400",
        "subject": "Add TestError for testing.",
        "body": "This error type distinguishes test errors with detailed debug info from normal errors which may need, for example, a stack trace to be added for context."
    },
    {
        "commit": "c2df383aec3960fcc8046f93089114de8043cb14",
        "date": "2020-03-22 14:24:28 -0400",
        "subject": "Fix missing parameter in common/stack-trace test module.",
        "body": "This was passing since we don't test WITH_BACKTRACE in CI because it is used only for test builds.\n\nIdeally we would test this but it doesn't seem worth the trouble at the moment."
    },
    {
        "commit": "8c76ea2d93926cb3c714490884fb42966a859cf2",
        "date": "2020-03-22 14:18:16 -0400",
        "subject": "Fix space lost in d70ca259."
    },
    {
        "commit": "4c831d8e83f4ffda02023351c17cb3072b5b6e10",
        "date": "2020-03-22 13:50:31 -0400",
        "subject": "Use --clean-only for reproducible builds in contributing documentation.",
        "body": "If the work or result directories already contain data then the docs might be generated slightly differently.  Doing a clean ensures they will always produce the same output (provided the code does not change)."
    },
    {
        "commit": "06a3f82e912b549add76b65f51075bc389f4e29c",
        "date": "2020-03-22 13:46:30 -0400",
        "subject": "Add --clean and --clean-only options to test.pl."
    },
    {
        "commit": "d70ca2592f7df7d9a0adc2b91fd03c8cafc757b0",
        "date": "2020-03-22 10:17:03 -0400",
        "subject": "Suppress timestamps in contributing documentation.",
        "body": "Timestamps cause a lot of churn and make it hard to tell if important changes are working."
    },
    {
        "commit": "3ec630f5b2008af92d1baab36afda4d20b8329a8",
        "date": "2020-03-22 10:12:29 -0400",
        "subject": "Allow suppression of times in testing for reproducibility.",
        "body": "Timestamps, timings, etc. cause a lot of log churn when included in documentation."
    },
    {
        "commit": "a1802510111297b479c6150631df92bc6b065613",
        "date": "2020-03-22 09:59:38 -0400",
        "subject": "Do variable replacements for cmd-extra in documentation."
    },
    {
        "commit": "6a9fbccf7603bc1ae9626ff387013933271a1c05",
        "date": "2020-03-21 19:08:27 -0400",
        "subject": "Remove custom lcov build from contributing documentation.",
        "body": "Using the stock lcov no longer seems to be a problem, probably due to a better implementation in CoverageTest.pm."
    },
    {
        "commit": "56fb39937368463474c96307454051a66c1742c4",
        "date": "2020-03-21 18:45:58 -0400",
        "subject": "Build contributing documentation on Travis CI.",
        "body": "Building the contributing document has some special requirements because it runs Docker in Docker so the repo path must align on the host and all Docker containers.  Run `pgbackrest/doc/doc.pl` from within the home directory of the user that will do the doc build, e.g. `home/vagrant`.  If the repo is not located directly in the home directory, e.g. `/home/vagrant/pgbackrest`, then a symlink may be used, e.g. `ln -s /path/to/repo /home/vagrant/pgbackrest`.\n\nMount the repo in the Vagrantfile at /home/vagrant/pgbackrest but provide a link from the old location at /backrest to make the transition less painful."
    },
    {
        "commit": "ee2e15bf5524cf8bac3454d409dee250792411d9",
        "date": "2020-03-21 09:51:12 -0400",
        "subject": "Add missing package to contributing documentation."
    },
    {
        "commit": "f405c82dcc99da8e8da2fc19b8e13f2dd9b542d2",
        "date": "2020-03-20 15:00:20 -0400",
        "subject": "Don't list directories as changed from the last run.",
        "body": "It's not very useful information and just clutters the list."
    },
    {
        "commit": "cfab67a775e0e1eb80e15df2fb5b1acc4d911432",
        "date": "2020-03-20 13:49:23 -0400",
        "subject": "Enable coverage testing on Fedora 30.",
        "body": "Now that coverage testing works reliably with gcc9 it makes sense to enable it for CI."
    },
    {
        "commit": "782c9f89f47fcb8bac75b21c241c1f34d744c13c",
        "date": "2020-03-20 13:43:08 -0400",
        "subject": "Remove old coverage data before starting new test.",
        "body": "The old coverage data has been recorded so it is no longer needed. In newer versions of gcc leaving this file around can lead to an error when writing profile data after forking off to a non-pgbackrest binary (which we do in some unit tests)."
    },
    {
        "commit": "787d3fd67b3549b9b04a8053e751cda9494d8df5",
        "date": "2020-03-20 12:54:29 -0400",
        "subject": "Improve custom coverage report.",
        "body": "* Show all uncovered branch parts even when there are more than two parts per branch. This is the way gcc9 reports coverage so it needs to work even if it doesn't make as much sense as the old way.\n\n* Show covered branches in functions where coverage is missing.  Showing just the uncovered branches can be confusing because it's not always clear how the coverage relates to the code.  By showing all branch coverage (+ or -) this correspondence is made easier."
    },
    {
        "commit": "8af802900657174e1b24a1bdf9992c9fa78909d9",
        "date": "2020-03-20 09:16:38 -0400",
        "subject": "Fix lcov report when test module missing coverage.",
        "body": "We don't report branch coverage on test modules (e.g. test/src/module/common/errorTest.c) but the code that excluded branch coverage from the test module would also exclude it from all core modules if the test module was included in the lcov report due to lack of function/line coverage.\n\nAdjust the coverage code to only exclude branches during the extraction of test module coverage."
    },
    {
        "commit": "f6e9bb081963932b4a35e6fd6c01ac2a523195f1",
        "date": "2020-03-19 19:30:09 -0400",
        "subject": "Remove obsolete -O2 option for Fedora 30 unit test builds.",
        "body": "For some reason gcc9 would not do -O0 builds in combination with one of the options that libperl required.  Now that libperl is gone this exception is no longer required."
    },
    {
        "commit": "2241524c0bdc92e1a04ac18e91a188a2bc1bcbdf",
        "date": "2020-03-19 18:34:10 -0400",
        "subject": "Remove obsolete deletes from Vagrantfile.",
        "body": "pgBackRest no longer writes files into the .vagrant path so there's no longer anything to delete."
    },
    {
        "commit": "dcddf3a58bc6c4a8fbc9ac2c000cd5ff7b669cb5",
        "date": "2020-03-19 13:16:05 -0400",
        "subject": "Limit backup file copy size to size reported at backup start.",
        "body": "If a file grows during the backup it will be reconstructed by WAL replay during recovery so there is no need to copy the additional data.\n\nThis also reduces the likelihood of seeing torn pages during the copy. Torn pages can still occur in the middle of the file, though, so they must be handled."
    },
    {
        "commit": "e5bcc0c47e9db98ff99366a1e5806c1dcd6ebadd",
        "date": "2020-03-19 12:34:27 -0400",
        "subject": "Clarifications of what limit == NULL or UINT64_MAX means."
    },
    {
        "commit": "73315268fd9d405eee7da019014e8117c6a20693",
        "date": "2020-03-19 12:11:20 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "d677b0708126302e3b01e24664866b29913b1c1d",
        "date": "2020-03-19 12:07:51 -0400",
        "subject": "Move coverage code to CoverageTest module.",
        "body": "This code needs some work, which will be easier if it is all in one place."
    },
    {
        "commit": "f538da0571e9e6b224b208fa5f2b3bc3025f5f02",
        "date": "2020-03-18 17:30:36 -0400",
        "subject": "Updates to contributing documentation."
    },
    {
        "commit": "26c89b2c8c9ea362b9bd075cc4d541dc515af28b",
        "date": "2020-03-18 13:40:16 -0400",
        "subject": "Improve testing of files that change size during the backup.",
        "body": "Files can change size during a backup so update and add tests to cover the various scenarios more thoroughly."
    },
    {
        "commit": "4ec04e5163a361f88e3f2e09bdc22465a0868982",
        "date": "2020-03-18 10:10:10 -0400",
        "subject": "Added redacted manifest to testBackupValidate().",
        "body": "The manifest is excellent for validation but including the entire manifest is too noisy and some values are architecture/algorithm dependent.\n\nOutput a redacted version that contains the most important information which can be improved on over time."
    },
    {
        "commit": "b8cd1b6790b85f3ac36ae3fcb024be3997ac6ad1",
        "date": "2020-03-18 10:05:08 -0400",
        "subject": "Add TEST_RESULT_STR_Z_KEYRPL() test macro.",
        "body": "This macro will automatically do key replacement before the comparison. This saves the indentation required for an embedded function call.\n\nPossibly TEST_RESULT_Z_KEYRPL() would also be useful but it will be added when needed."
    },
    {
        "commit": "f2548f45ce4c1e444e9d3175b2349e0a97b2783a",
        "date": "2020-03-17 18:16:17 -0400",
        "subject": "Allow storage reads to be limited by bytes.",
        "body": "The current use case is reading files from the PostgreSQL cluster during backup.\n\nA file may grow during backup but we only need to copy the number of bytes that were reported during the manifest build.  The rest will be rebuilt from the WAL during recovery so copying more is just a waste of space.\n\nLimiting the copy sizes in backup will be part of a future commit."
    },
    {
        "commit": "307e741298cd068e68bcbe8994c871a989bdff01",
        "date": "2020-03-17 16:01:17 -0400",
        "subject": "Test that shrunk file is backed up correctly.",
        "body": "It's possible, though rare, for a file to shrink during a backup.\n\nThere was no issue with the code but having a test is always a good idea."
    },
    {
        "commit": "7f1817c8adea02e58af3ae82044e8e91e6f2c4f4",
        "date": "2020-03-17 11:43:38 -0400",
        "subject": "Fix typos."
    },
    {
        "commit": "9a47b88da3effe24b835908c12ce5dd5abf2304d",
        "date": "2020-03-16 20:02:36 -0400",
        "subject": "Add links to custom coverage report.",
        "body": "When multiple files were missing coverage it could be hard to locate the coverage report for a specific file.\n\nAdd links for uncovered files to make this easier.\n\nAlso move table titles out of the table so they are valid html."
    },
    {
        "commit": "d6cea422a01b6645d78aebe0e547d4fd1688001b",
        "date": "2020-03-16 18:18:30 -0400",
        "subject": "Make cfgLoadLogSetting() static.",
        "body": "This function was once required by the test harness."
    },
    {
        "commit": "f7dac144a6393736e16f44d4103ec4d4ff6133dc",
        "date": "2020-03-16 18:16:27 -0400",
        "subject": "Reduce variables extern'd by the common/log module in debug builds.",
        "body": "These days it is better to include the module in define.yaml when we need to poke at the internal implementation.\n\nThis doesn't quite work for the log test harness, so for now some variables will need to remain extern'd in debug builds."
    },
    {
        "commit": "3fbfcba811499a59b943dd893eef9ff52090f7b6",
        "date": "2020-03-16 17:27:01 -0400",
        "subject": "Forbid access to /tmp/pgbackrest in the Vagrantfile.",
        "body": "This matches the error that will be thrown in the vm=none test on Travis CI if a unit test writes to /tmp/pgbackrest."
    },
    {
        "commit": "46911c64c19dc8ff76d2a6ff4548fc01647043e0",
        "date": "2020-03-16 17:24:21 -0400",
        "subject": "Make storage and logging dry-run aware.",
        "body": "Enhance dry-run support added in 2fa69af8 by forbidding writes in the storage layer and adding prefixes to log messages.\n\nThe former will protect against mistakes in dry-run implementations and the latter will make it clear when a command was executed in dry-run mode.\n\nUpdate expire unit tests with the new log prefix."
    },
    {
        "commit": "2fa69af8da4075e82359a8585ecde2f2030db546",
        "date": "2020-03-16 13:56:52 -0400",
        "subject": "Add --dry-run option to the expire command.",
        "body": "Use dry-run to see which backups/archive would be removed by the expire command without actually removing anything."
    },
    {
        "commit": "4608ca473e6d8c92762eee08169b50072bec0821",
        "date": "2020-03-16 12:50:37 -0400",
        "subject": "Fix indentation."
    },
    {
        "commit": "4328bc1ac64726e810dfa76d0d1149ded6c93770",
        "date": "2020-03-16 08:41:32 -0400",
        "subject": "Move raw coverage results to test/result/raw path.",
        "body": "These results were stored in the vagrant path along with a full copy of src.\n\nInstead store the raw coverage data in test/result/raw and change source references to the files that already exist in [test-path]/repo."
    },
    {
        "commit": "d7022495075682b35441a31e22606bdcffdb9b86",
        "date": "2020-03-15 10:09:27 -0400",
        "subject": "Build binaries in the test path rather than the vagrant path.",
        "body": "It makes more sense to build in the test path since many developers won't have a vagrant path. Anyway, it's better not to modify the vagrant path since it belongs to vagrant.\n\nInstead of installing the binary just mount it into the container from where it was built. This saves a bit of time and space."
    },
    {
        "commit": "19d975346b2688aa1a7b9e2dc68baecb9f6e7af2",
        "date": "2020-03-15 09:59:22 -0400",
        "subject": "Improve stability of command/check test module.",
        "body": "When pgbackrest was present this test behaved unexpectedly.\n\nWhile the binary is not currently required for this test is might be in the future so fix the test to prevent a regression."
    },
    {
        "commit": "da89d0ad6157487f820632cbc7109c8a91f56cc9",
        "date": "2020-03-15 09:53:42 -0400",
        "subject": "Add VPATH to Makefile.",
        "body": "This allows builds in a separate directory without copying the source."
    },
    {
        "commit": "959dce569b150cf221f2f38a3c4f438964ca324e",
        "date": "2020-03-14 18:30:24 -0400",
        "subject": "Update code classification and remove XS definition."
    },
    {
        "commit": "213cc6e8becd9974351cb28d08bef01184bf6ad3",
        "date": "2020-03-14 15:40:37 -0400",
        "subject": "Move docker files to test/result."
    },
    {
        "commit": "6827e248cd3ce9b92ef4bbddb79dfe0b32c1a6ef",
        "date": "2020-03-14 15:29:42 -0400",
        "subject": "Move coverage results to test/result."
    },
    {
        "commit": "75ff25f17fda6e3198aa8e227bc535dc5d8fb969",
        "date": "2020-03-14 14:50:36 -0400",
        "subject": "Move profile results to test/result."
    },
    {
        "commit": "0f7fe55f728345426da2514e2c866678921114a6",
        "date": "2020-03-14 14:35:09 -0400",
        "subject": "Build packages on demand only and change build path.",
        "body": "Building packages is not a normal part of development so don't build packages by default. Instead build them in CI as needed.\n\nDo the builds in test/result instead of .vagrant to be friendlier with hosts that are not running vagrant. Anyway, it's probably not a good idea to be creating files in the .vagrant path."
    },
    {
        "commit": "5645c91ed5cb48f0dbcb92439405dcefe7d1156a",
        "date": "2020-03-14 14:18:22 -0400",
        "subject": "Add comments to test/.gitignore."
    },
    {
        "commit": "b4c94e42b903059c044128710ef9e61ff5f1aa67",
        "date": "2020-03-14 13:06:21 -0400",
        "subject": "Auto-detect presence of clobbered warning.",
        "body": "Not all compilers (e.g. clang) support this warning so only disable it (i.e. -Wno-clobbered) when supported."
    },
    {
        "commit": "4cd060b7fe6e2f9cc7ca8f8c128d1b5c1de9c137",
        "date": "2020-03-14 12:48:08 -0400",
        "subject": "Generate src/build/aclocal.m4 automatically.",
        "body": "This file is required when macros from the autoconf archive are used in configure.ac"
    },
    {
        "commit": "9e80c5710e8e8005dee553b4583dc062dfc3ca62",
        "date": "2020-03-14 12:39:29 -0400",
        "subject": "Use a checksum to build configure.ac more efficiently.",
        "body": "Building the configure.ac script can take multiple seconds depending on the state of the autoconf cache. Use a checksum to only rebuild when configure.ac has changed no matter how the timestamps have changed."
    },
    {
        "commit": "748f9502eb06b1315551b5967eb5c6255fe9e072",
        "date": "2020-03-14 10:04:49 -0400",
        "subject": "Remove obsolete ignore."
    },
    {
        "commit": "237a3da4d69bf068652c6f5cc805c313f725b129",
        "date": "2020-03-13 09:07:57 -0400",
        "subject": "Configure and make improvements.",
        "body": "Configure:\n\n* Use standard make variables, e.g. CFLAGS, rather than our own, e.g. CINCLUDE\n* Add PG_CONFIG var for configuring custom pg_config location\n* Don't error if xml_config or pg_config is missing (but error if libs/headers not found)\n* Check for zlib.h header\n* Check for lz4frame.h header when liblz4 is present\n\nMake:\n\n* Use gcc-style auto dependencies\n* Put src list at the top since it is most frequently modified\n* Add clean-all target to also remove auto-generated config files"
    },
    {
        "commit": "810b2a5265888a7ba46c85cee52ca7b7b269608d",
        "date": "2020-03-12 13:18:08 -0400",
        "subject": "Remove obsolete ignore."
    },
    {
        "commit": "4b24a74afb5c3ed1f176287070a3b1f58fa4b479",
        "date": "2020-03-12 11:38:50 -0400",
        "subject": "Fix detection of keepalive options on Linux.",
        "body": "This code stanza was not being included on Linux platforms because of a missing header file.\n\nAlso update the order of operations and make the timeout calculations more sensible."
    },
    {
        "commit": "e9c1569d8e2b55762784b8c74c1092b4ad3cadf9",
        "date": "2020-03-12 10:48:40 -0400",
        "subject": "Fix missing cast.",
        "body": "This was a problem in testing when -Wconversion was enabled and TCP_KEEPIDLE was defined."
    },
    {
        "commit": "d6ef6c57c336d56561ce84e63a75880e293e0b8f",
        "date": "2020-03-12 10:37:19 -0400",
        "subject": "Add configure host detection to set standards flags correctly.",
        "body": "Linux and MacOS were tolerant of having all standards flags set but BSD was not.\n\nInstead detect the host type and set standards flags as appropriate."
    },
    {
        "commit": "fa1f63198d7af2ae7c3a7d26af972f81de15d215",
        "date": "2020-03-12 10:03:57 -0400",
        "subject": "Add scripts required for host detection by src/configure.",
        "body": "Add to the src/build directory so they will be out of the way.\n\nAlso add instructions for updating the scripts to RELEASE.md."
    },
    {
        "commit": "c3b6bd2e831c4f29fdfb69d36fe6d21da1a322be",
        "date": "2020-03-12 09:50:10 -0400",
        "subject": "Add separators to make configure.ac easier to read."
    },
    {
        "commit": "ccdf4bf3ccb091a1371646f65583a77105c43e0d",
        "date": "2020-03-12 09:43:29 -0400",
        "subject": "Add repo path env var to make release commands easier to run."
    },
    {
        "commit": "838ef4eca1a1fa2c791fa4913a3cae803eb4c8a8",
        "date": "2020-03-12 09:34:52 -0400",
        "subject": "Move configure.ac to src/build.",
        "body": "This file is used to generate src/configure and is not required to make pgbackrest since src/configure is updated before distribution.\n\nMove to src/build so it is out of the way."
    },
    {
        "commit": "79a6798f39124db044f0af5091027ecb255ba033",
        "date": "2020-03-12 09:28:59 -0400",
        "subject": "Remove extra spaces."
    },
    {
        "commit": "2ac9c19d4a2a3e75373b97ab2360f11469998448",
        "date": "2020-03-12 09:28:16 -0400",
        "subject": "Fix misleading comment."
    },
    {
        "commit": "181fa1fc8bbc4af06e1ff491b165b3b0e78cdfd6",
        "date": "2020-03-12 09:27:44 -0400",
        "subject": "Detect changes in reference.xml for code auto-generation.",
        "body": "Changes to reference.xml can affect the command-line documentation built into the binary so changes must trigger an auto-generated code build during smart builds."
    },
    {
        "commit": "0ba8062f5f04e22edb5700be3d8eb26255ea68d4",
        "date": "2020-03-12 08:48:45 -0400",
        "subject": "Get package source files dynamically during package build.",
        "body": "The prior method was to build a special container to hold these files which meant they would get stale on development systems.  On CI the container was always rebuilt so failures would be seen there even when dev seemed to be working.\n\nInstead get the package source when the package is built to ensure it is as up-to-date as possible.\n\nThis change was prompted by failures on the Ubuntu 12.04 container while getting the package source, probably due to an ancient version of git.  Package builds are no longer supported on that platform with the addition of lz4 compression so it didn't seem worth fixing."
    },
    {
        "commit": "4a5bd002c0071960b537e6d1dc35efe626146956",
        "date": "2020-03-10 17:57:02 -0400",
        "subject": "Move pgBackRest::Version module to pgBackRestDoc::ProjectInfo.",
        "body": "The primary source for project info is now src/version.h.\n\nThe pgBackRestDoc::ProjectInfo module loads the project info from src/version.h at runtime so there is no need to update it."
    },
    {
        "commit": "731b862e6faf266c7ddbbd01a85496147d8bf7a6",
        "date": "2020-03-10 15:41:56 -0400",
        "subject": "Rename BackRestDoc Perl module to pgBackRestDoc.",
        "body": "This is consistent with the way BackRest and BackRest test were renamed way back in 18fd2523.\n\nMore modules will be moving to pgBackRestDoc soon so renaming now reduces churn later."
    },
    {
        "commit": "36d4ab9bff668efcbbbf3393d80bd53f0be09a67",
        "date": "2020-03-10 15:12:44 -0400",
        "subject": "Move Perl modules out of lib directory.",
        "body": "This directory was once the home of the production Perl code but since f0ef73db this is no longer true.\n\nMove the modules to test in most cases, except where the module is expected to be useful for the doc engine beyond the expected lifetime of the Perl test code (about a year if all goes well).\n\nThe exception is pgBackRest::Version which requires more work to migrate since it is used to track pgBackRest versions."
    },
    {
        "commit": "c279a00279e3c5b956f6dc4496454a9c4ccaa487",
        "date": "2020-03-10 14:45:27 -0400",
        "subject": "Add lz4 compression support.",
        "body": "LZ4 compresses data faster than gzip but at a lower ratio.  This can be a good tradeoff in certain scenarios.\n\nNote that setting compress-type=lz4 will make new backups and archive incompatible (unrestorable) with prior versions of pgBackRest."
    },
    {
        "commit": "cc9d7315dbb4e66cd281dc2156faf529e566ddbc",
        "date": "2020-03-10 14:05:00 -0400",
        "subject": "Rename flush->flushing to be consistent with usage in other modules."
    },
    {
        "commit": "79cfd3aebf4848c325d6eb98f5fe88f7f03805b0",
        "date": "2020-03-09 17:41:59 -0400",
        "subject": "Remove LibC.",
        "body": "This was the interface between Perl and C introduced in 36a5349b but since f0ef73db has only been used by the Perl integration tests.  This is expensive code to maintain just for testing.\n\nThe main dependency was the interface to storage, no matter where it was located, e.g. S3.  Replace this with the new-introduced repo commands (d3c83453) that allow access to repo storage via the command line.\n\nThe other dependency was on various cfgOption* functions and CFGOPT_ constants that were convenient but not necessary.  Replace these with hard-coded strings in most places and create new constants for commonly used values.\n\nRemove all auto-generated Perl code.  This means that the error list will no longer be maintained automatically so copy used errors to Common::Exception.pm.  This file will need to be maintained manually going forward but there is not likely to be much churn as the Perl integration tests are being retired.\n\nUpdate test.pl and related code to remove LibC builds.\n\nDing, dong, LibC is dead."
    },
    {
        "commit": "d3c83453deffa6435ec5c4a932ad62a3d4d2cd95",
        "date": "2020-03-09 17:15:03 -0400",
        "subject": "Add repo-create, repo-get, repo-put, and repo-rm commands.",
        "body": "These commands are generally useful but more importantly they allow removing LibC by providing the Perl integration tests an alternate way to work with repository storage.\n\nAll the commands are currently internal only and should not be used on production repositories."
    },
    {
        "commit": "948835fb84010f515ec90395bd0c009e9884ad82",
        "date": "2020-03-09 16:54:07 -0400",
        "subject": "Update repo-ls command to work better with files.",
        "body": "If the command was passed a file it would return no results since it was originally intended to list files when passed a path.\n\nHowever, as a general purpose command working directly with files makes sense."
    },
    {
        "commit": "5e1291a29f65d0430966756c4031f6cc307ca208",
        "date": "2020-03-09 16:41:04 -0400",
        "subject": "Rename ls command to repo-ls.",
        "body": "This command only makes sense for the repository storage since other storage (e.g. pg and spool) must be located on a local Posix filesystem and can be listed using standard unix commands.  Since the repo storage can be located lots of places having a common way to list it makes sense.\n\nPrefix with repo- to make the scope of this command clear.\n\nUpdate documentation to reflect this change."
    },
    {
        "commit": "f581edfa509c0879164597eba5ecf9dc287ca08d",
        "date": "2020-03-09 13:36:46 -0400",
        "subject": "Remove valgrind suppressions made obsolete by f0ef73db."
    },
    {
        "commit": "3c4f91b31929c56f43ebb8f9bd48f39295dae917",
        "date": "2020-03-09 13:35:26 -0400",
        "subject": "Remove Perl unit tests made obsolete in 434cd832.",
        "body": "These were replaced by C unit tests but not all the unit test setup code was removed in the Perl module."
    },
    {
        "commit": "e93f1dd898ea76e4068d3723f36282bf715cd9d8",
        "date": "2020-03-06 15:33:57 -0500",
        "subject": "Fix incorrect parameter in logging function."
    },
    {
        "commit": "54bc3b454a18677610d54e37813c51ad36b6c7d8",
        "date": "2020-03-06 15:01:50 -0500",
        "subject": "Cleanup pgPageChecksum() test in postgres/interface module.",
        "body": "Some of the comments were wrong or inconsistent.\n\nUpdate TEST_RESULT_U16_HEX() to the less-specific TEST_RESULT_UINT_HEX()."
    },
    {
        "commit": "438b957f9cf11b1c23636ec781c67f59bf4a8af1",
        "date": "2020-03-06 14:41:03 -0500",
        "subject": "Add infrastructure for multiple compression type support.",
        "body": "Add compress-type option and deprecate compress option. Since the compress option is boolean it won't work with multiple compression types. Add logic to cfgLoadUpdateOption() to update compress-type if it is not set directly. The compress option should no longer be referenced outside the cfgLoadUpdateOption() function.\n\nAdd common/compress/helper module to contain interface functions that work with multiple compression types. Code outside this module should no longer call specific compression drivers, though it may be OK to reference a specific compression type using the new interface (e.g., saving backup history files in gz format).\n\nUnit tests only test compression using the gz format because other formats may not be available in all builds. It is the job of integration tests to exercise all compression types.\n\nAdditional compression types will be added in future commits."
    },
    {
        "commit": "02aa03d1a266827b7ff5cb739b9598e475777086",
        "date": "2020-03-06 14:10:09 -0500",
        "subject": "Remove obsolete methods in pgBackRest::Storage::Storage module.",
        "body": "All the methods in this module will need to be implemented via the command-line in order to get rid of LibC, so the first step is to reduce the code in the module as much as possible.\n\nFirst remove storageDb() and use storageTest() instead.  Then create storageTest() using pgBackRestTest::Common::Storage which has no dependencies on LibC.  Now the only storage using the LibC interface is storageRepo().\n\nRemove all link functions since those operations cannot be performed on a repo unless it is Posix, in which case the LibC interface is not needed.  Same for owner().\n\nRemove pathSync() because syncs are not required in the tests.  No test data is reused after a crash.\n\nPath create/exists functions should never be explicitly performed on a repo so remove those.  File exists can be implemented by calling info() instead.\n\nRemove encryption detection functions which were only used by Backup/Archive::Info reconstruct() which are now obsolete.\n\nRemove all filters except pgBackRest::Storage::Filter::CipherBlock since they are not being used.  That also means there are no filters returning results so remove all the result code.\n\nMove hashSize() and pathAbsolute() into pgBackRest::Storage::Base where they can be shared between pgBackRest::Storage::Storage and pgBackRestTest::Common::Storage."
    },
    {
        "commit": "00647c7109cab28110d7dabd3da039b391507d50",
        "date": "2020-03-06 07:21:17 -0500",
        "subject": "Remove Perl Db module and LibC dependencies.",
        "body": "This was mostly dead code except the DB_BACKUP_ADVISORY_LOCK constant, moved to the real/all test module, and the function that pulls info from pg_control, moved to ExpireEnvTest.pm."
    },
    {
        "commit": "2e0fe2565025d0408e3d0f740fe1e5916d3ebbc0",
        "date": "2020-03-05 18:34:59 -0500",
        "subject": "Remove dependency on LibC hash filter.",
        "body": "Perl provides Digest::SHA for hashing so there is no need to expose this via LibC anymore."
    },
    {
        "commit": "e55443c890181ea63a350275447885331c8254e4",
        "date": "2020-03-05 16:12:54 -0500",
        "subject": "Move logic from postgres/pageChecksum to command/backup/pageChecksum().",
        "body": "The postgres/pageChecksum module was designed as an interface to the C structs for the Perl code.  The new C code can do this directly so no need for an interface.\n\nMove the remaining test for pgPageChecksum() into the postgres/interface test module."
    },
    {
        "commit": "3796b74dcac29d7e7e7f89b69d3fa92b9d105a17",
        "date": "2020-03-05 14:23:01 -0500",
        "subject": "Use stock PostgreSQL page checksum implementation.",
        "body": "We were using a customized version which worked fine but was hard to merge with upstream changes.  Now this code is maintained much like the types in static.auto.h that we copy and check with each release.\n\nThe goal is to eventually build directly against PostgreSQL (either source or libcommon) and this brings us one step closer."
    },
    {
        "commit": "1b647a1a22ae36e2447dc04384ab794b011a74aa",
        "date": "2020-03-05 14:06:36 -0500",
        "subject": "Remove invalid page checksum test.",
        "body": "All zero pages should not have checksums.  Not only is this test invalid but it will not work with the stock page checksum implementation in PostgreSQL, which checks for zero pages.  Since we will be using that code verbatim soon this test needs to go."
    },
    {
        "commit": "eb4347f20b85fa86208bb31b24b8b6f383432706",
        "date": "2020-03-05 13:56:20 -0500",
        "subject": "Use static checksums in mock/all integration tests.",
        "body": "Using static values serves as a better cross-check against the page checksum code. The downside is that these checksums may not work with some big endian systems but in that case neither will the unit tests.\n\nWe can also remove the page checksum interface from LibC which brings us one step closer to eliminating it."
    },
    {
        "commit": "77853d3c1387cd6ba42396e7ca29fae0f18ab6ac",
        "date": "2020-03-05 11:14:53 -0500",
        "subject": "Remove invalid const in pgPageChecksum() parameter.",
        "body": "pgPageChecksum() must modify the page header in order to calculate the checksum.  The modification is temporary but make it clear that it happens by removing the const.\n\nAlso make a note about our non-entirely-kosher usage of a const Buffer in the PageChecksum filter.  This is safe as currently coded but at the least we need to be aware of what is going on."
    },
    {
        "commit": "4ab8943ca886ec61934cea55182c1123cd4596a7",
        "date": "2020-03-05 09:14:27 -0500",
        "subject": "Use PG_PAGE_SIZE_DEFAULT constant instead of pageSize variable.",
        "body": "Page size is passed around a lot but in fact it can only have one value, PG_PAGE_SIZE_DEFAULT, which is checked when pg_control is loaded. There may be an argument for supporting multiple page sizes in the future but for now just use the constant to simplify the code.\n\nThere is also a significant performance benefit.  Because pageSize was being used in pageChecksumBlock() the main loop was neither unrolled nor vectorized (-funroll-loops -ftree-vectorize) as it is now with a constant loop boundary."
    },
    {
        "commit": "91f321fb865fe4569f50d3a280d9ad1f502b7cbd",
        "date": "2020-03-04 14:24:40 -0500",
        "subject": "Rename old page*() functions to conform to new conventions.",
        "body": "The general convention now is to prefix PostgreSQL functions with \"pg\"."
    },
    {
        "commit": "a86253f1128ad7cd3921826df4baec2e899667f9",
        "date": "2020-03-04 14:12:02 -0500",
        "subject": "Remove obsolete function pageChecksumBufferTest().",
        "body": "This function made validation faster in Perl because fewer calls (and buffer transformations) were required when all checksums were valid.\n\nIn C calling pageChecksumTest() directly is just as efficient so there is no longer a need for pageChecksumBufferTest()."
    },
    {
        "commit": "9d488822682ec425e5ac4b0946a89eef240fc172",
        "date": "2020-03-04 13:31:27 -0500",
        "subject": "Centralize PostgreSQL page header data structures.",
        "body": "These data structures were copied a few places (but only once in the core code) so put them in a place where everyone can use them.\n\nTo do this create a new file, static.auto.h, to contain data types and macros that have stayed the same through all the versions of PostgreSQL that we support.  This allows us to have single, non-versioned set of headers and code for stable data structures like page headers.\n\nMigrate a few types from version.auto.h that are required for page header structures and pull the remaining types from PostgreSQL directly.\n\nWe had previously renamed xlog to wal so update those where required since we won't be modifying the PostgreSQL names anymore."
    },
    {
        "commit": "a88d709962f761a51b21dd60688c5915bbdccddb",
        "date": "2020-03-03 18:05:54 -0500",
        "subject": "Add missing copyright notice."
    },
    {
        "commit": "e8daabb963e6220f8b14672a6a9e3b3a118b4655",
        "date": "2020-03-03 18:01:56 -0500",
        "subject": "Remove incorrect comment.",
        "body": "This was likely pasted from pageChecksum() and not removed."
    },
    {
        "commit": "507a58460e9c33361baf3f1cbf2b95c9cb0dd5ae",
        "date": "2020-02-29 07:52:54 -0500",
        "subject": "Minor adjustments to common prefix code updated in 8ec41efb."
    },
    {
        "commit": "8ec41efb04ee45854d18ffaf765e4a4800dd3879",
        "date": "2020-02-28 17:41:34 -0500",
        "subject": "Improve poor man's regular expression common prefix generator.",
        "body": "The S3 driver depends on being able to generate a common prefix to limit the number of results from list commands, which saves on bandwidth.\n\nThe prior implementation could be tricked by an expression like ^ABC|^DEF where there is more than one possible prefix.  To fix this disallow any prefix when another ^ anchor is found in the expression.  [^ and \\^ are OK since they are not anchors.\n\nNote that this was not an active bug because there are currently no expressions with multiple ^ anchors."
    },
    {
        "commit": "3bbead548026155c8bb5b212bed80903a3ef6a97",
        "date": "2020-02-28 15:03:01 -0500",
        "subject": "Add missing asserts.",
        "body": "These interface functions did not exist when the Storage object was created but they are now required."
    },
    {
        "commit": "19ea699e90a4f797c7f168cc853faf4b8e807056",
        "date": "2020-02-28 15:00:09 -0500",
        "subject": "Add function comment."
    },
    {
        "commit": "ceb050e950c596835a9ab3b136b0de4983c69a54",
        "date": "2020-02-28 14:50:50 -0500",
        "subject": "Fix flapping test in real/all module.",
        "body": "The restore test function was passing strBackup to the restoreCompare function but when the restore is expected to pick a backup based on a timestamp, then strBackup may not be the one chosen.\n\nModified the code so that strBackupExpected is set based on the parameters passed to the function and this is then passed to restoreCompare."
    },
    {
        "commit": "089049ec563b021a69c46929f5fae13a1fdf0528",
        "date": "2020-02-28 14:30:39 -0500",
        "subject": "Add sleep before/after retrieving timestamp in the user guide.",
        "body": "Adding a sleep before was necessary since only adding a sleep after did not always work. This helps to ensure the backup stop time for the previous backup does not equal time-recovery-timestamp. The sleep after allows enough time between the time retrieval and dropping important_table so PostgreSQL can consistently recover to before the table drop.\n\nNote that these issues were caused by picking a timestamp too close to the restore command or a database operation, not due to any problem in backup selection of the restore command."
    },
    {
        "commit": "7d8c0d29fb5b2663c9c4b6be0b9f697a6c19c0fc",
        "date": "2020-02-27 14:51:40 -0500",
        "subject": "Remove compress option from config tests.",
        "body": "This option was used for boolean testing but it will soon be deprecated and the semantics changed.  To reduce churn it seems easiest to just use other options for testing.  This will also be helpful when the option is eventually removed."
    },
    {
        "commit": "dbf6255ab8ca9a141f9a7fbd1fda99006cce9e05",
        "date": "2020-02-27 12:25:32 -0500",
        "subject": "Remove compress/compress-level options from commands where unused.",
        "body": "These commands (e.g. restore, archive-get) never used the compress options but allowed them to be passed on the command line. Now they will error when these options are passed on the command line. If these errors occur then remove the unused options."
    },
    {
        "commit": "8f5337a136bcb8edf672a335164fc36768f22a73",
        "date": "2020-02-27 12:21:53 -0500",
        "subject": "Add missing static keywords.",
        "body": "Interface functions should be marked static since they can only be called through the IoFilter interface."
    },
    {
        "commit": "3f77a83e7367a05d7fee9612159e671910db25e0",
        "date": "2020-02-27 12:19:40 -0500",
        "subject": "Remove raw option for gz compression.",
        "body": "This was a minor optimization used in protocol layer compression.  Even though it was slightly faster, it omitted the crc-32 that is generated during normal compression which could lead to corrupt data after a bad network transmission.  This would be caught on restore by our checksum but it seems better to catch an issue like this early.\n\nThe raw option also made the function signature different than future compression formats which may not support raw, or require different code to support raw.\n\nIn general, it doesn't seem worth the extra testing to support a format that has minimal benefit and is seldom used, since protocol compression is only enabled when the transmitted data is uncompressed."
    },
    {
        "commit": "ee351682dae215ccbb2ae9d5c0932a41580635dd",
        "date": "2020-02-27 12:09:05 -0500",
        "subject": "Rename \"gzip\" to \"gz\".",
        "body": "\"gz\" was used as the extension but \"gzip\" was generally used for function and type naming.\n\nWith a new compression format on the way, it makes sense to standardize on a single abbreviation to represent a compression format in the code.  Since the extension is standard and we must use it, also use the extension for all naming."
    },
    {
        "commit": "5afd950ed98b7eea0bc0c52851fdbe4fb7637698",
        "date": "2020-02-26 21:15:39 -0500",
        "subject": "Improve performance of MEM_CONTEXT*() macros.",
        "body": "The prior code used TRY...CATCH blocks to cleanup mem contexts when an error occurred. This included freeing new mem contexts that were still being initialized when the error occurred and ensuring that the prior memory context was restored.\n\nThis worked fine in production but it involved a lot of setjmp()/longjmp() calls that resulted in longer compilation times and sluggish performance under valgrind, profiling, and coverage testing.\n\nInstead maintain a stack of new contexts and context switches that can be used to do cleanup after an error. Normally, the stack is not used for this purpose and pushing/popping is a cheap operation. In the prior implementation most of the TRY...CATCH logic needed to be run even on success.\n\nOne bonus is that the binary is about 8% smaller after this change.  Another benefit is that new contexts *must* be explicitly freed/discarded or an error will occur.  See info/manifest.c for an example of where this is useful outside the standard macros."
    },
    {
        "commit": "d68771a4a5f0f349ba31679a27bc7b2ab8b0d736",
        "date": "2020-02-26 20:40:24 -0500",
        "subject": "Fix incorrect lcov version in contributing guide."
    },
    {
        "commit": "99b052a38ab41c2f10a68f234830508904341139",
        "date": "2020-02-25 17:25:12 -0500",
        "subject": "Update enum formatting and NULL test to project style."
    },
    {
        "commit": "9e0dc83e878fbe407b8daf05710a8b8e73638c6e",
        "date": "2020-02-25 17:18:25 -0500",
        "subject": "Begin v2.25 development."
    },
    {
        "commit": "495dec44f0f512478ac942091ca2a29c60ad4911",
        "date": "2020-02-25 17:05:45 -0500",
        "subject": "v2.24: Auto-Select Backup Set for Time Target"
    },
    {
        "commit": "ace41d57d1a76d031350f3ba458ba1d1e393866d",
        "date": "2020-02-25 09:34:27 -0500",
        "subject": "Clarify that gzip is always used to compress history files."
    },
    {
        "commit": "cc743f2e04db05cc3277e43023ebd8e2007ef4ed",
        "date": "2020-02-21 11:51:39 -0500",
        "subject": "Skip pg_internal.init temp file during backup.",
        "body": "If PostgreSQL crashes it can leave behind a pg_internal.init temp file with the pid as the extension, as discussed in https://www.postgresql.org/message-id/flat/20200131045352.GB2631%40paquier.xyz#7700b9481ef5b0dd5f09cc410b4750f6.  On restart this file is not cleaned up so it can persist for the lifetime of the cluster or until another process with the same id happens to write pg_internal.init.\n\nThis is arguably a bug in PostgreSQL, but in any case it makes sense not to backup this file."
    },
    {
        "commit": "48d0f77fe3e6edf7347b49d9e8c67052db00355b",
        "date": "2020-02-21 11:31:31 -0500",
        "subject": "Remove dead LibC macros.",
        "body": "These macros were made obsolete when code was removed from LibC after the C migration was completed."
    },
    {
        "commit": "dfc5f6723379526fd3c5fe5de61a37793e2cced8",
        "date": "2020-02-17 17:12:22 -0600",
        "subject": "Fix typo."
    },
    {
        "commit": "ea0af890d82b2b335cc4d9a9dcc29d440a583706",
        "date": "2020-02-12 17:27:44 -0700",
        "subject": "Reclassify release note to documentation improvement."
    },
    {
        "commit": "c6b89d74ec5a21fc644f8f5106ee42def1135c98",
        "date": "2020-02-12 17:20:21 -0700",
        "subject": "Add reviewer."
    },
    {
        "commit": "6353e9428df1d241b97d02c843f1a737e7c36c85",
        "date": "2020-02-12 17:18:48 -0700",
        "subject": "Error when archive-get/archive-push/restore are not run on a PostgreSQL host.",
        "body": "This error was lost during the migration to C.  The error that occurred instead (generally an SSH auth error) was hard to debug.\n\nRestore the original behavior by throwing an error immediately if pg1-host is configured for any of these commands.  reset-pg1-host can be used to suppress the error when required."
    },
    {
        "commit": "dac8119bf11e74b7d393b601bcfbe447a80e85e4",
        "date": "2020-02-12 15:47:07 -0700",
        "subject": "Add pgIsLocalVerify().",
        "body": "This functionality is required in commands other than restore, so centralize it."
    },
    {
        "commit": "e2c304d4738144f1c5c72d43d70ec5c9e67d052b",
        "date": "2020-02-12 12:17:23 -0700",
        "subject": "Prevent defunct processes in asynchronous archive commands.",
        "body": "The main improvement is a double-fork to prevent zombie processes if the parent process exits after the (child) async process. This is a real possibility since the parent process sticks around to monitor the results of the async process.\n\nIn the first fork, ignore SIGCHLD in the very unlikely case that the async process exits before the first fork. This is probably only possible if the async process exits immediately, perhaps due to a chdir() failure. Set SIGCHLD back to default in the async process so waitpid() will work as expected.\n\nAlso update the comment on chdir() to more accurately reflect what is happening.\n\nFinally, add a test in certain debug builds to ensure the first fork exits very quickly. This only works when valgrind is not in use because valgrind makes forking so slow that it is hard to tell if the async process performed work or not (in the case that the second fork goes missing and the async process is a direct child)."
    },
    {
        "commit": "1fa3ae2fcd5b90a6f2a4e5dc83b3580297e83c1b",
        "date": "2020-02-11 19:54:17 -0700",
        "subject": "Prevent lock-bot from marking locked issues as \"resolved\".",
        "body": "This is certainly not true in all cases, e.g. an issue may be closed if it is added to the backlog."
    },
    {
        "commit": "1be9e6854e8ab4bc21d693371a09290a6c3d5db6",
        "date": "2020-02-11 19:52:23 -0700",
        "subject": "Prevent lock-bot from adding comments to locked issues.",
        "body": "This will hopefully prevent users from getting notifications when an issue is locked."
    },
    {
        "commit": "43936c58a894187b41501ba5acaf16e92842c261",
        "date": "2020-02-11 19:44:06 -0700",
        "subject": "Fix resume when the resumable backup was created by Perl.",
        "body": "In this case the resumable backup should be ignored, but the C code was not able to load the partial manifest written by Perl since the format differs slightly. Add validations to catch this case and continue gracefully."
    },
    {
        "commit": "44adf21c834ca8624b47dc6dbc2794bc429463ad",
        "date": "2020-02-10 21:30:43 -0700",
        "subject": "Consolidate archive async exec code.",
        "body": "Move duplicated code to the common module.  This will reduce copy and paste between the get and push modules when changes are made."
    },
    {
        "commit": "0eaedc9a6ae98eaf4e733a3f63cb462a5ebcfa05",
        "date": "2020-02-10 19:17:11 -0700",
        "subject": "Improve async archive error file removal.",
        "body": "2a06df93 removed the error file so an old error would not be reported before the async process had a chance to try again.  However, if the async process was already running this might lead to a timeout error before reporting the correct error.\n\nInstead, remove the error files once we know that the async process will start, i.e. after the archive lock has been acquired.\n\nThis effectively reverts 2a06df93."
    },
    {
        "commit": "8cfbc294fcc066fce594c09649865f3d88bb2364",
        "date": "2020-02-10 18:48:47 -0700",
        "subject": "Fix incorrect error code."
    },
    {
        "commit": "1ce71b1e9b5e0613182d64673e9f730efd0e8176",
        "date": "2020-02-10 17:44:39 -0700",
        "subject": "Add missing linefeed."
    },
    {
        "commit": "71b4cc56cbcf20ce6a39e2155e0d9da11c83aaf8",
        "date": "2020-02-06 21:11:15 -0800",
        "subject": "Rename confessOnError to throwOnError.",
        "body": "Confess is awfully Perl-ish and was likely copied verbatim during the migration.  Rename to what we do now, i.e. throw."
    },
    {
        "commit": "2a06df93f379bdc28a6c5084d204cb1e5391dbb3",
        "date": "2020-02-06 20:59:04 -0800",
        "subject": "Remove async archive error file when not throwing an error.",
        "body": "This ensures that the error will not be thrown before the async process has a chance to retry."
    },
    {
        "commit": "3721e57a0ec709326c28eb6d31f9b4fe9e3fd7b5",
        "date": "2020-02-06 18:28:54 -0800",
        "subject": "Clarify why some recovery options are not commented out for PG >= 12."
    },
    {
        "commit": "efff54490f456b653e51abb05507b0917792376e",
        "date": "2020-02-04 21:19:21 -0800",
        "subject": "Fix release note typo."
    },
    {
        "commit": "296aec03be7c924f2689e091e667e80daf06e6f7",
        "date": "2020-01-31 07:50:03 -0700",
        "subject": "Update contributor name."
    },
    {
        "commit": "0f8ec3e478cc17243bc3f043a13f5da73f98de66",
        "date": "2020-01-30 14:51:26 -0700",
        "subject": "Read HTTP content to eof when size/encoding not specified.",
        "body": "Generally, the content-size or content-encoding headers will be used to specify how much content should be expected.\n\nThere is a special case where the server sends 'Connection:close' without the content headers and the content may be read up until eof.\n\nThis appears to be an atypical usage but it is required by the specification."
    },
    {
        "commit": "856980ae99efe088e0cf10588c2a18cd78ff32e6",
        "date": "2020-01-30 14:38:05 -0700",
        "subject": "Auto-select backup set on restore when time target is specified.",
        "body": "Auto-selection is performed only when --set is not specified. If a backup set for the given target time cannot not be found, the latest (default) backup set will be used.\n\nCurrently a limited number of date formats are recognized and timezone names are not allowed, only timezone offsets."
    },
    {
        "commit": "f46d1fa74c4c0cef7a0ac00f3e43ebeecdc1315e",
        "date": "2020-01-30 11:28:30 -0700",
        "subject": "Add timezone calculations to time module.",
        "body": "Add tzPartsValid() and tzOffsetSecond() to calculate timezone offsets from user provided values.\n\nUpdate epochFromParts() to accept a timezone offset in seconds."
    },
    {
        "commit": "dbaa5e3473ebfb4651e879edaab6817fdd79092a",
        "date": "2020-01-29 08:21:36 -0700",
        "subject": "Add linefeeds to function declarations."
    },
    {
        "commit": "80687cbe740ad786a15db5e76777f24fd7cb8c69",
        "date": "2020-01-28 10:19:58 -0700",
        "subject": "Free TLS connection in common/io-http test.",
        "body": "The test that checks for no output from the server was leaving a connection open which valgrind was complaining about.\n\nWait on the server long enough to cause the error on the client then close the connection to free the memory."
    },
    {
        "commit": "846efaa40f2a04273a61057a3684973098deb690",
        "date": "2020-01-28 07:36:20 -0700",
        "subject": "Revert 'Add lib path for libpq in case it is in a non-standard location.`",
        "body": "Putting this before AC_CHECK_LIB breaks on many systems because the location of pg_config is not yet known."
    },
    {
        "commit": "324f7cebe04e97a9ec34e325f6fbd927f77edb2c",
        "date": "2020-01-27 17:50:07 -0700",
        "subject": "Designated initializer cleanup.",
        "body": "Cleanup designated initializers created in b134175f by moving struct members in or out for clarity."
    },
    {
        "commit": "24d2494c8209079d0288784de38e9045d5c6cb95",
        "date": "2020-01-27 11:25:24 -0700",
        "subject": "Fix incomplete comment."
    },
    {
        "commit": "0a845214a1d306d16dce5618f2f998f8f6e6778d",
        "date": "2020-01-26 23:10:29 -0700",
        "subject": "Fix typo."
    },
    {
        "commit": "697150eaf875742a4522e2ed8c00dfaf0489c4ac",
        "date": "2020-01-26 23:07:07 -0700",
        "subject": "Add more validations to the manifest on backup.",
        "body": "Validate that checksums exist for zero size files.  This means that the checksums for zero size files are explicitly set by backup even though they'll always be the same.  Also validate that zero length files have the correct checksum.\n\nValidate that repo size is > 0 if size is > 0.  No matter what compression type is used a non-zero amount of data cannot be stored in zero bytes."
    },
    {
        "commit": "bb45a80d46b738a9b6672fc77158585395b04473",
        "date": "2020-01-26 22:47:53 -0700",
        "subject": "Begin v2.24 development."
    },
    {
        "commit": "2358d3448507f5dc4fd50edf65172285bca69c4b",
        "date": "2020-01-26 22:38:21 -0700",
        "subject": "v2.23: Bug Fix"
    },
    {
        "commit": "7ab07dc580989452d807332bc91d26a42e5a0d3a",
        "date": "2020-01-26 21:58:59 -0700",
        "subject": "Validate checksums are set in the manifest on backup/restore.",
        "body": "This is a modest start but it addresses the specific issue that was caused by the bug fixed in 45ec694a.  This validation will produce an immediate error rather than erroring out partway through the restore.\n\nMore validations are planned but this is the most important one and seems safest for this release."
    },
    {
        "commit": "45ec694af22dda84b124f0df242bbcfdd28726d1",
        "date": "2020-01-26 13:19:13 -0700",
        "subject": "Fix missing files corrupting the manifest.",
        "body": "If a file was removed by PostgreSQL during the backup (or was missing from the standby) then the next file might not be copied and updated in the manifest. If this happened then the backup would error when restored.\n\nThe issue was that removing files from the manifest invalidated the pointers stored in the processing queues.  When a file was removed, all the pointers shifted to the next file in the list, causing a file to be unprocessed.  Since the unprocessed file was still in the manifest it would be saved with no checksum, causing a failure on restore.\n\nWhen process-max was > 1 then the bug would often not express since the file had already been pulled from the queue and updates to the manifest are done by name rather than by pointer."
    },
    {
        "commit": "9b47ff2746b74bf41d20fa43d6ed2697b0a99087",
        "date": "2020-01-26 12:29:53 -0700",
        "subject": "Sort last processing queue on backup from standby.",
        "body": "The last queue was not being sorted when a primary queue was added first.\n\nThis did not affect the backup or integrity but could lead to slightly lower performance since large files were not always copied first."
    },
    {
        "commit": "0444d3741423004e0f94116b528d94090c1e4303",
        "date": "2020-01-24 10:43:47 -0700",
        "subject": "Remove obsolete include to ../libc."
    },
    {
        "commit": "b1c5885017c035320804c5d16ed57b149a33ab10",
        "date": "2020-01-24 10:40:42 -0700",
        "subject": "Add lib path for libpq in case it is in a non-standard location."
    },
    {
        "commit": "90abc3cf170a3d5da8bbc5307cf5032d6af5ed6c",
        "date": "2020-01-24 10:08:05 -0700",
        "subject": "Use pkg-config instead of xml2-config for libxml2 build options.",
        "body": "pkg-config is a generic way to get build options rather than relying on a package-specific utility.\n\nXML2_CONFIG can be used to override this utility for systems that do not ship pkg-config."
    },
    {
        "commit": "b134175fc7a98836f49f20d552f7c31138b66b1b",
        "date": "2020-01-23 14:15:58 -0700",
        "subject": "Use designated initializers to initialize structs.",
        "body": "Previously memNew() used memset() to initialize all struct members to 0, NULL, false, etc.  While this appears to work in practice, it is a violation of the C specification.  For instance, NULL == 0 must be true but neither NULL nor 0 must be represented with all zero bits.\n\nInstead use designated initializers to initialize structs.  These guarantee that struct members will be properly initialized even if they are not specified in the initializer.  Note that due to a quirk in the C99 specification at least one member must be explicitly initialized even if it needs to be the default value.\n\nSince pre-zeroed memory is no longer required, adjust memAllocInternal()/memReallocInternal() to return raw memory and update dependent functions accordingly.  All instances of memset() have been removed except in debug/test code where needed.\n\nAdd memNewPtrArray() to allocate an array of pointers and automatically set all pointers to NULL.\n\nRename memGrowRaw() to the more logical memResize()."
    },
    {
        "commit": "cf2024beafba82b3899d9c46c7ea64716835a292",
        "date": "2020-01-21 18:47:14 -0700",
        "subject": "Add XML2_CONFIG environment variable to configure.",
        "body": "This allows the default 'xml2-config' to be replaced with, e.g. 'pkg-config libxml-2.0', for libxml2 configuration."
    },
    {
        "commit": "600a51815feacb149add2bb777d6a3b4d284c8aa",
        "date": "2020-01-21 18:42:22 -0700",
        "subject": "Set client_encoding to UTF8 on PostgreSQL connect.",
        "body": "This is the only non-ASCII character encoding we have tested so make sure that's all we get from PostgreSQL."
    },
    {
        "commit": "1706c599bd1c4d1eeac5bf44d1811e0259809027",
        "date": "2020-01-21 18:37:43 -0700",
        "subject": "Set encoding to UTF8 for Debian documentation containers.",
        "body": "This allows testing multi-byte encodings in PostgreSQL."
    },
    {
        "commit": "382ddfd79dfec12f4cdf821f36a47dd404a51356",
        "date": "2020-01-21 16:43:44 -0700",
        "subject": "Begin v2.23 development."
    },
    {
        "commit": "bae6e1c9e3a035f3793739ef1b469015777aa70b",
        "date": "2020-01-21 16:12:33 -0700",
        "subject": "v2.22: Bug Fix"
    },
    {
        "commit": "94842ccecee642cc58f6c177c19e642d86a8d997",
        "date": "2020-01-21 11:59:25 -0700",
        "subject": "Fix comment."
    },
    {
        "commit": "03d434c7e112eb3a8649e9c11149e08929f9651b",
        "date": "2020-01-21 11:57:59 -0700",
        "subject": "Remove RHEL package patch now that it has been merged upstream.",
        "body": "Also revert 731ffcfb and update ContainerTest.pm for upstream changes."
    },
    {
        "commit": "b89e6b7f69677fdaff3bb1ed5e908c843f72a4b5",
        "date": "2020-01-21 10:29:46 -0700",
        "subject": "Fix error in timeline conversion.",
        "body": "The timeline is required to verify WAL segments in the archive after a backup. The conversion was performed base 10 instead of 16, which led to errors when the timeline was ≥ 0xA."
    },
    {
        "commit": "c2da9aa907802a59a0c6fd5c111a1dbe7ea16c76",
        "date": "2020-01-19 14:54:38 -0700",
        "subject": "Fix invalid bufSize().",
        "body": "bufUsed() should be used here to avoid a possible segfault or xml parse error when bufSize() > bufUsed()."
    },
    {
        "commit": "c630bda1c184d475155220884f8a25fa4b788aaf",
        "date": "2020-01-19 10:37:08 -0700",
        "subject": "Remove Debian package patch now that it has been merged upstream."
    },
    {
        "commit": "d9efbc3698f92b874abb6eff3298c44fd35b0d5c",
        "date": "2020-01-18 10:46:48 -0700",
        "subject": "Add UTF8 strings to manifest and restore tests.",
        "body": "The most likely place to get UTF8 characters is in database names so make sure UTF8 works in the places where database names are processed."
    },
    {
        "commit": "19c39fe1e262dd7c259e9f1e68d0695c43afefe3",
        "date": "2020-01-17 22:54:19 -0700",
        "subject": "Fix redundancy in comment."
    },
    {
        "commit": "ec173f12fb9c26553b2021473dd62d73a006835a",
        "date": "2020-01-17 13:29:49 -0700",
        "subject": "Add MEM_CONTEXT_PRIOR() block and update current call sites.",
        "body": "This macro block encapsulates the common pattern of switching to the prior (formerly called old) mem context to return results from a function.\n\nAlso rename MEM_CONTEXT_OLD() to memContextPrior().  This violates our convention of macros being in all caps but memContextPrior() will become a function very soon so this will reduce churn."
    },
    {
        "commit": "b5fa9951e36641d0ad751f0c89751e84b5b1df0d",
        "date": "2020-01-17 13:08:47 -0700",
        "subject": "Use MEM_CONTEXT_BEGIN() block in varFree().",
        "body": "We probably arrived at this unusual construction because of the complexity of getting the mem context.  Whether or not this is a good way to store the mem context, it still makes sense to use the standard pattern for switching mem contexts."
    },
    {
        "commit": "c6d6b7dbefb62578be64133e36836fc936945555",
        "date": "2020-01-17 11:58:41 -0700",
        "subject": "Use MEM_CONTEXT_NEW_BEGIN() block instead of memContextNew().",
        "body": "A few places were using just memContextNew(), probably because they did not immediately need to create anything in the new context, but it's better if we use the same pattern everywhere, even if it results in a few extra mem context switches."
    },
    {
        "commit": "d3be1e41a4cdb5b7bbc40d73de8f185b22a97efd",
        "date": "2020-01-16 16:23:40 -0700",
        "subject": "Add braces and spaces for clarity.",
        "body": "This should make it a little easier to see how the TRY macros work together."
    },
    {
        "commit": "254f79803fca8cd591849b77d1266c79580ab08c",
        "date": "2020-01-16 16:20:59 -0700",
        "subject": "Use MEM_CONTEXT_BEGIN() block instead of memContextSwitch().",
        "body": "This is the standard pattern but was missed here."
    },
    {
        "commit": "8068a610d566cf9b5bcc79a3602a3a8442192bad",
        "date": "2020-01-16 16:19:45 -0700",
        "subject": "Use MEM_CONTEXT_NEW_BEGIN() block.",
        "body": "This pattern makes more sense.  The prior code was probably copy-pasted from code with slightly different requirements."
    },
    {
        "commit": "4274fcbf6f99f6d8414d2ba095809341bcf56797",
        "date": "2020-01-16 14:42:01 -0700",
        "subject": "Add missing semicolon.",
        "body": "This worked when the FUNCTION_TEST_RETURN_VOID() macro expanded to nothing because of the final semicolon.  If the FUNCTION_TEST_RETURN_VOID() macro expanded to something then there was one semicolon too few."
    },
    {
        "commit": "731ffcfb3d77e6a9d17091f9819cf3e21e25d951",
        "date": "2020-01-16 14:29:04 -0700",
        "subject": "Disable RHEL package builds since upstream is broken."
    },
    {
        "commit": "e81629b4420759f80bd18017ee47b89942c90090",
        "date": "2020-01-15 13:53:30 -0700",
        "subject": "Reclassify Perl and LibC code as test/harness.",
        "body": "These were still being included in the core totals but they are no longer used by core."
    },
    {
        "commit": "193b78e150919470b33f3941be03f0ef589a3e79",
        "date": "2020-01-15 13:40:17 -0700",
        "subject": "Remove -s from make instructions.",
        "body": "It's a good option but not required so let the user make the choice.\n\nAlso combine configure and make into a single line."
    },
    {
        "commit": "9414ad2300f5ab87000da333fbbfa58228dae0c4",
        "date": "2020-01-15 13:29:52 -0700",
        "subject": "Begin v2.22 development."
    },
    {
        "commit": "2c0ba0820d3e4adea31ef6b8ee201be653ef9579",
        "date": "2020-01-15 13:21:52 -0700",
        "subject": "v2.21: C Migration Complete"
    },
    {
        "commit": "8d3710b2fe94c90783374d19a435bded1903fe1b",
        "date": "2020-01-15 12:24:58 -0700",
        "subject": "Fix options being ignored by asynchronous commands.",
        "body": "The local, remote, archive-get-async, and archive-push-async commands were used to run functionality that was not directly available to the user. Unfortunately that meant they would not pick up options from the command that the user expected, e.g. backup, archive-get, etc.\n\nRemove the internal commands and add roles which allow pgBackRest to determine what functionality is required without implementing special commands. This way the options are loaded from the expected command section.\n\nSince remote is no longer a specific command with its own options, more manipulation is required when calling remote. This might be something we can improve in the config system but it may be worth leaving as is because it is a one-off, for now at least."
    },
    {
        "commit": "c43ec9d38c7cd543d7a832f1e362705658ca5c12",
        "date": "2020-01-15 08:19:32 -0700",
        "subject": "Fix function return logging type.",
        "body": "This was working because the stack was being cleaned up by a try block at the call site."
    },
    {
        "commit": "f8a29c266e1e9b6e207fdd74478e3aca9b728cb9",
        "date": "2020-01-13 20:36:42 -0700",
        "subject": "Clarify comment."
    },
    {
        "commit": "a7738ebba3cfd3a732c5de997a113746136133af",
        "date": "2020-01-13 13:21:28 -0700",
        "subject": "Update comments in command/remote module."
    },
    {
        "commit": "a969a860abea7384572a1244913bcfbd8851545d",
        "date": "2020-01-13 11:13:37 -0700",
        "subject": "Fix misaligned braces."
    },
    {
        "commit": "fe263e87b1822b051ccea3fc0a8fea64f944dd7b",
        "date": "2020-01-12 11:31:06 -0700",
        "subject": "Allow path-style URIs in S3 driver.",
        "body": "Although path-style URIs have been deprecated by AWS, they may still be used with products like Minio because no additional DNS configuration is required.\n\nPath-style URIs must be explicitly enabled since it is not clear how they can be auto-detected reliably.  More importantly, faulty detection could cause regressions in current installations."
    },
    {
        "commit": "069345d33959eb7b2ff0f4ae2b2ec65023ac7186",
        "date": "2020-01-12 11:00:10 -0700",
        "subject": "Add string constants."
    },
    {
        "commit": "3f89ecf8d9b848c2ca063581bc75064d9d353255",
        "date": "2020-01-10 09:39:33 -0700",
        "subject": "Add time to storage ls JSON output.",
        "body": "Time is supported in all drivers with the update to S3 at 61538f93, so it is now possible to add time to the ls command and have it work on all repo types."
    },
    {
        "commit": "0fe7bb2ec4d6ba10af8f2a6fd736e2c4cbdb2af2",
        "date": "2020-01-09 12:20:13 -0700",
        "subject": "Improve code that updates/removes pg options passed to a remote.",
        "body": "The prior code was updating/removing hard-coded options but new options are added all the time and there was no indication that this code needed to be updated.  For example, dc1e7ca2 added the pg-user option but this code was not updated.\n\nInstead find the options to update/remove dynamically.  The new code uses prefixes, which is not perfect, but the patterns for pg options are pretty well established and this seems safer than the existing code."
    },
    {
        "commit": "4c8653fc8bc6e8b3070c59ba12af4e5f2131c21c",
        "date": "2020-01-09 11:56:03 -0700",
        "subject": "Update inaccurate comments."
    },
    {
        "commit": "2e11389ed4db29d530ec8e480134c44eab9a5896",
        "date": "2020-01-09 11:52:51 -0700",
        "subject": "Fix comment typo."
    },
    {
        "commit": "0c5c78e5e16b10f79dcfa023c6276a65ad87481d",
        "date": "2020-01-09 09:23:15 -0700",
        "subject": "Make quoting in cfgExeParam() optional.",
        "body": "Parameter lists that are passed directly to exec*() do not need quoting when spaces are present.  Worse, the quotes will not be stripped and the option value will be garbled.\n\nUnfortunately this still does not fix all issues with quoting since we don't know how it might need to be escaped to work with SSH command configuration.  The answer seems to be to pass the options in the protocol layer but that's beyond the scope of this commit."
    },
    {
        "commit": "7de5ce23ad387602125f478ceec2c834703080d5",
        "date": "2020-01-08 18:59:02 -0700",
        "subject": "Add internal remote-type option.",
        "body": "This option was overloaded on the general type option but it makes sense to split this out since the meaning is pretty different.\n\nRename the values to conform to current standards, i.e. pg and repo, now that the Perl code won't care anymore."
    },
    {
        "commit": "7a1871c341c2ae530927bcf018792733530fc417",
        "date": "2020-01-08 09:54:44 -0700",
        "subject": "Fix test log message to match pg-version parameter name.",
        "body": "It was confusing that this part of the log message did not match the parameter name, which made reproducing test failures from CI a little harder."
    },
    {
        "commit": "8e1f78b4c82d3b4f7ecbdb053df1c8fd46bf3c1e",
        "date": "2020-01-07 12:20:51 -0700",
        "subject": "Remove obsolete Perl code missed in f0ef73db."
    },
    {
        "commit": "a84ae6be04fc21c52c04284004836292089fa0e1",
        "date": "2020-01-06 16:16:48 -0700",
        "subject": "Fix comment typos."
    },
    {
        "commit": "61538f932c58c3bb0afad5b6c16cf997604e3606",
        "date": "2020-01-06 15:53:53 -0700",
        "subject": "Parse dates in storageS3InfoList() and storageS3Info().",
        "body": "Previously dates were not being filled by these functions which was fine since dates were not used.\n\nWe plan to use dates for the ls command plus it makes sense for the driver to be complete since it will be used as an example."
    },
    {
        "commit": "d2fb4f977ceba499f134ad363ea3170f0d9ef5b9",
        "date": "2020-01-06 15:24:49 -0700",
        "subject": "Add httpLastModifiedToTime() to parse HTTP last-modified header."
    },
    {
        "commit": "a08298ce1b9ee96a9f84b613848327f7f60eb063",
        "date": "2020-01-06 15:18:52 -0700",
        "subject": "Add basic time management functions.",
        "body": "These are similar to what mktime() and strptime() do but they ignore the local system timezone which saves having to munge the TZ env variable to do time conversions."
    },
    {
        "commit": "fc47907fe32560e8d3086287023d6f727027a0a1",
        "date": "2020-01-03 09:32:52 -0700",
        "subject": "Update LICENSE.txt for 2020."
    },
    {
        "commit": "011bcb48697ddb56fe1396502a36254718f74dfa",
        "date": "2019-12-29 21:22:18 -0700",
        "subject": "Remove command option from Perl db application name.",
        "body": "The command option will be removed from the C code so it needs to be removed here as well.\n\nThis code is now used only for testing so it's not important that it be so precise."
    },
    {
        "commit": "33e328abbf5992caccc15ff42ca2dca14502c983",
        "date": "2019-12-28 18:30:32 -0700",
        "subject": "Remove unused LibC code.",
        "body": "The code was made obsolete by the migration to C."
    },
    {
        "commit": "e72a9dd0d2b6aad58a5d845112631253382e20e2",
        "date": "2019-12-28 13:37:03 -0700",
        "subject": "Add error parameter to cfgCommandId().",
        "body": "This allows commands to be checked for validity without generating an error."
    },
    {
        "commit": "d28837a300d4b585792c049dce25fd73387408b3",
        "date": "2019-12-28 13:31:59 -0700",
        "subject": "Remove obsolete function declaration."
    },
    {
        "commit": "d41eea685a732fa80d99d0af0fc52746e13d1152",
        "date": "2019-12-26 18:08:27 -0700",
        "subject": "Change meaning of TEST_RESULT_STR() macro.",
        "body": "This macro was created before the String object existed so subsequent usage with String always included a lot of strPtr() wrapping.\n\nTEST_RESULT_STR_Z() had already been introduced but a wholesale replacement of TEST_RESULT_STR() was not done since the priority was on the C migration.\n\nUpdate all calls to (old) TEST_RESULT_STR() with one of the following variants: (new) TEST_RESULT_STR(), TEST_RESULT_STR_Z(), TEST_RESULT_Z(), TEST_RESULT_Z_STR()."
    },
    {
        "commit": "02d3918b3233276651fff443b7fcee3f325cf263",
        "date": "2019-12-19 19:37:55 -0500",
        "subject": "Remove duplicate header and extra linefeed."
    },
    {
        "commit": "74c3842595f49b81be341faf56f2343e9a5c60c8",
        "date": "2019-12-19 16:25:46 -0500",
        "subject": "Remove errant tabs and fix spacing."
    },
    {
        "commit": "7dfea6b71728bc4985021ce8eb993c1376344581",
        "date": "2019-12-19 16:20:11 -0500",
        "subject": "Remove errant tab."
    },
    {
        "commit": "dc1e7ca22dbdae2556513468433b0591d7cf5a44",
        "date": "2019-12-19 11:26:38 -0500",
        "subject": "Add pg-user option.",
        "body": "Specifies the database user name when connecting to PostgreSQL.\n\nIf not specified pgBackRest will connect with the local OS user or PGUSER, which was the previous behavior."
    },
    {
        "commit": "9452084dd174925c554273eb2f8b224c89069123",
        "date": "2019-12-17 23:32:39 -0500",
        "subject": "Fix misspellings of libpq."
    },
    {
        "commit": "63a855e2f7108f54100b973e23e4bcf3005a1647",
        "date": "2019-12-17 23:26:52 -0500",
        "subject": "Fix misaligned continuation character."
    },
    {
        "commit": "2f7e139534de54fb19fa46edf7eeb7ecf00d8284",
        "date": "2019-12-17 22:35:30 -0500",
        "subject": "Error if option prefix and index total are not both defined.",
        "body": "They are both required for indexed options."
    },
    {
        "commit": "d780d084b7b4ad0950bd35b905c778c3a47e8860",
        "date": "2019-12-17 21:56:02 -0500",
        "subject": "Add comments about increasing Vagrantfile disk size."
    },
    {
        "commit": "d89d9f1c52b9fc7bf4827d1b367da6e8520a79d2",
        "date": "2019-12-17 21:47:19 -0500",
        "subject": "Skip vagrant disksize option if no plugin.",
        "body": "Previously, `vagrant up` would bail if no `vagrant-disksize` plugin was\ninstalled. This option is just a nice-to-have, so skip it rather than\nbailing."
    },
    {
        "commit": "ac35dcac39699b5ecae5f3d178cb837bac1446dc",
        "date": "2019-12-17 21:28:40 -0500",
        "subject": "Add note about symlink required for contributing documentation to build."
    },
    {
        "commit": "3394a5017091e57b0adc296b43ac00010a223c3d",
        "date": "2019-12-17 21:25:54 -0500",
        "subject": "Remove unused Perl library missed in f0ef73db."
    },
    {
        "commit": "620386f034fd97371c467bda4dc0d90f423bf663",
        "date": "2019-12-17 20:14:45 -0500",
        "subject": "Remove integration tests that are now covered in the unit tests.",
        "body": "Most of these tests are just checking that errors are thrown when required.  These are well covered in various unit tests.\n\nThe \"cannot resume\" tests are also well covered in the backup unit tests.\n\nFinally, config warnings are well covered in the config unit tests.\n\nThere is more to be done here, but this accounts for the low-hanging fruit."
    },
    {
        "commit": "977ec2e307c5487df9ed6fadebd486a92c75f269",
        "date": "2019-12-17 15:23:07 -0500",
        "subject": "Integration test improvements for disk and memory efficiency.",
        "body": "Set log-level-file=off when more that one test will run.  In this case is it impossible to see the logs anyway since they will be automatically cleaned up after the test.  This improves performance pretty dramatically since trace-level logging is expensive.  If a singe integration test is run then log-level-file is trace by default but can be changed with the --log-level-test-file option.\n\nReduce buffer-size to 64k to save memory during testing and allow more processes to run in parallel.\n\nUpdate log replacement rules so that these options can change without affecting expect logs."
    },
    {
        "commit": "ccea30b8d8970acf9c1826c5c988d819aabf2d0f",
        "date": "2019-12-14 10:20:23 -0500",
        "subject": "Increase memory in ramdisk for Travis CI testing.",
        "body": "The co6 tests were occasionally running out of space so bump up the size of the ramdisk a bit to hopefully prevent this.\n\nA longer term solution would be to disable the trace-level file logs when running on Travis CI since they seem to be using most of the space."
    },
    {
        "commit": "6bd280f7bd667305317a7c825d913dac9719c475",
        "date": "2019-12-14 09:53:50 -0500",
        "subject": "Don't warn when stop-auto is enabled on PostgreSQL >= 9.6.",
        "body": "PostgreSQL >= 9.6 uses non-exclusive backup which has implicit stop-auto since the backup will stop when the connection is terminated.\n\nThe warning was made more verbose in 1f2ce45e but this now seems like a bad idea since there are likely users with mixed version environments where stop-auto is enabled globally.  There's no reason to fill their logs with warnings over a harmless option.  If anything we should warn when stop-auto is explicitly set to false but this doesn't seem very important either.\n\nRevert to the prior behavior, which is to warn and reset when stop-auto is enabled on PostgreSQL < 9.3."
    },
    {
        "commit": "03849840b813fdfdc2e00874fa8e3bbe9ac95338",
        "date": "2019-12-13 21:33:13 -0500",
        "subject": "Fix handling of \\ in filenames.",
        "body": "\\ was not being properly escaped when calculating the manifest checksum which prevented the manifest from loading.\n\nUse jsonFromStr() to properly quote and escape \\.\n\nSince instances of \\ in cluster filenames should be rare to nonexistent this does not seem likely to be a serious problem in the field."
    },
    {
        "commit": "f0ef73db7009cd6e08740d270a6ee7565efc9f8c",
        "date": "2019-12-13 17:55:41 -0500",
        "subject": "pgBackRest is now pure C.",
        "body": "Remove embedded Perl from the distributed binary.  This includes code, configure, Makefile, and packages.  The distributed binary is now pure C.\n\nRemove storagePathEnforceSet() from the C Storage object which allowed Perl to write outside of the storage base directory.  Update mock/all and real/all integration tests to use storageLocal() where they were violating this rule.\n\nRemove \"c\" option that allowed the remote to tell if it was being called from C or Perl.\n\nCode to convert options to JSON for passing to Perl (perl/config.c) has been moved to LibC since it is still required for Perl integration tests.\n\nUpdate build and installation instructions in the user guide.\n\nRemove all Perl unit tests.\n\nRemove obsolete Perl code.  In particular this included all the Perl protocol code which required modifications to the Perl storage, manifest, and db objects that are still required for integration testing but only run locally.  Any remaining Perl code is required for testing, documentation, or code generation.\n\nRename perlReq to binReq in define.yaml to indicate that the binary is required for a test.  This had been the actual meaning for quite some time but the key was never renamed."
    },
    {
        "commit": "1f2ce45e6b613edfb628ac40fd2369c9455692ba",
        "date": "2019-12-13 17:14:26 -0500",
        "subject": "The backup command is implemented entirely in C.",
        "body": "For the most part this is a direct migration of the Perl code into C except as noted below.\n\nA backup can now be initiated from a linked directory.  The link will not be stored in the manifest or recreated on restore.  If a link or directory does not already exist in the restore location then a directory will be created.\n\nThe logic for creating backup labels has been improved and it should no longer be possible to get a backup label earlier than the latest backup even with timezone changes or clock skew.  This has never been an issue in the field that we know of, but we found it in testing.\n\nFor online backups all times are fetched from the PostgreSQL primary host (before only copy start was).  This doesn't affect backup integrity but it does prevent clock skew between hosts affecting backup duration reporting.\n\nArchive copy now works as expected when the archive and backup have different compression settings, i.e. when one is compressed and the other is not.  This was a long-standing bug in the Perl code.\n\nResume will now work even if hardlink settings have been changed."
    },
    {
        "commit": "e206093beb43981f11b532f05897c383f93d8f63",
        "date": "2019-12-12 18:52:16 -0500",
        "subject": "Allow end anchor to be excluded in backupRegExp().",
        "body": "This is useful for matching files in the backup history directory which have characters after the backup label."
    },
    {
        "commit": "8acfb6adf410571464c956ad161ad3df227b73a5",
        "date": "2019-12-12 16:43:34 -0500",
        "subject": "Add pgLsnRangeToWalSegmentList() to convert lsn range to wal segments."
    },
    {
        "commit": "81295fd3889ce05829b6443aa29032ccffdfef3e",
        "date": "2019-12-12 16:28:26 -0500",
        "subject": "Move not found error into walSegmentFind().",
        "body": "This error is also needed in backup so move it here to centralize it."
    },
    {
        "commit": "1378d9c58b05f2f45352df155463ab8cd55276a6",
        "date": "2019-12-12 16:21:51 -0500",
        "subject": "Fix bad arithmetic in pgLsnToWalSegment().",
        "body": "/ takes precedence over & but the appropriate parens were not provided.\n\nBy some bad luck the tests worked either way, so add a new test that only works the correct way to prevent a regression."
    },
    {
        "commit": "676be2c77390587bb36c9d88bcf1a54d333ee0f3",
        "date": "2019-12-12 16:11:09 -0500",
        "subject": "Add pgWalPath() to return version-specific WAL path.",
        "body": "Also update the manifest module to use the new function."
    },
    {
        "commit": "94cb9540f1c94746d78ae4efb16246b26daf79a0",
        "date": "2019-12-12 09:05:10 -0500",
        "subject": "Begin v2.21 development."
    },
    {
        "commit": "39fc2b7ad68d97cf5f23757e8a341428935621f4",
        "date": "2019-12-12 08:20:21 -0500",
        "subject": "v2.20: Bug Fixes"
    },
    {
        "commit": "b031dbbcf8fa83ef60cfabc20fbf16046904f9aa",
        "date": "2019-12-11 22:11:04 -0500",
        "subject": "Allow timezones to be explicitly set for testing.",
        "body": "The TZ environment variable was not reliably pushed down to the test processes.\n\nInstead pass TZ via a command line parameter and set explicitly in the test process."
    },
    {
        "commit": "db5175915a0dc09b7591d71886ee8ce3bf5a12c3",
        "date": "2019-12-11 21:51:32 -0500",
        "subject": "Use localtime() to format time_t in cvtTimeToZ().",
        "body": "Using gmtime() produced output skewed by the local timezone.\n\nSince this function is currently only used for debug logging this is not a live bug in the field."
    },
    {
        "commit": "811ecd758d9e2ca12966995ec6cfc1e4ff8c0cfd",
        "date": "2019-12-11 14:57:32 -0500",
        "subject": "Make type in comment more specific."
    },
    {
        "commit": "0194a9867182435c7a181be6466ca2b91f05801d",
        "date": "2019-12-11 14:36:39 -0500",
        "subject": "Fix archive-push/archive-get when PGDATA is symlinked.",
        "body": "Commit 7168e074 tried to use cwd() as PGDATA but this would disagree with the path configured in pgBackRest if PGDATA was symlinked.\n\nIf cwd() does not match the pgBackRest path then chdir() to the path and make sure the next cwd() matches the result from the first call."
    },
    {
        "commit": "8c840c28a65dae3cca581691e88e51839cd64bca",
        "date": "2019-12-11 08:48:46 -0500",
        "subject": "Fix segfault on unexpected EOF in gzip decompression.",
        "body": "If the compressed stream terminated early then the decompression process would get a flush request (NULL input buffer) since the filter was not marked as done.  This could happen on a zero-length or truncated (i.e. invalid) compressed file.\n\nChange the existing assertion to an error to catch this condition in production gracefully."
    },
    {
        "commit": "c933f12f9c39d7c076f84252c081c3430be72e55",
        "date": "2019-12-10 13:28:15 -0500",
        "subject": "Remove obsolete --perl-option option.",
        "body": "This option was used when Perl was executed instead of being embedded.\n\nIt has been obsolete for a long time so remove it."
    },
    {
        "commit": "d0ba8ff58c46c15facb4dba19eab8db83835b07c",
        "date": "2019-12-10 13:16:47 -0500",
        "subject": "Remove test point infrastructure.",
        "body": "82df7e6f and 9856fef5 updated tests that used test points in preparation for the feature not being available in the C code.\n\nSince tests points are no longer used remove the infrastructure.\n\nAlso remove one stray --test option in mock/all that was essentially a noop but no longer works now that the option has been removed."
    },
    {
        "commit": "d7d663c2b93fd6a3bdfb1c6a4bd1feae0cd8cc63",
        "date": "2019-12-10 13:02:36 -0500",
        "subject": "Make buildPutDiffers() work with empty files.",
        "body": "If the file was empty the timestamp was updated.  If the file is empty and there is no content then file should not be saved."
    },
    {
        "commit": "800d2972b00bb381c92cdadead9a1c04141853be",
        "date": "2019-12-09 18:28:20 -0500",
        "subject": "Remove stray uint type.",
        "body": "This was probably copied from an example but some compilers don't like it."
    },
    {
        "commit": "471d54a738887dd5c99afced36420cf6fb5c631b",
        "date": "2019-12-09 17:55:20 -0500",
        "subject": "Add stringz module to define some commonly used strings.",
        "body": "This module will eventually contain various useful zero-terminated string functions.\n\nFor now, using NULL_Z instead of strPtr(NULL_STR) avoids a strict aliasing warning on RHEL 6.  This is likely a compiler issue, but adding these constants seems like a good idea anyway and we are not going to get a fix in a gcc that old."
    },
    {
        "commit": "ca33545630a073579ef763294d897dd06820f5a5",
        "date": "2019-12-09 14:06:32 -0500",
        "subject": "Remove redundant test and move another test."
    },
    {
        "commit": "61ad3a44c9e562a306064770428726a5664056e9",
        "date": "2019-12-09 09:12:34 -0500",
        "subject": "Note that next repo format should use UTC for backup labels."
    },
    {
        "commit": "d3132dae26ad40c2a47db62d4cc5f4502465d7c6",
        "date": "2019-12-08 18:43:47 -0500",
        "subject": "Add functions for building new manifests.",
        "body": "New manifests are built before a backup is performed."
    },
    {
        "commit": "2cfde18755f305008af134ac833aca6989321ca7",
        "date": "2019-12-08 14:19:47 -0500",
        "subject": "Add pgLsnFromStr(), pgLsnToStr(), and pgLsnToWalSegment()."
    },
    {
        "commit": "f517b141fb065efd21878fc774f51b52c014d887",
        "date": "2019-12-08 14:15:23 -0500",
        "subject": "Update pq harness to play nicely with variable LSNs."
    },
    {
        "commit": "d2587250da82a90257534268e2175bfcfd3e15ac",
        "date": "2019-12-07 18:44:06 -0500",
        "subject": "Add backup functions to Db object.",
        "body": "These functions implement the database backup functionality for all supported versions."
    },
    {
        "commit": "8766326da812f6aae00bdbfef4b1382805de8c3e",
        "date": "2019-12-07 17:48:53 -0500",
        "subject": "Add protocolRemoteFree() to shutdown a specific remote.",
        "body": "Sometimes it is useful to shutdown remotes that are no longer needed instead of waiting for them to be shutdown at program exit."
    },
    {
        "commit": "5175d52e9466c339f5a4cd5c7d7e8724c3bbb2e3",
        "date": "2019-12-07 17:42:42 -0500",
        "subject": "Add constant for pg_tblspc path."
    },
    {
        "commit": "78b1e05b7e6f8d09a424a2e8864e317d63c474f3",
        "date": "2019-12-07 17:39:25 -0500",
        "subject": "Remove unused Perl module."
    },
    {
        "commit": "35a262951a1ed74431cdfa92c36ee2c9ae867c1a",
        "date": "2019-12-07 17:33:34 -0500",
        "subject": "Pq test harness usability and error reporting improvements.",
        "body": "Pq script errors are now printed in test output in case they are being masked by a later error.\n\nOnce a script error occurs, the same error will be thrown forever rather than throwing a new error on the next item in the script.\n\nHRNPQ_MACRO_CLOSE() is not required in scripts unless harnessPqScriptStrictSet(true) is called.  Most higher-level tests should not need to run in strict mode.\n\nThe command/check test seems to require strict mode but there's no apparent reason why it should.  This would be a good thing to look into at some point."
    },
    {
        "commit": "d6479ddd0efda9bb442f4bbfe937daa0ab46ac72",
        "date": "2019-12-07 17:15:20 -0500",
        "subject": "Add log replacements to help test non-deterministic log output.",
        "body": "Some log output (e.g. time) is hard to test because the values can change between tests.\n\nAdd expressions to replace substrings in the log with predictable values to simplify testing.\n\nThis is similar to the log replacement facility available for Perl expect log testing."
    },
    {
        "commit": "e4716ee036e8a4417f6dcb8d108c0d7b9e3f2b7d",
        "date": "2019-12-07 17:02:41 -0500",
        "subject": "Improve diff output in tests.",
        "body": "Always compare expected vs actual (in that order) and give a hint in the error message to indicate what should be added and what removed."
    },
    {
        "commit": "8c47ee296a1f311682b46b3f1de98d4eb7dcaf6a",
        "date": "2019-12-07 16:55:50 -0500",
        "subject": "Improve storage harness test callback.",
        "body": "Add ability to omit the root (i.e. dot) path and get real size of compressed files."
    },
    {
        "commit": "1b3770e248f4a5b59ba16f6a4c6cba7cf23de883",
        "date": "2019-12-07 09:48:33 -0500",
        "subject": "Recopy during backup when resumed file is missing or corrupt.",
        "body": "A recopy would occur if the size or checksum was invalid but on error the backup would terminate.\n\nInstead, recopy the resumed file on any error.  If the error is systemic (e.g. network failure) then it should show up again during the recopy."
    },
    {
        "commit": "d3f717c89208ef132e75b634ad2e91efbda25a04",
        "date": "2019-12-07 09:26:51 -0500",
        "subject": "Storage hardlink and symlink features require path feature.",
        "body": "Since there is only one driver that supports (or is likely to support) links (Posix), require the path feature to make logic in the code simpler.\n\nThe checks are added just in case another driver supports links."
    },
    {
        "commit": "e632c605250438a9e06f133b55c88e578ea709cd",
        "date": "2019-12-06 11:48:41 -0500",
        "subject": "Fix backup labels in mock/all resume integration tests.",
        "body": "These were not getting updated to match the directory name when the manifests were copied.\n\nThe Perl code didn't care but the C code expects labels to be set correctly."
    },
    {
        "commit": "5395aa0c92febadbf0c71f93799877cfe7268b6b",
        "date": "2019-12-05 22:34:38 -0500",
        "subject": "Allocate one extra process for backup from standby.",
        "body": "The connection to the primary is process-max + 1 so make space for it."
    },
    {
        "commit": "b2d82bd2484dbe3dee12479efb6e9aceba5aac57",
        "date": "2019-12-04 19:43:26 -0500",
        "subject": "Add functions to get the substring found by regExpMatch().",
        "body": "For now this is only used in testing but there are places where it could be useful in the core code.\n\nEven if that turns out not to be true, it doesn't seem worth implementing a new version in testing just to capture a few values that we already have."
    },
    {
        "commit": "053af2f54db0eaaaca3ac67cbdd68ba1b701048a",
        "date": "2019-12-04 19:31:39 -0500",
        "subject": "Add asserts to ensure hostId > 0.",
        "body": "hostId is 1-based (e.g. pg1-*) so it should always be > 0."
    },
    {
        "commit": "d1f49825b11ba88ac2024734c4c8a1c961f05854",
        "date": "2019-12-02 11:54:45 -0500",
        "subject": "Add missing header."
    },
    {
        "commit": "8dfe0e48e25725978738ecb3fec24e5ce2e9076b",
        "date": "2019-12-02 10:49:25 -0500",
        "subject": "Use more general error code when tablespace linked into PGDATA.",
        "body": "The specific error code was not that useful since we also test the error message which contains details of the link error."
    },
    {
        "commit": "33a63aae503adf8d7f3f4430ee6478b845d38e2c",
        "date": "2019-12-02 07:39:42 -0500",
        "subject": "Add flag to dbGet() to require a standby.",
        "body": "This is needed from backup from standby functionality."
    },
    {
        "commit": "28116918ff3a00b133d74d524df452e29398082d",
        "date": "2019-12-02 07:35:36 -0500",
        "subject": "Error in remote command when stop file exists.",
        "body": "This duplicates the Perl functionality."
    },
    {
        "commit": "fc291b6f28753329afdd7b65b115f90d31569df1",
        "date": "2019-12-01 17:47:47 -0500",
        "subject": "Reduce the scope of mock/all exclusion tests.",
        "body": "Run exclusions only on the tests where they will have an effect to reduce churn in the expect logs when they change."
    },
    {
        "commit": "d15ed338217667f0bd7ffff3eb9f5e24052477fd",
        "date": "2019-12-01 16:32:21 -0500",
        "subject": "Make MCV return false when a boolean tie.",
        "body": "This is to maintain compatibility with the older Perl code that returned the lowest sorted order item in a tie.\n\nFor other datatypes the C code returns the same value, often enough at least to not cause churn in the expect tests."
    },
    {
        "commit": "ab0974cc8ea0cff70a9f680ff8e1dc10b1ba3c48",
        "date": "2019-12-01 16:30:44 -0500",
        "subject": "Add PostgreSQL version where backup from standby is supported."
    },
    {
        "commit": "218698088f0e4d5a978b8f4c8df6b114980889b9",
        "date": "2019-12-01 16:28:33 -0500",
        "subject": "Add PostgreSQL file and path names used for building manifests."
    },
    {
        "commit": "56ee321a9565e7c1e076c58744e0cfc408801e28",
        "date": "2019-12-01 15:49:34 -0500",
        "subject": "Add pgLsnName() and pgXactPath()."
    },
    {
        "commit": "bc83354fb53a1ba8a86366478c5be871775dd04a",
        "date": "2019-11-29 11:29:16 -0500",
        "subject": "Add storage feature flags.",
        "body": "Even though storagePathSync() is a noop when path sync is not supported, it is useful to know in advance if the function will do anything so add the storageFeaturePathSync flag.\n\nThe storageFeatureSymLink and storageFeatureHardLink flags are currently informational only since links are not yet implemented in the storage interface."
    },
    {
        "commit": "0933aeb1ad954f8c7b2ed6d4e160d7e132ada8b7",
        "date": "2019-11-29 10:56:13 -0500",
        "subject": "Remove unused reference to use pgBackRest::Backup::File."
    },
    {
        "commit": "50eb062e0e7a6aac326e411ed28e0c8aa397bf01",
        "date": "2019-11-28 09:34:19 -0500",
        "subject": "Fix reference list when backup.info is reconstructed in expire command.",
        "body": "Adding a manifest to backup.info was migrated to C in 4e4d1f41 but deduplication of the references was missed leading to a reference for every file being added to backup.info.\n\nSince the backup command is still using the Perl version of reconstruct this issue will not express unless 1) there is a backup missing from backup.info and 2) the expire command is run directly instead of running after backup as usual.\n\nThis unlikely combination of events means this is probably not a problem in the field."
    },
    {
        "commit": "686b6f91da4cfdbc8708b0f08ced460c10e4326c",
        "date": "2019-11-28 08:27:21 -0500",
        "subject": "Set archive-check option in manifest correctly when offline.",
        "body": "Archive check does not run when in offline backup mode but the option was set to true in the manifest.  It's harmless since these options are informational only but it could cause confusion when debugging."
    },
    {
        "commit": "5506e5de27b1a61015f6e18d5582ca81f696e30f",
        "date": "2019-11-27 15:09:07 -0500",
        "subject": "Remove obsolete call to perlExec() for stand-alone expire command.",
        "body": "This was missed in ecae5e34."
    },
    {
        "commit": "4683557c54d2f2511fd754ae7c0c5e34ac1e5ba4",
        "date": "2019-11-26 17:22:30 -0500",
        "subject": "Remove unused reference to pgBackRest::Db."
    },
    {
        "commit": "158e439689c8247ba2e53da4bfe65934e391b690",
        "date": "2019-11-26 17:16:45 -0500",
        "subject": "Remove obsolete Perl archive code.",
        "body": "This should have been removed in a1c13a50 but was missed."
    },
    {
        "commit": "82df7e6f3bf53409b3c3a15eff7bbc33c13197f8",
        "date": "2019-11-26 11:32:12 -0500",
        "subject": "Update integration tests in real/all that use test points.",
        "body": "Test points are not supported by the new C code so these will be replaced with unit tests.\n\nThe fact that the tests still pass even when the changes aren't made mid-backup (except application_name) shows how weak they were in the first place.\n\nEven so, this does represent a regression in (soon to be be removed) Perl coverage."
    },
    {
        "commit": "b145c72b5c27ad299ad1fa7dcd84f45fb0797e0f",
        "date": "2019-11-25 08:51:28 -0500",
        "subject": "Update missing manifest warning in BackupInfo.",
        "body": "This brings the Perl message in line with C to reduce expect log churn."
    },
    {
        "commit": "8800f32ad9b6b9b1351afd4280cc8dfe1ada2d92",
        "date": "2019-11-25 08:35:26 -0500",
        "subject": "Remove exclusions once they have been tested in mock/all.",
        "body": "The exclusions no longer have any effect after a restore and just add noise to the expect log."
    },
    {
        "commit": "9856fef5861fbf054007233f78582d3584c03565",
        "date": "2019-11-25 07:48:52 -0500",
        "subject": "Update integration tests in mock/all that use test points.",
        "body": "Test points will not be available in the C code so update these tests as best as possible without using them.\n\nThis represents a loss of coverage for the Perl code (soon to be removed) which will be made up in the C code with unit tests."
    },
    {
        "commit": "3cd45a7411ce67630915c89cf5c69a37265d0e07",
        "date": "2019-11-25 07:45:58 -0500",
        "subject": "Remove start/stop --force integration tests in mock/all.",
        "body": "These tests require test points which are not being implemented in the C code.\n\nThis functionality is fully tested in the command/control unit tests so integration tests are no longer required."
    },
    {
        "commit": "01aefc563dbabc7c7b1b7dbed27716692898597f",
        "date": "2019-11-25 07:37:09 -0500",
        "subject": "Update Perl page checksum expression.",
        "body": "This expression determines which files contain page checksums but it was also including the directory above the relation directories.  In a real PostgreSQL installation this not a problem because these directories don't contain any files.\n\nHowever, our tests place a file in `base` which the Perl code thought should have page checksums while the new C code says no.\n\nUpdate the expression to document the change and avoid churn in the expect logs later."
    },
    {
        "commit": "18e43c5955217838ad55e68e176b83a9187533ec",
        "date": "2019-11-24 09:24:52 -0500",
        "subject": "Fix comment typo."
    },
    {
        "commit": "cace54151f3dc9f686b99923f1dbd1c010ab84f4",
        "date": "2019-11-23 10:32:57 -0500",
        "subject": "Add hostId to protocolLocalGet().",
        "body": "Previously this function was only creating locals that talked to the repository.  Backup will need to be able to talk to multiple PostgreSQL hosts."
    },
    {
        "commit": "ab65ffdfacf47b6d182cbf6461d49a76c0cc8b00",
        "date": "2019-11-23 10:22:11 -0500",
        "subject": "Add protocolStorageType*() to manage protocol storage types.",
        "body": "Abstract the string representation of storage types that are passed over the protocol layer."
    },
    {
        "commit": "a4b9440d354c3cf95f7ca3aa68dc691c10c65e21",
        "date": "2019-11-22 19:25:49 -0500",
        "subject": "Only install specific lcov version when required.",
        "body": "Installing lcov 1.14 everywhere turned out to be a problem just as using 1.13 on Ubuntu 19.04 was.\n\nSince we primarily use Ubuntu 18.04 for coverage testing and reporting, we definitely want to make sure that works.  So, revert to using the default packaged lcov except when specified otherwise in VmTest.pm.\n\nPostgreSQL minor version releases are also included since all containers have been rebuilt."
    },
    {
        "commit": "52a3ba6b6f25443b5ed456969b794f63a809a606",
        "date": "2019-11-22 15:18:56 -0500",
        "subject": "Revert \"Forbid % character in parameters.\"",
        "body": "The issue \"fixed\" in f01aa586 was caused by treating all strings as format strings while logging, which was fixed in 0c05df45.\n\nRevert because there no longer seems a reason for the extra logic, and it was only partially applied, i.e. not to env vars, command-line options, or config options."
    },
    {
        "commit": "381aecae4eeb15c538318e95c3101fa07a6712d4",
        "date": "2019-11-22 14:30:56 -0500",
        "subject": "Fix walPath() when CWD is / and path is relative.",
        "body": "The function would return a // prefix in this case, which works fine but looks odd while debugging."
    },
    {
        "commit": "0c05df458287c77df1188a68bbd74e145ed0f059",
        "date": "2019-11-22 13:33:26 -0500",
        "subject": "Add _FMT() logging macro variants.",
        "body": "Using the same macros for formatted and unformatted logging had several disadvantages.\n\nFirst, the compiler was unable to verify the format string against the parameters.\n\nSecond, legitimate % characters in messages were being interpreted as format characters with garbage output ensuing.\n\nAdd _FMT() variants and update all call sites to use the correct variant."
    },
    {
        "commit": "99edcca55b3b8b1d144bdeb32c4d98c8ee13bf34",
        "date": "2019-11-22 09:18:24 -0500",
        "subject": "Add missing linefeeds."
    },
    {
        "commit": "29ab06cf133b6a3d18d7bc39507f92a45927b2e8",
        "date": "2019-11-21 17:30:18 -0500",
        "subject": "Add missing static keyword."
    },
    {
        "commit": "f01aa5861d341a19d85ddf3d7307c250994fecd4",
        "date": "2019-11-21 17:28:03 -0500",
        "subject": "Forbid % character in parameters.",
        "body": "This character causes problems in C and in the shell if we try to output it in an error message.\n\nForbid it completely and spell it out in error messages to avoid strange effects.\n\nThere is likely a better way deal with the issue but this will do for now."
    },
    {
        "commit": "6be9c7b63a61464d60d15133662eb44776401b1d",
        "date": "2019-11-21 17:20:42 -0500",
        "subject": "Don't log secrets in cipherBlock module.",
        "body": "In practice there are lots of ways secrets can be leaked (e.g. info load, protocol) but at least remove this instance."
    },
    {
        "commit": "c524ec4f95462bfbc1484e139d754280ec05e94c",
        "date": "2019-11-21 16:06:27 -0500",
        "subject": "Remove obsolete integration tests from mock/all.",
        "body": "The protocol timeout tests have been superceded by unit tests.\n\nThe TEST_BACKUP_RESUME test point was incorrectly included into a number of tests, probably a copy pasto.  It didn't hurt anything but it did add 200ms to each test where it appeared.\n\nCatalog and control version tests were redundant.  The database version and system id tests covered the important code paths and the C code gets these values from a lookup table.\n\nFinally, fix an incomplete update to the backup.info file while munging for tests."
    },
    {
        "commit": "53cd530bbf3921c9500963d12393344425574d08",
        "date": "2019-11-21 12:09:24 -0500",
        "subject": "Safely initialize manifest object.",
        "body": "Using a designated initializer is safer than zeroing the struct.  It is also better for debugging because Valgrind should be able to detect access to areas that are not initialized due to alignment."
    },
    {
        "commit": "270f9496e432109b243e8db5d497805f72c56d91",
        "date": "2019-11-21 12:08:32 -0500",
        "subject": "Add manifestMove()."
    },
    {
        "commit": "c5a6631d2791ca5ae69a6178fac758b6c96f9781",
        "date": "2019-11-21 11:44:40 -0500",
        "subject": "Rearrange manifest module.",
        "body": "Put functions with related functions, move getters above the helper functions, and rename manifestPgPath() to manifestPathPg()."
    },
    {
        "commit": "9f71a019c815af58bdd10ca2ceaaf6f1506fb560",
        "date": "2019-11-21 10:55:03 -0500",
        "subject": "Allow storageInfo() to operate outside the base storage path.",
        "body": "It is occasionally useful to get information about a file outside of the base storage path.  storageLocal() can be used in some cases but when the storage is remote is doesn't seem worth creating a separate storage object for adhoc info requests.\n\nstorageInfo() is a read-only operation so this seems pretty safe.  The noPathEnforce parameter will make auditing exceptions easy."
    },
    {
        "commit": "d3b1897625c5b200724fb087cedd975fce07672f",
        "date": "2019-11-21 10:34:32 -0500",
        "subject": "Allow adhoc enforcement in storagePath().",
        "body": "The ability to disable enforcement (i.e., the requested absolute path is within the storage path) globally will be removed after the Perl migration.\n\nThe feature will still be needed occasionally so allow it in an adhoc fashion."
    },
    {
        "commit": "e1dad720a126e2145718ccc78614727fa67cd619",
        "date": "2019-11-21 10:21:35 -0500",
        "subject": "Rename storagePath() to storageP() in places where it was missed.",
        "body": "Correct this since it will be enforced in a subsequent patch."
    },
    {
        "commit": "cef9f0f37f33fe46ffcb229535a82479700b8de2",
        "date": "2019-11-21 09:40:15 -0500",
        "subject": "Process . in strPathAbsolute().",
        "body": "A . in a link will always lead to an error since the destination will be inside PGDATA.  However, it is accepted symlink syntax so it's better to resolve it and get the correct error message.\n\nAlso, we may have other uses for this function in the future."
    },
    {
        "commit": "a6fc0bf2ca778844448885192f11d17bf933b551",
        "date": "2019-11-21 08:15:37 -0500",
        "subject": "Add contributor."
    },
    {
        "commit": "3d2c0b0f3bcd4fbae0409a374f13d1aebb3bba81",
        "date": "2019-11-20 14:24:58 -0500",
        "subject": "Fix inverted page checksum load/save.",
        "body": "This was not caught before because the on-disk format was correct even though the representation in memory was inverted."
    },
    {
        "commit": "63c4c148361c75ec53d2d6b53a3ec69389b925c3",
        "date": "2019-11-19 20:52:01 -0500",
        "subject": "Fix lcov build in Vagrantfile.",
        "body": "-q was being instead of -s for silent mode which caused the build to fail."
    },
    {
        "commit": "5f034714453f28a04d8e48828e8ee53a61401c4e",
        "date": "2019-11-19 15:56:13 -0500",
        "subject": "Remove --force option from stanza-create documentation.",
        "body": "This should have been removed when the support for the option was removed in c7333190.\n\nThe option cannot be removed entirely because we don't want to error in the case where --force was specified but the stanza is valid."
    },
    {
        "commit": "c5ee56a724fe6c49b7e3496090ff1bf6d73e33f8",
        "date": "2019-11-19 10:34:14 -0500",
        "subject": "Markdown update missed in 1db9e3b1."
    },
    {
        "commit": "20162ed3feec8d3de5de8e2cca7bb065a47bcc67",
        "date": "2019-11-19 10:32:18 -0500",
        "subject": "Fix typo."
    },
    {
        "commit": "74317f0ab6024d6c3a2f9635677f26489786e166",
        "date": "2019-11-17 17:35:03 -0500",
        "subject": "Use variable parameter macros to make the storage interface tidier.",
        "body": "Many functions don't take optional parameters, so tacking the struct onto the end was pretty burdensome.\n\nAdd macros to get the interface under a variety of circumstances to make this practical."
    },
    {
        "commit": "1db9e3b144d886ec4159176312345d154b7178b8",
        "date": "2019-11-17 15:10:40 -0500",
        "subject": "Remove *MP() macros variants.",
        "body": "Adding a dummy column which is always set by the P() macro allows a single macro to be used for parameters or no parameters without violating C's prohibition on the {} initializer.\n\n-Wmissing-field-initializers remains disabled because it still gives wildly different results between versions of gcc."
    },
    {
        "commit": "5c65d88f6254176c257f0bf58ca5c9f59bb99177",
        "date": "2019-11-17 14:17:03 -0500",
        "subject": "Use structs to pass optional parameters to storage drivers.",
        "body": "New optional parameters can be added without breaking the interface and this reduces noise in the function prototypes."
    },
    {
        "commit": "09e129886e10a036e75493d55625f01c34e15d85",
        "date": "2019-11-16 17:47:42 -0500",
        "subject": "Add storageInfoList() support to remote storage driver."
    },
    {
        "commit": "26e1da82e7970ac03b8300da5f55ed7da1c2ab96",
        "date": "2019-11-16 17:32:49 -0500",
        "subject": "Allow zero-length substrings to be extracted from the end of a string.",
        "body": "The previous assert was a bit overzealous and did not allow this case.  It's not very common but still occasionally useful."
    },
    {
        "commit": "8a3de1e05a427bf40b7742ac476c01ef219f6b46",
        "date": "2019-11-16 17:30:08 -0500",
        "subject": "Add storageInfo() support to remote storage driver."
    },
    {
        "commit": "8d6a8c3bf0401705578d05902f8e7f871f3ab266",
        "date": "2019-11-16 17:12:16 -0500",
        "subject": "Store base path for remote storage locally.",
        "body": "It wasn't practical for the main process to be ignorant of the remote path, and in any case knowing the path makes debugging easier.\n\nPull the remote path when connecting and pass the result of local storagePath() to the remote when making calls."
    },
    {
        "commit": "6827a13f3a4b1943769601acf34676bd1f689b4b",
        "date": "2019-11-16 17:05:34 -0500",
        "subject": "Add facility for reading and writing adhoc protocol output.",
        "body": "Pushing output through a JSON blob is not practical if the output is extremely large, e.g. a backup manifest with 100K+ files.\n\nAdd read/write routines so that output can be returned in chunks but errors will still be detected."
    },
    {
        "commit": "90e19d99bab6b448484865cb6b46fb786352009c",
        "date": "2019-11-16 09:38:42 -0500",
        "subject": "Add mock module to CentOS6/7 Travis CI testing.",
        "body": "This was dropped at some point but is important for integration coverage."
    },
    {
        "commit": "c8db11e65bed37ec18d83b527c895b8b86c9f11b",
        "date": "2019-11-15 17:50:12 -0500",
        "subject": "Add user-id/group-id to hrnReplaceKey()."
    },
    {
        "commit": "53a2d04ab0e0c6d3ef75afcef1663492d9db98e7",
        "date": "2019-11-15 17:48:25 -0500",
        "subject": "Allow \"null\" in jsonToStr()."
    },
    {
        "commit": "64ddc163c95b6bc87a7589462b1b16ca70cb08bc",
        "date": "2019-11-15 10:50:17 -0500",
        "subject": "Allow cipherPassSub() to be set in Info without the constructor.",
        "body": "This value is not always known when the object is created so allow it to be set later."
    },
    {
        "commit": "48e8942e86b1471568116dc7fe604878ca9afd70",
        "date": "2019-11-15 08:53:15 -0500",
        "subject": "Allow trailing / for relative paths in strPathAbsolute().",
        "body": "The trailing / does nothing but is nevertheless valid syntax."
    },
    {
        "commit": "83ab272171887092df85704e27ddfec22c9f335f",
        "date": "2019-11-14 16:50:58 -0500",
        "subject": "Update varNew*() calls to Variant constant macros.",
        "body": "The constants created by the macros are faster and use less memory."
    },
    {
        "commit": "3b879c2cb3cfdbcd03dad1d6cc898052f8d8863d",
        "date": "2019-11-14 16:48:41 -0500",
        "subject": "Filter logged command options based on the command definition.",
        "body": "Previously, options were being filtered based on what was currently valid.  For chained commands (e.g. backup then expire) some options may be valid for the first command but not the second.\n\nFilter based on the command definition rather than what is currently valid to avoid logging options that are not valid for subsequent commands.  This reduces the number of options logged and will hopefully help avoid confusion and expect log churn."
    },
    {
        "commit": "c5b76d213bc24d703e7b973df171a2b01595dabc",
        "date": "2019-11-12 17:05:09 -0500",
        "subject": "Modify InfoBackupData struct to use time_t for backup start/stop times.",
        "body": "The uint64_t types worked but were not consistent with how timestamps are handled in other parts of the code."
    },
    {
        "commit": "6f65dde8d39436a31f90030e9b3cef5cf10d04e3",
        "date": "2019-11-12 15:56:28 -0500",
        "subject": "Begin v2.20 development."
    },
    {
        "commit": "2d10293d041cbbc72e4a2bac32401f6f384ecb1a",
        "date": "2019-11-12 15:51:28 -0500",
        "subject": "v2.19: C Migrations and Bug Fixes"
    },
    {
        "commit": "a44c5d0315e49c42eb908a4ed0605bee0c509f6d",
        "date": "2019-11-12 13:12:07 -0500",
        "subject": "Add Strings for STORAGE_REPO_ARCHIVE and STORAGE_REPO_BACKUP.",
        "body": "These constants are used often enough that they deserve to have String constants rather than repeatedly calling STRDEF()."
    },
    {
        "commit": "10c8eeaf6c0413da265047aeb02a047209ef9d69",
        "date": "2019-11-08 18:58:45 -0500",
        "subject": "Fix handling of repeated HTTP headers.",
        "body": "When HTTP headers are repeated they should be considered equivalent to a single comma-separated header rather than generating an error, which was the prior behavior."
    },
    {
        "commit": "43171786336733d8e1efe672b801236fd3e2d829",
        "date": "2019-11-08 17:56:34 -0500",
        "subject": "Update MinIO to newest release.",
        "body": "We had some problems with newer versions so had held off on updating.  Those problems appear to have been resolved.\n\nIn addition, the --compat flag is no longer required.  Prior versions of MinIO required all parts of a multi-part upload (except the last) to be of equal size.  The --compat flag was introduced to restore the default S3 behavior.  Now --compat is only required when ETag is being used for MD5 verification, which we don't do."
    },
    {
        "commit": "edcc7306a39852ddff507d384555230001442bf4",
        "date": "2019-11-08 09:46:00 -0500",
        "subject": "Add TIME parameter debug type.",
        "body": "Previously we were using int64_t to debug time_t but this may not be right depending on how the compiler represents time_t, e.g. it could be a float.\n\nSince a mismatch would have caused a compiler error we are not worried that this has actually happened, and anyway the worst case is that the debug log would be wonky.\n\nThe primary benefit, aside from correctness, is that it makes choosing a parameter debug type for time_t obvious."
    },
    {
        "commit": "eca00e0be00bcd692b10de1b89a700f6525d51a7",
        "date": "2019-11-07 13:11:01 -0500",
        "subject": "Add building a development environment to contributing documentation.",
        "body": "This documentation shows how to build a development environment on Ubuntu 19.04 and should work for other Debian-based distros.\n\nNote that this document is not included in automated testing due to some unresolved issues with Docker in Docker on Travis CI.  We'll address this in the future when we add contributing documentation to the website."
    },
    {
        "commit": "8b682b75d2ade2e52c75b417fad2eb61150616d1",
        "date": "2019-11-02 10:35:48 +0100",
        "subject": "Allow mock integration tests for all VM types.",
        "body": "Previously the mock integration tests would be skipped for VMs other than the standard four used in CI.  Now VMs outside the standard four will run the same tests as VM4 (currently U18)."
    },
    {
        "commit": "b3e5d88304860fbcb566059d08cbf85e2c3cd95a",
        "date": "2019-11-02 09:59:39 +0100",
        "subject": "Add markdown renderer for execute-list block."
    },
    {
        "commit": "7168e0744018d7d27668d59bfe9b6deafe923efa",
        "date": "2019-10-30 14:55:25 +0100",
        "subject": "Use getcwd() to construct path when WAL path is relative.",
        "body": "Using pg1-path, as we were doing previously, could lead to WAL being copied to/from unexpected places.  PostgreSQL sets the current working directory to PGDATA so we can use that to resolve relative paths."
    },
    {
        "commit": "e06db21e35f701b62c625b9f25436459b8fd5c26",
        "date": "2019-10-17 14:00:18 +0200",
        "subject": "Error when specified vm is invalid."
    },
    {
        "commit": "a52faf83a502427a7079ec2bae0593b318c2594c",
        "date": "2019-10-17 11:56:45 +0200",
        "subject": "Disable code generation on dry-run."
    },
    {
        "commit": "fa6a54bb4503efdc8e02a98089a935b6d52a3797",
        "date": "2019-10-16 17:05:24 +0200",
        "subject": "Update last tests that required sudo.",
        "body": "All tests should now run in a sudo-less environment."
    },
    {
        "commit": "48bd9e22f124163aa61574027476af8b3737dc39",
        "date": "2019-10-16 15:48:33 +0200",
        "subject": "C test harness refactor.",
        "body": "Consolidate setting configuration into hrnInit() and rename other functions for consistency.\n\nSplit out internal functions into a new header."
    },
    {
        "commit": "b4aeb217e665a166cb75577e07f80b01bc0345d1",
        "date": "2019-10-15 17:19:42 +0200",
        "subject": "Allow parameters to be passed to travis.pl.",
        "body": "This makes configuring tests easier.\n\nAlso add a parameter for tests that require sudo.  This should be retired at some point but some tests still require it."
    },
    {
        "commit": "f3b2189659a7f0e8e660c1be42175f0ff82cffb0",
        "date": "2019-10-15 13:27:03 +0200",
        "subject": "Remove package build sudo into the container.",
        "body": "By running this in the container we no longer need sudo on the host system for package builds."
    },
    {
        "commit": "67dde73727d2b30ce3f329054398a1f516a65899",
        "date": "2019-10-14 11:51:14 +0200",
        "subject": "Run tests in tmpfs.",
        "body": "This will likely improve performance, but it also makes the filesystem consistent between platforms.\n\nA number of tests were failing on shiftfs, which was the default for arm64 on Travis."
    },
    {
        "commit": "b1dc5a6d269b858960061e59f3885303d2417051",
        "date": "2019-10-13 14:02:52 -0400",
        "subject": "Add disk/mem info for Travis.",
        "body": "This is helpful for determining the virtual machine resources."
    },
    {
        "commit": "64c6102a1536ba94f4957fe950038f31525748b5",
        "date": "2019-10-12 14:47:01 -0400",
        "subject": "Update packages required for Travis-CI builds.",
        "body": "These packages are expected on the arm64 build even though we are using the same os image as amd64.  It appears the arm64 image is slimmer."
    },
    {
        "commit": "35eef2b8676115036b9d68b14223629dd1e1b773",
        "date": "2019-10-12 14:16:22 -0400",
        "subject": "Use a lower user id for posix storage tests.",
        "body": "arm64 was not happy with the old user id, so use something smaller."
    },
    {
        "commit": "827e95944a2f13301fa14af5a8f11324e17a1cd9",
        "date": "2019-10-12 13:52:45 -0400",
        "subject": "Use < 0 and > 0 for strCmp() tests.",
        "body": "Using -1 and 1 was a bit sloppy since the spec only guarantees that the values will be < 0 and > 0.\n\nFound on arm64 where the values were -64 and 64."
    },
    {
        "commit": "a2fa1d04b0cbd6dbedaa2447273371c20bd46e56",
        "date": "2019-10-12 11:26:13 -0400",
        "subject": "Update container images to PostgreSQL 12 GA."
    },
    {
        "commit": "397a41e0f9f82987952912b8127a5e6929e29752",
        "date": "2019-10-12 11:24:55 -0400",
        "subject": "Add Ubuntu 19.04 container definition."
    },
    {
        "commit": "93656db186e6da286bd704dc65235fcc209bb19d",
        "date": "2019-10-12 11:24:21 -0400",
        "subject": "Update lcov to 1.14.",
        "body": "1.13 is not compatible with gcc 8 which is what ships with newer distributions.  Build from source to get a more recent version.\n\n1.13 is not compatible with gcc 9 so we'll need to address that at a later date."
    },
    {
        "commit": "11c7c8fabb1e3eb9dadce2231fbb9cb3d76d553f",
        "date": "2019-10-12 09:45:18 -0400",
        "subject": "Remove pgbackrest test user.",
        "body": "This user was created before we tested in containers to ensure isolation between the pg and repo hosts which were then just directories.  The downside is that this resulted in a lot of sudos to set the pgbackrest user and to remove files which did not belong to the main test user.\n\nContainers provide isolation without needing separate users so we can now safely remove the pgbackrest user.  This allows us to remove most sudos, except where they are explicitly needed in tests.\n\nWhile we're at it, remove the code that installed the Perl C library (which also required sudo) and simply add the build path to @INC instead."
    },
    {
        "commit": "6f0e7f00af3e83d071713a671a6f155cd1fa3b88",
        "date": "2019-10-12 09:26:19 -0400",
        "subject": "Fix recovery test failing in PostgreSQL 12.0.",
        "body": "This test was not creating recovery.signal when testing with --type=preserve.  The preserve recovery type only keeps existing files and does not create any.\n\nRC1 was just ignoring recovery.signal and going right into recovery.  Weirdly, 12.0 used restore_command to do crash recovery which made the problem harder to diagnose, but this has now been fixed in PostgreSQL and should be released in 12.1."
    },
    {
        "commit": "59a4a0c1b1726812126a13e57bee29689b0a8fdc",
        "date": "2019-10-11 13:14:47 -0400",
        "subject": "Add a warning about jq rounding numbers to the documentation."
    },
    {
        "commit": "db1dc4f275667903f560c140c2c61cce7f9b4020",
        "date": "2019-10-11 13:03:52 -0400",
        "subject": "Remove pretty-printing from jsonFromKv() and jsonFromVar().",
        "body": "Now that pretty-printing has been removed from the info command it no longer has a purpose, so remove it."
    },
    {
        "commit": "d90b2724f883686afdae386c1350abfdcfb0d5fa",
        "date": "2019-10-11 12:56:03 -0400",
        "subject": "JSON output from the info command is no longer pretty-printed.",
        "body": "Monitoring systems can more easily ingest the JSON without linefeeds.\n\nExternal tools such as jq can be used to pretty-print if desired."
    },
    {
        "commit": "29725805668656a920283401ef144a98cee2c5f9",
        "date": "2019-10-11 12:38:03 -0400",
        "subject": "Remove info expect tests from mock/all and mock/stanza.",
        "body": "These tests are redundant now that we have full coverage in the unit tests are are not worth maintaining anymore."
    },
    {
        "commit": "e4408c7dd390b13bb022b29e8f0b151fa0526362",
        "date": "2019-10-11 12:28:47 -0400",
        "subject": "Refactor --pre option in documentation.",
        "body": "Mark all pre commands as skip so they won't be run again after the container is built.\n\nEnsure that pre commands added to the container are run as the container user if they are not intended to run as root."
    },
    {
        "commit": "642ce003c8e8f59ec67d3bda4c18decb4aa21ae2",
        "date": "2019-10-11 11:32:51 -0400",
        "subject": "Don't autogenerate embedded libc code by default.",
        "body": "This is only needed when new code is added to the Perl C library, which is becoming rare as the migration progresses.\n\nAlso, the code will vary slightly based on the Perl version used for generation so for normal users it is just noise."
    },
    {
        "commit": "bcd3e4953aa1c8e8ccfadd141f38473b2ecbaff6",
        "date": "2019-10-10 22:10:20 -0400",
        "subject": "Make perl/exec test container required.",
        "body": "This test fails in some cases when --vm=none but it's not worth investigating since this code will be going away soon."
    },
    {
        "commit": "e3d87ebace36984728ae571a77ca1e11ae383d5b",
        "date": "2019-10-10 19:43:42 -0400",
        "subject": "Fix mismatched timezone in expect test.",
        "body": "Also run the --vm-none tests in a non-UTC timezone to prevent regressions."
    },
    {
        "commit": "6db4e59a6631eb47758fd0dff772e2ca086e924b",
        "date": "2019-10-10 16:13:43 -0400",
        "subject": "Allow tests that use ports to run in parallel.",
        "body": "Set the test index in the C unit test code so it can assign port numbers that won't conflict between tests."
    },
    {
        "commit": "13fcbb24e940084710acc13627515522215369dc",
        "date": "2019-10-10 15:09:11 -0400",
        "subject": "Fix container test path being used when --vm=none."
    },
    {
        "commit": "e732720d855cffa0e4bb80997529254323fd7767",
        "date": "2019-10-10 11:28:37 -0400",
        "subject": "Disable docker service for --vm=none test.",
        "body": "Starting this service wastes time and this will help catch any regressions where containers are being built when they should not be."
    },
    {
        "commit": "9a3ba649e111f3529bb6fe09238d9fcb81454487",
        "date": "2019-10-10 11:25:59 -0400",
        "subject": "Remove code to generate .travis.yml.",
        "body": "Most of the logic has been moved to test/travis.pl so there wasn't much purpose to this code anymore."
    },
    {
        "commit": "696e6a7c444ba0ec3a28f8762b6a7266751faa0f",
        "date": "2019-10-10 11:21:09 -0400",
        "subject": "Don't require sudo to run tests with --vm=none.",
        "body": "Run these tests without sudo privileges on Travis to prevent regressions."
    },
    {
        "commit": "50d1d0a4e8f232842a27c4998cb6af3f1d906bf3",
        "date": "2019-10-10 09:28:50 -0400",
        "subject": "Move release note to correct section."
    },
    {
        "commit": "47e0ba2502e5c3e8eb088ffcbd774144741b599b",
        "date": "2019-10-10 09:27:46 -0400",
        "subject": "Fix remote timeout in delta restore.",
        "body": "When performing a delta restore on a largely unchanged cluster the remote could timeout if no files were fetched from the repository within protocol-timeout.\n\nAdd keep-alives to prevent remote timeout."
    },
    {
        "commit": "82baf1e521e2a1ed7b27403478aa4a1dc4a6afcc",
        "date": "2019-10-10 08:33:40 -0400",
        "subject": "Fix typo."
    },
    {
        "commit": "7f369006b5c812d0d3e05f4735d03623c3873b45",
        "date": "2019-10-09 15:03:03 -0400",
        "subject": "Add gcc 9 support.",
        "body": "A number of tests have been updated and Fedora 30 has been added to the test suite so the unit tests can run on gcc 9.\n\nStop running unit tests on co6/7 since we appear to have ample unit test coverage."
    },
    {
        "commit": "528f4c4347d89a0c05b0a9521e8ef91432616b0c",
        "date": "2019-10-09 14:38:24 -0400",
        "subject": "Remove dependency on aws cli for testing.",
        "body": "This tool was only being used it a few places but was a pretty large dependency.\n\nRework the forceStorageMove() code using our storage layer and replace one aws cli cp with a storage put.\n\nAlso, remove the Dockerfile that was once used to build the Scality S3 test container."
    },
    {
        "commit": "ac870b42de5a51436a4a08c6ad405ac4f1dd0763",
        "date": "2019-10-09 08:43:30 -0400",
        "subject": "Refactor error logic to make sure Db object gets freed immediately.",
        "body": "Because db can be reset to NULL on an error in the try block we need nested try blocks to ensure that db is non-NULL and can be freed on an error after being created.\n\nThis is not a production issue because the db will be freed when the temp mem context is freed, but it does affect reproducibility in the tests and is a bit tidier."
    },
    {
        "commit": "61c4f64895497da4cbe1e9225f274d255dd5133e",
        "date": "2019-10-08 18:56:55 -0400",
        "subject": "Be smarter about which packages are loaded for testing.",
        "body": "Now that our tests are more diversified it makes sense to load only the packages that are needed for each test.\n\nMove the package loads from .travis.yaml to test/travis.pl where we have more control over what is loaded."
    },
    {
        "commit": "a1c13a50dd0886076a1f32e58901eec271d9ec9a",
        "date": "2019-10-08 18:04:09 -0400",
        "subject": "The check command is implemented entirely in C.",
        "body": "Note that building the manifest on each host has been temporarily removed.\n\nThis feature will likely be brought back as a non-default option (after the manifest code has been fully migrated to C) since it can be fairly expensive."
    },
    {
        "commit": "ecae5e34e5063838bb55d55b1752c6b2eaaaa75b",
        "date": "2019-10-08 17:30:33 -0400",
        "subject": "Update expire command to use C backup.info reconstruct.",
        "body": "This was still being done in Perl until the C Manifest object was available."
    },
    {
        "commit": "4e4d1f414a153232079f2e2e9ce203ffc5a2362c",
        "date": "2019-10-08 16:04:27 -0400",
        "subject": "Add infoBackupLoadFileReconstruct() to InfoBackup object.",
        "body": "Check the backup.info file against the backup path.  Add any backups that are missing and remove any backups that no longer exist.\n\nIt's important to run this before backup or expire to be sure we are using the most up-to-date list of backups."
    },
    {
        "commit": "b2825b82c7b8cf140969dd4e9fd04552e921bbfc",
        "date": "2019-10-08 15:47:47 -0400",
        "subject": "Add missing header file."
    },
    {
        "commit": "6d8d0eeba71fa7cd00af6e40c0adf74638a371bd",
        "date": "2019-10-08 15:37:08 -0400",
        "subject": "Add pgBackRest version to Info and Manifest objects.",
        "body": "This was not being exposed previously because it is primarily informational, but now it is needed to reconstruct the backup.info file."
    },
    {
        "commit": "38b72eded4b0f295ed1f30f849f0a99f69e396d2",
        "date": "2019-10-08 15:27:17 -0400",
        "subject": "Document how to contribute to pgBackRest.",
        "body": "There's a lot more to be done here, but this is a good start."
    },
    {
        "commit": "a4152a0ea1dc5c28515aedf9690cab22765076cb",
        "date": "2019-10-08 12:29:42 -0400",
        "subject": "Update release instructions with a reminder to install latex.",
        "body": "Latex is no longer installed by default in the Vagrantfile."
    },
    {
        "commit": "45881c74aeff4bb25559ec0254fa7fc1960d9cab",
        "date": "2019-10-08 12:06:30 -0400",
        "subject": "Allow most unit tests to run outside of a container.",
        "body": "Three major changes were required to get this working:\n\n1) Provide the path to pgbackrest in the build directory when running outside a container.  Tests in a container will continue to install and run against /usr/bin/pgbackrest.\n\n1) Set a per-test lock path so tests don't conflict on the default /tmp/pgbackrest path.  Also set a per-test log-path while we are at it.\n\n2) Use localhost instead of a custom host for TLS test connections.  Tests in containers will continue to update /etc/hosts and use the custom host.\n\nAdd infrastructure and update harnessCfgLoad*() to get the correct exe and paths loaded for testing.\n\nSince new tests are required to verify that running outside a container works, also rework the tests in Travis CI to provide coverage within a reasonable amount of time.  Mainly, break up to doc tests by VM and run an abbreviated unit test suite on co6 and co7."
    },
    {
        "commit": "77b0c6c993a0e6ff45a6a99f343c3709a016d152",
        "date": "2019-10-08 10:35:47 -0400",
        "subject": "Add missing spaces."
    },
    {
        "commit": "5394893e33a844991a913e3b3c8874b435ac88d1",
        "date": "2019-10-03 11:14:22 -0400",
        "subject": "Remove pgPath parameter from pgControlFromFile().",
        "body": "In practice this function is always used with storagePg*() so pgPath is known."
    },
    {
        "commit": "887ec97e0743f758a0a2d2222cd1553b91f0908d",
        "date": "2019-10-03 06:58:52 -0400",
        "subject": "Document maximum version for auto-stop option."
    },
    {
        "commit": "008ec6b05c631adf08cba312d6bab972f02881ef",
        "date": "2019-10-01 17:04:26 -0400",
        "subject": "Begin v2.19 development."
    },
    {
        "commit": "4629237d6a308a250cd52fff49693cd0a1069253",
        "date": "2019-10-01 16:02:07 -0400",
        "subject": "v2.18: PostgreSQL 12 Support"
    },
    {
        "commit": "29e132f5e928298e9be135d76674f2016b122029",
        "date": "2019-10-01 13:20:43 -0400",
        "subject": "PostgreSQL 12 support.",
        "body": "Recovery settings are now written into postgresql.auto.conf instead of recovery.conf.  Existing recovery_target* settings will be commented out to help avoid conflicts.\n\nA comment is added before recovery settings to identify them as written by pgBackRest since it is unclear how, in general, old settings will be removed.\n\nrecovery.signal and standby.signal are automatically created based on the recovery settings."
    },
    {
        "commit": "6be7e6fde54f2dc3edbed802efc3f5cb1e050fd2",
        "date": "2019-10-01 10:25:08 -0400",
        "subject": "Fix misplaced String declarations."
    },
    {
        "commit": "309ae66e2fbd128b54f0859b231c14f6ab1518c4",
        "date": "2019-10-01 08:47:56 -0400",
        "subject": "Remove unneeded static declarations and use sizeof() where appropriate."
    },
    {
        "commit": "f96c54c4ba0e526cda4cf9bed5cc1231b1d819b5",
        "date": "2019-09-30 12:39:38 -0400",
        "subject": "Add info command set option for detailed text output.",
        "body": "The additional details include databases that can be used for selective restore and a list of tablespaces and symlinks with their default destinations.\n\nThis information is not included in the JSON output because it requires reading the manifest which is too IO intensive to do for all manifests.  We plan to include this information for JSON in a future release."
    },
    {
        "commit": "33ec5a3aacdfe0dd258463c0cbcd43f0d155152e",
        "date": "2019-09-29 09:05:55 -0400",
        "subject": "Sort lists where it might help performance.",
        "body": "Most of these lists should be quite small with the exception of the list in get.c, but it doesn't cost much to sort them and may help in corner cases we have not thought of."
    },
    {
        "commit": "a58635ac0285fbb3178329bdc222221fe7160380",
        "date": "2019-09-28 14:24:27 -0400",
        "subject": "Move C performance tests out of unit tests.",
        "body": "Performance tests were being done in unit tests until there was a better place to put them.\n\nNow there is, so move them there."
    },
    {
        "commit": "f1ba428fb037eac7b6c6ea5b9f617d1ad4579026",
        "date": "2019-09-28 14:02:12 -0400",
        "subject": "Add performance test capability in C with scaling.",
        "body": "Scaling allows the starting values to be increased from the command-line without code changes.\n\nAlso suppress valgrind and assertions when running performance testing.  Optimization is left at -O0 because we should not be depending on compiler optimizations to make our code performant, and it makes profiling more informative."
    },
    {
        "commit": "004ff99a2d918fa3a5079ce9d7ff2f5b120176e3",
        "date": "2019-09-28 13:17:21 -0400",
        "subject": "Identify Perl performance test by appending -perl.",
        "body": "This is intended to differentiate the upcoming C performance tests from the Perl performance tests that will eventually be migrated."
    },
    {
        "commit": "cb62bebadf62613b770f79cd4fd43e20ec7db10c",
        "date": "2019-09-28 10:08:20 -0400",
        "subject": "Use bsearch() on sorted lists rather than an iterative method.",
        "body": "bsearch() is far more efficient than an iterative approach except in the most trivial cases.\n\nFor now insert will reset the sort order to none and the list will need to be resorted before bsearch() can be used.  This is necessary because item pointers are not stable after a sort, i.e. they can move around.  Until lists are stable it's not a good idea to surprise the caller by mixing up their pointers on insert."
    },
    {
        "commit": "d3d2a7cd8606be9696957eb052ca6569db1a8167",
        "date": "2019-09-28 09:57:06 -0400",
        "subject": "Add line number and fix spacing in TEST_LOG*() macros."
    },
    {
        "commit": "afc483ef86aefe2cf8f057b6159af2c54f77c28b",
        "date": "2019-09-27 13:37:59 -0400",
        "subject": "Clarify which timeline should be used for timeline integration test."
    },
    {
        "commit": "0a4122c77dc2e3fb866b95be73c2831530b2def1",
        "date": "2019-09-27 13:34:59 -0400",
        "subject": "Add reviewer."
    },
    {
        "commit": "6355451870c90be346a378ef8b301f182c635edb",
        "date": "2019-09-27 13:33:14 -0400",
        "subject": "Fix old option name in documentation."
    },
    {
        "commit": "d82102d6ef5445e5c96e47a095210f36a618b800",
        "date": "2019-09-27 13:04:36 -0400",
        "subject": "Add explicit promotes to recovery integration tests.",
        "body": "PostgreSQL 12 will shutdown in these cases which seems to be the correct action (according to the documentation) when hot_standby = off, but older versions are promoting instead.  Set target_action explicitly so all versions will behave the same way.\n\nThis does beg the question of whether the PostgreSQL 12 behavior is wrong (though it matches the docs) or the previous versions are."
    },
    {
        "commit": "833d0da0d96036ada9e2397e2b1484d2032c25fa",
        "date": "2019-09-27 12:29:33 -0400",
        "subject": "Store recovery file name in integration when testing preserve recovery.",
        "body": "This makes the test a little more maintainable and is friendly with the changes needed for PostgreSQL 12."
    },
    {
        "commit": "80eb561cafc1af645e689cca865158e4336c143d",
        "date": "2019-09-27 09:45:11 -0400",
        "subject": "Add missing PostgreSQL 11 control/WAL versions in Perl tests.",
        "body": "These values don't seem to be used for testing but better to be tidy."
    },
    {
        "commit": "d6a6d93a041af1b8e333d8e9b68b151ae43e564d",
        "date": "2019-09-27 09:35:59 -0400",
        "subject": "Add PostgreSQL 12 to u18 container.",
        "body": "This does not add PostgresQL 12 support; it simply adds PostgreSQL 12 to the u18 container for development and testing."
    },
    {
        "commit": "03a7bda511b293cf40fd8324951ace1252d40ac2",
        "date": "2019-09-27 09:19:12 -0400",
        "subject": "Refactor recovery file generation.",
        "body": "Separate the generation of recovery values and formatting them into recovery.conf format.  This is generally a good idea, but also makes the code ready to deal with a different recovery file in PostgreSQL 12.\n\nAlso move the recovery file logic out of cmdRestore() into restoreRecoveryWrite()."
    },
    {
        "commit": "cf1e96e827d154a62c0b52ff5531dd687695bf73",
        "date": "2019-09-27 08:50:33 -0400",
        "subject": "Refactor handling of ignored files in restore delta cleanup.",
        "body": "Replace the boolean logic with a simple list that will be checked to see if the file should be ignored."
    },
    {
        "commit": "c41fb575fbef7b4ce9714986b08f48d32b719862",
        "date": "2019-09-26 17:39:45 -0400",
        "subject": "Add standby restore type.",
        "body": "This restore type automatically adds standby_mode=on to recovery.conf.\n\nThis could be accomplished previously by setting --recovery-option=standby_mode=on but PostgreSQL 12 requires standby mode to be enabled by a special file named standby.signal.\n\nThe new restore type allows us to maintain a common interface between PostgreSQL versions."
    },
    {
        "commit": "89793368196e4073ca7137f2bf21edb385fb9ef6",
        "date": "2019-09-26 16:02:39 -0400",
        "subject": "Comment out unprivileged user documentation.",
        "body": "We haven't had the time to complete this documentation and it has suffered bit rot.\n\nThis prevents us from building the docs on PostgreSQL >= 11 so just comment it all out until it can be updated."
    },
    {
        "commit": "451ae397bec3f3bc070c4db674cc5df61bd63498",
        "date": "2019-09-26 07:52:02 -0400",
        "subject": "The restore command is implemented entirely in C.",
        "body": "For the most part this is a direct migration of the Perl code into C.\n\nThere is one important behavioral change with regard to how file permissions are handled.  The Perl code tried to set ownership as it was in the manifest even when running as an unprivileged user.  This usually just led to errors and frustration.\n\nThe C code works like this:\n\nIf a restore is run as a non-root user (the typical scenario) then all files restored will belong to the user/group executing pgBackRest. If existing files are not owned by the executing user/group then an error will result if the ownership cannot be updated to the executing user/group. In that case the file ownership will need to be updated by a privileged user before the restore can be retried.\n\nIf a restore is run as the root user then pgBackRest will attempt to recreate the ownership recorded in the manifest when the backup was made. Only user/group names are stored in the manifest so the same names must exist on the restore host for this to work. If the user/group name cannot be found locally then the user/group of the PostgreSQL data directory will be used and finally root if the data directory user/group cannot be mapped to a name."
    },
    {
        "commit": "92e48c856ac87838c479c2a454fe007cf026d4bd",
        "date": "2019-09-26 07:27:07 -0400",
        "subject": "Add missing asserts."
    },
    {
        "commit": "f2781bdad4bbe2afba4a0eda7df90753c63ccf03",
        "date": "2019-09-25 16:38:13 -0400",
        "subject": "Allow documentation to be built without encryption.",
        "body": "This is mainly useful for testing, where an encrypted repo is a real nuisance."
    },
    {
        "commit": "e968acbdd74db8f78f718cbe5bd6358107bcf822",
        "date": "2019-09-24 16:55:11 -0400",
        "subject": "Fix outdated comment.",
        "body": "This was probably missed when a new test was added and the timeline was updated."
    },
    {
        "commit": "6af64df9b6519897a55a733583ee40a571a51ee6",
        "date": "2019-09-23 19:26:24 -0400",
        "subject": "Thoughts on repository version 6."
    },
    {
        "commit": "71349c89aecdb3b158d1638d0310cdba6c96362a",
        "date": "2019-09-23 17:56:17 -0400",
        "subject": "Add TEST_TITLE() macro.",
        "body": "This macro displays a title for each test.  A test frequently has multiple parts and it was hard to tell which subparts went together.  We used ad hoc indentation to do this.\n\nAnything that is a not a title is automatically indented so manually indenting is not longer needed.  This should make the tests and the test output easier to read."
    },
    {
        "commit": "2fd2fe509f3039ef28766b865f3b66cc524dee04",
        "date": "2019-09-23 17:20:47 -0400",
        "subject": "Add TEST_RESULT_LOG*() and TEST_SYSTEM*() macros.",
        "body": "These macros encapsulate the functionality provided by direct calls to harnessLogResult() and system().  They both have _FMT() variants.\n\nThe primary advantage is that {[path]}, {[user]}, and {[group]} will be replaced with the test path, user, and group respectively.  This saves a log of strNewFmt() calls and makes the tests less noisy."
    },
    {
        "commit": "d3a7055ee5d290da0196ba266051846c107ddede",
        "date": "2019-09-23 15:15:04 -0400",
        "subject": "Only enable test.pl --debug-test-trace option when --debug also enabled.",
        "body": "The other way makes no sense and leads to compile errors since --debug-test-trace requires some code that is only enabled by --debug."
    },
    {
        "commit": "072aeb810932605bb5e2b8ef64288f24913ddd04",
        "date": "2019-09-23 15:10:31 -0400",
        "subject": "Add LFs to storage list tests.",
        "body": "This makes the diffs easier to read when testing."
    },
    {
        "commit": "c969137021da5dc03e5f95d36080f4e4fd08522b",
        "date": "2019-09-23 13:50:46 -0400",
        "subject": "Migrate backup manifest load/save to C.",
        "body": "The backup manifest stores a complete list of all files, links, and paths in a backup along with metadata such as checksums, sizes,\ntimestamps, etc.  A list of databases is also included for selective restore.\n\nThe purpose of the manifest is to allow the restore command to confidently reconstruct the PostgreSQL data directory and ensure that\nnothing is missing or corrupt.  It is also useful for reporting, e.g. size of backup, backup time, etc.\n\nFor now, migrate enough functionality to implement the restore command."
    },
    {
        "commit": "5b64c93e8b1de010176b8d3927f80cc8039f4dbc",
        "date": "2019-09-20 17:50:49 -0400",
        "subject": "Add local option for cfgExecParam().",
        "body": "cfgExecParam() was originally written to provide options for remote processes.  Remotes processes do not have access to the local config so it was necessary to pass every non-default option.\n\nLocal processes on the other hand, e.g. archive-get, archive-get-async, archive-push-async, and local, do have access to the local config and therefore don't need every parameter to be passed on the command-line.  The previous way was not wrong, but it was overly verbose and did not align with the way Perl had worked.\n\nUpdate cfgExecParam() to accept a local option which excludes options from the command line which can be read from local configs."
    },
    {
        "commit": "3f18040aab5707c9be9b51fe37f3464d222fceb5",
        "date": "2019-09-20 08:13:36 -0400",
        "subject": "Rename MANIFEST_FILE to BACKUP_MANIFEST_FILE.",
        "body": "This is a bit more descriptive and avoids a naming conflict in the new C manifest code."
    },
    {
        "commit": "174cb7b3af6b40d171186060509252c256208cd6",
        "date": "2019-09-19 22:42:28 -0400",
        "subject": "Add strPathAbsolute() and strLstRemoveIdx().",
        "body": "strPathAbsolute() generates an absolute path from an absolute base path and an absolute/relative path.\n\nstrLstRemoveIdx() is a support function based on lstRemoveIdx()."
    },
    {
        "commit": "9421493d09033efda2d5e2cc6eb60d13491beca3",
        "date": "2019-09-19 22:34:12 -0400",
        "subject": "Allow resets when generating local/remote command options.",
        "body": "Somehow this was left out of the original implementation, but it is particularly important for certain types of restores."
    },
    {
        "commit": "e24b2e3f4dcb0a288b4e742fd0b198b768d6320a",
        "date": "2019-09-18 22:23:04 -0400",
        "subject": "Only test timestamps for files.",
        "body": "In general we don't care about path and link times since they are easily recreated when restoring.\n\nSo, outside of storageInfo() we don't need to bother testing them."
    },
    {
        "commit": "54638e87042b2315f24abef2d7f8c5610c53762e",
        "date": "2019-09-18 22:17:22 -0400",
        "subject": "Add strLstRemove().",
        "body": "Allow a string to be removed from a StringList using the underlying lstRemove()."
    },
    {
        "commit": "a6a42b18a9c28b1410df803d7073340b2d7d52c6",
        "date": "2019-09-18 22:09:49 -0400",
        "subject": "Use switch instead of if else tree in jsonFromKvInternal().",
        "body": "This is more efficient but more importantly it is easier to read."
    },
    {
        "commit": "60d93df503c234730109c87114068dde4203804e",
        "date": "2019-09-18 07:15:16 -0400",
        "subject": "Use a callback to feed jobs to ProtocolParallel.",
        "body": "Loading jobs in advance uses a lot of memory in the case that there are millions of jobs to be performed.  We haven't seen this yet, but with backup and restore on the horizon it will become the norm.\n\nInstead, use a callback so that jobs are only created as they are needed and can be freed as soon as they are completed."
    },
    {
        "commit": "ce1c7b02520f2e37dfcfb283471fb4ec263b5d50",
        "date": "2019-09-17 21:04:38 -0400",
        "subject": "Ignore write errors when the ls command is writing to stdout.",
        "body": "It's possible (even likely) that the ls output is being piped to something like head which will exit when it gets what it needs and leave us writing to a broken pipe.\n\nIt would be better to just ignore the broken pipe error but currently we don't store system error codes."
    },
    {
        "commit": "8675699d08b91c57294becfcf27dbf7ddb594c46",
        "date": "2019-09-16 14:09:53 -0400",
        "subject": "Add FAQ for time-based Point-in-Time Recovery."
    },
    {
        "commit": "49b421d372144df726d71552850e55cee298a566",
        "date": "2019-09-16 13:56:25 -0400",
        "subject": "Add documentation clarifications regarding standby repositories.",
        "body": "Clarify that placing the repository on a standby is not a robust configuration and recommend against it."
    },
    {
        "commit": "09ef03b7ef69d2760756146cad86b784b0b5d7c3",
        "date": "2019-09-15 08:27:38 -0400",
        "subject": "Add FAQ regarding backup-standby."
    },
    {
        "commit": "f9c8bd31de89cc1140fe37e3996672bbb1c99934",
        "date": "2019-09-14 14:10:04 -0400",
        "subject": "Add required FreeBSD header."
    },
    {
        "commit": "56bf9d0566bbb9708d1687e9d2e59be306e32dda",
        "date": "2019-09-14 12:21:08 -0400",
        "subject": "Update HINT messages to conform to new standard detailed in CODING.md."
    },
    {
        "commit": "c5f496b903ab9a4fa545d5f1a0a8dae9ec5c49af",
        "date": "2019-09-14 11:56:29 -0400",
        "subject": "Rename parameter processId to processIdx in harnessFork.h for clarity."
    },
    {
        "commit": "f57e119b25d73a4b33aa83b5484898c5d7e84dfb",
        "date": "2019-09-13 12:28:39 -0400",
        "subject": "Document the relationship between db-timeout and protocol-timeout."
    },
    {
        "commit": "15d04ca19c0bd1aafe9d4389e8429bcc392e842d",
        "date": "2019-09-12 16:29:50 -0400",
        "subject": "Add recursion and json output to the ls command.",
        "body": "These features finally make the ls command practical.\n\nCurrently the JSON contains only name, type, and size.  We may add more fields in the future, but these seem like the minimum needed to be useful."
    },
    {
        "commit": "e45baa1830ac5251fc4284d094c3e12920e50862",
        "date": "2019-09-12 16:03:05 -0400",
        "subject": "Add sorting, filters, and recursion to storageInfoList().",
        "body": "These are needed for the ls command and are also useful for testing."
    },
    {
        "commit": "92365fb801543f8d6d52037b1936b3cd42512238",
        "date": "2019-09-12 15:55:18 -0400",
        "subject": "Disable missing-field-initializers warnings in unit testing.",
        "body": "This warning gives very unpredictable results between compiler versions and seems unrealistic since most of our structs are zeroed for initialization.\n\nThis warning has been disabled in the Makefile for a long time."
    },
    {
        "commit": "f809d2f008a4d8d769b72a68ffff9ef75ab9de22",
        "date": "2019-09-12 15:16:42 -0400",
        "subject": "Ignore apt-get update errors in Travis CI.",
        "body": "Broken vendor packages have been causing builds to break due to an error on apt-get update.\n\nIgnore errors and proceed directory to apt-get install.  It's possible that we'll try to reference an expired package version and get an error anyway, but that seems better than a guaranteed hard error."
    },
    {
        "commit": "506c10f7f270806aca8acecaa303bf4458463720",
        "date": "2019-09-12 12:04:25 -0400",
        "subject": "Sort and find improvements to List and StringList objects.",
        "body": "Push the responsibility for sort and find down to the List object by introducing a general comparator function that can be used for both sorting and finding.\n\nUpdate insert and add functions to return the item added rather than the list.  This is more useful in the core code, though numerous updates to the tests were required."
    },
    {
        "commit": "e4a071ce033ae53dafb35eb9ccd4daba1030064c",
        "date": "2019-09-12 10:56:45 -0400",
        "subject": "Add missing header in common/user module."
    },
    {
        "commit": "b53305cc361e9978807d506e3e8ec13b3ae93511",
        "date": "2019-09-12 08:17:07 -0400",
        "subject": "Update incorrect pipelining references to connection reuse.",
        "body": "Connection reuse and pipelining are not the same thing and should not have been conflated.\n\nUpdate comments and release notes to reflect the correct usage."
    },
    {
        "commit": "dca5b63f970be8a13cd11222f4b5a9d4ca71261e",
        "date": "2019-09-10 13:06:44 -0400",
        "subject": "Move documentation job first for Travis CI.",
        "body": "Since this job has been running long recently this should improved overall performance when multiple commits are queued up."
    },
    {
        "commit": "f4f21d0df7217bcb583189d0fc4ecaac3faed146",
        "date": "2019-09-10 13:02:05 -0400",
        "subject": "Add groupIdFromName() and userIdFromName() to user module.",
        "body": "Update StorageWritePosix to use the new functions.\n\nA side effect is that storageWritePosixOpen() will no longer error when the user/group name does not exist.  It will simply retain the original user/group, i.e. the user that executed the restore.\n\nIn general this is a feature since completing a restore is more important than setting permissions exactly from the source host.  However, some notification of this omission to the user would be beneficial."
    },
    {
        "commit": "f8d0574759340f0260f06e377da412041987f582",
        "date": "2019-09-10 12:29:36 -0400",
        "subject": "Increase process timeout and emit occasional warnings.",
        "body": "Travis will timeout after 10 minutes with no output.  Emit a warning every 5 minutes to keep Travis alive and increase the total timeout to 20 minutes.\n\nDocumentation builds have been timing out a lot recently so hopefully this will help."
    },
    {
        "commit": "e043c6b1bc388422aee9255077544c3644b8f69d",
        "date": "2019-09-09 07:37:57 -0400",
        "subject": "Update comment missed in d957acb3."
    },
    {
        "commit": "1049632873d5a70cda90e5c4ed87312bfe4810d6",
        "date": "2019-09-08 20:11:51 -0400",
        "subject": "Add user module for managing system users/groups.",
        "body": "Centralize the management of users and groups.\n\nAlso update Posix storage driver where users/groups were already in use."
    },
    {
        "commit": "d957acb36b6b50c6166d9a68b03f239cdc508fa7",
        "date": "2019-09-08 06:53:23 -0400",
        "subject": "Add function to generate PostgreSQL tablespace identifier.",
        "body": "In PostgreSQL >= 9.0 each tablespace data is stored in a specially named directory so different major versions can share the same tablespace path."
    },
    {
        "commit": "051128ed9ee0ebc63fb35e69818c6213397a053f",
        "date": "2019-09-08 06:47:52 -0400",
        "subject": "Add test macro for comparing String to zero-terminated strings.",
        "body": "This macro avoids the need to wrap the first parameter in strPtr() and should improve readability."
    },
    {
        "commit": "0a96764cb8daa615121069e840268e216d1983ff",
        "date": "2019-09-07 18:04:39 -0400",
        "subject": "Remove most references to PostgreSQL control and catalog versions.",
        "body": "The control and catalog versions were stored a variety of places in the optimistic hope that they would be useful.  In fact they never were.\n\nWe can't remove them from the backup.info and backup.manifest files due to backwards compatibility concerns, but we can at least avoid loading and storing them in C structures.\n\nAdd functions to the PostgreSQL interface which will return the control and catalog versions for any supported version of PostgreSQL to allow backwards compatibility for backup.info and backup.manifest.  These functions will be useful in other ways, e.g. generating the tablespace identifier in PostgreSQL >= 9.0."
    },
    {
        "commit": "843a602080e13ea0f205720892f7bfee58e075fb",
        "date": "2019-09-07 15:41:55 -0400",
        "subject": "Add user/group id to storageInfo().",
        "body": "This is required for some operations on Posix storage."
    },
    {
        "commit": "1c7c1042b4509ff3ad42dad240d895617f01d644",
        "date": "2019-09-07 12:32:25 -0400",
        "subject": "Remove extraneous semicolons and add spaces."
    },
    {
        "commit": "2eb1d1fee315e1e757856d3d88eb74b8434dad74",
        "date": "2019-09-06 16:50:57 -0400",
        "subject": "Rename lstRemove() to lstRemoveIdx().",
        "body": "This works better with the names of upcoming functions and seems sensible even in isolation."
    },
    {
        "commit": "dde0c2b0c9c9743a863b6064e7dbb69de26fa364",
        "date": "2019-09-06 16:43:53 -0400",
        "subject": "Rename INFO_MANIFEST_FILE to MANIFEST_FILE.",
        "body": "This was missed in 5c314df0 when the module was renamed."
    },
    {
        "commit": "4d84820021ad2a96922c87263d9200aace42358f",
        "date": "2019-09-06 13:48:28 -0400",
        "subject": "Improve performance of info file load/save.",
        "body": "Info files required three copies in memory to be loaded (the original string, an ini representation, and the final info object). Not only was this memory inefficient but the Ini object does sequential scans when searching for keys making large files very slow to load.\n\nThis has not been an issue since archive.info and backup.info are very small, but it becomes a big deal when loading manifests with hundreds of thousands of files.\n\nInstead of holding copies of the data in memory, use a callback to deliver the ini data directly to the object when loading. Use a similar method for save to avoid having an intermediate copy. Save is a bit complex because sections/keys must be written in alpha order or older versions of pgBackRest will not calculate the correct checksum.\n\nAlso move the load retry logic to helper functions rather than embedding it in the Info object. This allows for more flexibility in loading and ensures that stack traces will be available when developing unit tests."
    },
    {
        "commit": "7334f30c350b5275106b9acf28b60d999287d800",
        "date": "2019-09-06 13:35:28 -0400",
        "subject": "Add helper function for adding CipherBlock filters to groups."
    },
    {
        "commit": "5c314df098ee2295af400fb0b6b4f0cccd96fb69",
        "date": "2019-09-05 19:53:00 -0400",
        "subject": "Rename infoManifest module to manifest.",
        "body": "The manifest is not an info file so if anything it should be called backupManifest.  But that seems too long for such a commonly used object so manifest seems better.\n\nNote that unlike Perl there is no storage manifest method so this stands as the only manifest in the C code, as befits its importance."
    },
    {
        "commit": "8df7d68c8dca2c61b665bbbd1f26800c0dca3ae8",
        "date": "2019-09-03 18:28:53 -0400",
        "subject": "Fix sudo missed in \"Build pgBackRest as an unprivileged user\".",
        "body": "286a106a updated the documentation to build pgBackRest as an unprivileged user, but the wget command was missed.  This command is not actually run, just displayed, because the release is not yet available when the documentation is built.\n\nUpdate the wget command to run as the local user."
    },
    {
        "commit": "005684bf1f55206f122e1d0fcb4164cc84875ff5",
        "date": "2019-09-03 17:53:50 -0400",
        "subject": "Begin v2.18 development."
    },
    {
        "commit": "ce2bf2999892f689001b084af4d5feb63dc9b402",
        "date": "2019-09-03 16:39:32 -0400",
        "subject": "v2.17: C Migrations and Bug Fixes"
    },
    {
        "commit": "0b5720c642c040e16373f72a9058df094d05ca10",
        "date": "2019-09-03 14:34:49 -0400",
        "subject": "Fix yum.p.o package being installed when custom package specified.",
        "body": "The {[os-type-is-centos]} expression was missing parens which meant \"and\" expressions built on it would always evaluate true if the os-type was centos6."
    },
    {
        "commit": "7d8068f27b6b695f9616fd985517692236dda47d",
        "date": "2019-09-03 12:30:45 -0400",
        "subject": "Don't decode manifest data when it is generated on a remote.",
        "body": "Decoding a manifest from the JSON provided by C to the hash required by Perl is an expensive process.  If manifest() was called on a remote it was being decoded into a hash and then immediately re-encoded into JSON for transmission over the protocol layer.\n\nInstead, provide a function for the remote to get the raw JSON which can be transmitted as is and decoded in the calling process instead.\n\nThis makes remote manifest calls as fast as they were before 2.16, but local calls must still pay the decoding penalty and are therefore slower.  This will continue to be true until the Perl storage interface is retired at the end of the C migration.\n\nNote that for reasonable numbers of tables there is no detectable difference.  The case in question involved 250K tables with a 10 minute decode time (which was being doubled) on a fast workstation."
    },
    {
        "commit": "1e55b876206c73d0ce32424814d100ef82d8da05",
        "date": "2019-09-03 07:49:04 -0400",
        "subject": "Add more commonly-used buffer constants."
    },
    {
        "commit": "7ade3fc1c31f09425547d1869e82863582b1b137",
        "date": "2019-09-02 21:09:43 -0400",
        "subject": "Move constants from the infoManifest module to the infoBackup module.",
        "body": "These constants should be kept separate because the implementation of any info file might change in the future and only the interface should be expected to remain consistent.\n\nIn any case, infoBackup requires Variant constants while infoManifest uses String constants so they are not shareable.  Modern compilers should combine the underlying const char * constants."
    },
    {
        "commit": "3a28b68b8bde996252ad8941107744c74a062453",
        "date": "2019-09-02 19:06:12 -0400",
        "subject": "Disable S3 and encryption on u18 integration tests for mock/all/1.",
        "body": "This test is commonly used for sanity checking but the combination of S3 and encryption makes it hard to use and encourages temporary changes to make it usable.\n\nAcknowledge this and disable S3 and encryption for this test and move them to mock/all/2."
    },
    {
        "commit": "05abab5e72e2e4d5d394b79533621dcf06d1f324",
        "date": "2019-08-30 14:36:02 -0400",
        "subject": "Add OBJECT_DEFINE_MOVE() macro.",
        "body": "The object *Move() functions are very repetitive so replace them with a macro that works similarly to OBJECT_DEFINE_FREE()."
    },
    {
        "commit": "d1675b7e914a3e25a3d6cff2c73f36f69ec9f729",
        "date": "2019-08-28 10:46:54 -0400",
        "subject": "Add ioReadLineParam() to allow return on eof.",
        "body": "ioReadLine() errors on eof because it has previously been used only for protocol reads.\n\nReturning on eof is handy for reading lines from files where eof is not considered an error."
    },
    {
        "commit": "a605117a2329965d65f985b4b8e991a5267416c2",
        "date": "2019-08-28 10:36:21 -0400",
        "subject": "Add required header.",
        "body": "Apparently this header is already included everywhere convert.h is included."
    },
    {
        "commit": "8074ca6a2613f6b9310654b5e0f5c468ae7821e8",
        "date": "2019-08-26 12:30:22 -0400",
        "subject": "Fix typos in variable names."
    },
    {
        "commit": "4a88791a0af78ba6f5496ec4e4351e9726662546",
        "date": "2019-08-26 12:29:43 -0400",
        "subject": "Fix typos in the release notes."
    },
    {
        "commit": "545ccfa8786b631476c232a1d78791687e638432",
        "date": "2019-08-26 12:26:00 -0400",
        "subject": "Fix typos in the documentation."
    },
    {
        "commit": "08bac74d38b126515e2620cdf129cd4cbd53f6e8",
        "date": "2019-08-26 12:20:51 -0400",
        "subject": "Fix typo in stack trace message."
    },
    {
        "commit": "c2771e5469ecd94899243e86668a4bcc0d2c65f5",
        "date": "2019-08-26 12:05:36 -0400",
        "subject": "Fix comment typos.",
        "body": "This includes some variable names in tests which don't seem important enough for their own commits."
    },
    {
        "commit": "22aa532be1be83c5b1df8db5fa85047e1255a789",
        "date": "2019-08-26 11:37:21 -0400",
        "subject": "Add storage tests for files beginning with dots.",
        "body": "Prevent a regression of the issue fixed in f88012ce by adding some tests."
    },
    {
        "commit": "8c9df8c290f760b6a1f8a6a0acb6b4d9b8fa4056",
        "date": "2019-08-26 11:35:35 -0400",
        "subject": "Fix typo in httpClientReponseHeader() function name."
    },
    {
        "commit": "d1cc22f886a865d5b7e0c3e699e4fbe89c11aade",
        "date": "2019-08-26 11:25:14 -0400",
        "subject": "Fix typo in CFGDEFDATA_OPTION_OPTIONAL_COMMAND_OVERRIDE macro name."
    },
    {
        "commit": "01c2669b9764491ec3ca96ffd0de6676bef9e5dc",
        "date": "2019-08-23 07:47:54 -0400",
        "subject": "Fix exclusions for special files.",
        "body": "Prior to 2.16 the Perl manifest code would skip any file that began with a dot.  This was not intentional but it allowed PostgreSQL socket files to be located in the data directory.  The new C code in 2.16 did not have this unintentional exclusion so socket files in the data directory caused errors.\n\nWorse, the file type error was being thrown before the exclusion check so there was really no way around the issue except to move the socket files out of the data directory.\n\nSpecial file types (e.g. socket, pipe) will now be automatically skipped and a warning logged to notify the user of the exclusion.  The warning can be suppressed with an explicit --exclude."
    },
    {
        "commit": "2862f480cd1712ee9c188c28d79f2f9ed1bb9c6b",
        "date": "2019-08-23 07:24:25 -0400",
        "subject": "Add special file type to storageInfo().",
        "body": "There's not much we can do with special files, but higher level logic can at least exclude them gracefully rather than throwing a hard error."
    },
    {
        "commit": "04e4fde5733bbe885ef94098f0114a3a160a88e5",
        "date": "2019-08-22 10:28:08 -0400",
        "subject": "Remove unneeded strFree() in storagePosixInfoListEntry().",
        "body": "This strFree() was the primary culprit in the performance issue fixed in 9eaeb33c.\n\nSince the parent mem context is now freed regularly, this strFree() performs better, but still adds time so removing it seems best."
    },
    {
        "commit": "f88012cef3acc29fb5311c73ea1a84c1409d88ee",
        "date": "2019-08-22 10:18:34 -0400",
        "subject": "Fix regexp to ignore ./.. directories in the Posix driver.",
        "body": "In versions <= 2.15 the old regexp caused any file or directory beginning with . to be ignored during a backup.  This has caused behavioral differences in 2.16 because the new C code correctly excludes ./.. directories.\n\nThis Perl code is only used for testing now, but it should still match the output of the C functions."
    },
    {
        "commit": "c002a2ce2fb7a1bc4bbeaa5dee2f3e7d719ccc24",
        "date": "2019-08-21 19:45:48 -0400",
        "subject": "Move info file checksum to the end of the file.",
        "body": "Putting the checksum at the beginning of the file made it impossible to stream the file out when saving.  The entire file had to be held in memory while it was checksummed so the checksum could be written at the beginning.\n\nInstead place the checksum at the end.  This does not break the existing Perl or C code since the read is not order dependent.\n\nThere are no plans to improve the Perl code to take advantage of this change, but it will make the C implementation more efficient."
    },
    {
        "commit": "c733319063bbc9d67ba99b96c178f1d9f863b8fe",
        "date": "2019-08-21 16:26:28 -0400",
        "subject": "The stanza-create/update/delete commands are implemented entirely in C."
    },
    {
        "commit": "53f27da3a6d770608de6aa6059c40526b83b31dd",
        "date": "2019-08-21 15:41:52 -0400",
        "subject": "Add checkDbConfig() to compare pgBackRest/PostgreSQL configs.",
        "body": "Checking the PostgreSQL-reported path and version against the pgBackRest configuration helps ensure that pgBackRest is operating against the correct cluster.\n\nIn Perl this functionality was in the Db object, but check seems like a better place for it in C."
    },
    {
        "commit": "8b93fdf3493d96fcbbc127604b502d246928ec8e",
        "date": "2019-08-21 15:26:52 -0400",
        "subject": "Add storagePg*() variants to get storage for a specified host id.",
        "body": "Previously the host id to use was pulled from the host-id option or defaulted to 1.\n\nThe stanza, check, and backup commands will all need the ability to address a specified pg host, so add functions to make that possible."
    },
    {
        "commit": "fa640f22add9af88c2ddd584812d8fde93c8f8c5",
        "date": "2019-08-21 15:12:00 -0400",
        "subject": "Allow Info* objects to be created from scratch in C.",
        "body": "Previously, info files (e.g. archive.info, backup.info) were created in Perl and only loaded in C.\n\nThe upcoming stanza commands in C need to create these files so refactor the Info* objects to allow new, empty objects to be created.  Also, add functions needed to initialize each Info* object to a valid state."
    },
    {
        "commit": "aa6f7eb862f71bf0b8f64d3c5e3d67903b048214",
        "date": "2019-08-21 14:14:30 -0400",
        "subject": "Fix comment indents."
    },
    {
        "commit": "71d96531f8b581d460ff24a229b676607fc8992b",
        "date": "2019-08-21 12:10:09 -0400",
        "subject": "Fix comment typo."
    },
    {
        "commit": "c4533765fb5cd4b72f9fcb27f53db2a30165b9b2",
        "date": "2019-08-21 11:59:51 -0400",
        "subject": "Add Db object getters missed in e4901d50.",
        "body": "dbOpen() loaded the version and data directory but there was no way to get the data externally."
    },
    {
        "commit": "27e823581201374df831abc4cf299ce4da29b910",
        "date": "2019-08-21 11:41:36 -0400",
        "subject": "Add repoIsLocalVerify() to verify repository locality.",
        "body": "Some commands can only be run on a host where the repository is local.  This function centralizes the check and error."
    },
    {
        "commit": "6a09d9294d0ef13158fbc96c9d38a28ac7a6f150",
        "date": "2019-08-21 11:29:30 -0400",
        "subject": "Require storage when calling pgControlFromFile().",
        "body": "Previously storageLocal() was being used internally but loading pg_control from remote storage is often required.\n\nAlso, storagePg() is more appropriate than storageLocal() for all current usage."
    },
    {
        "commit": "286a106ae4932ae8213d62528de934afa99c246e",
        "date": "2019-08-20 09:46:29 -0400",
        "subject": "Build pgBackRest as an unprivileged user.",
        "body": "pgBackRest was being built by root in the documentation which is definitely not best practice.\n\nInstead build as the unprivileged default container user.  Sudo privileges are still required to install."
    },
    {
        "commit": "6b5366a663f8c408e56bb2f8e5b27821898a91cc",
        "date": "2019-08-19 21:57:14 -0400",
        "subject": "Remove Perl info command invocation missed in 205525b6."
    },
    {
        "commit": "f6aef6e466ccba368fb53cc00450b501f35782fc",
        "date": "2019-08-19 21:45:54 -0400",
        "subject": "Properly reset conflicting pg-* options for the remote protocol.",
        "body": "The pg1-socket-path and pg1-port options were not being reset when options from a higher index were being pushed down for processing by a remote.  Since remotes only talk to one cluster they always use the options in index 1.  This requires moving options from the original index to 1 before starting the remote.  All options already set on index 1 must be removed if they are not being overwritten."
    },
    {
        "commit": "9eaeb33c882b79a1cade3ce65b5d1b51b6978b05",
        "date": "2019-08-19 21:36:01 -0400",
        "subject": "Improve slow manifest build for very large quantities of tables/segments.",
        "body": "storagePosixInfoList() processed each directory in a single memory context.  If the directory contained hundreds of thousands of files processing became very slow due to the number of allocations.\n\nInstead, reset the memory context every thousand files to minimize the number of allocations active at once, improving both speed and memory consumption."
    },
    {
        "commit": "d411321d28d2c94f3376b82984981624fe30e287",
        "date": "2019-08-19 21:16:10 -0400",
        "subject": "Add reset to temp memory contexts to save memory and processing time.",
        "body": "Processing large datasets in a memory context can lead to high memory usage and long allocation times.  Add a new MEM_CONTEXT_TEMP_RESET_BEGIN() macro that allows temp allocations to be automatically freed after N iterations."
    },
    {
        "commit": "7d97d49f41e961dcaa0d54b56538d3c5a0b8f6ce",
        "date": "2019-08-18 20:46:34 -0400",
        "subject": "Add MostCommonValue object.",
        "body": "Calculate the most common value in a list of variants.  If there is a tie then the first value passed to mcvUpdate() wins.\n\nmcvResult() can be called multiple times because it does not end processing, but there is a cost to calculating the result each time\nsince it is not stored."
    },
    {
        "commit": "8aa1e552b00cb3a9cf5665812e6de782f0805675",
        "date": "2019-08-18 20:09:44 -0400",
        "subject": "Add backup type conversion functions.",
        "body": "Convert back and forth between the string and enum representations of backup types."
    },
    {
        "commit": "3df075bf4022e84f0238591b18bc5e866d6a2aa8",
        "date": "2019-08-18 15:29:18 -0400",
        "subject": "Fix test writing \"null\" into manifest files.",
        "body": "\"null\" is not allowed in the manifest format (null values should be missing instead) but Perl was treating the invalid values written by this test as if they were missing.\n\nUpdate the test code to remove the values rather than setting them to \"null\"."
    },
    {
        "commit": "8edc57b5819a41d43524452de378ec409d05f4d9",
        "date": "2019-08-18 15:19:10 -0400",
        "subject": "Remove RHEL package patch merged to upstream."
    },
    {
        "commit": "0da3352d59c3d985d6fad7b08d28446900932857",
        "date": "2019-08-17 17:52:00 -0400",
        "subject": "Add cvtZToMode() replacement missed in 969e5817."
    },
    {
        "commit": "d0dee2e26027f866c282050457d61d6907f3263f",
        "date": "2019-08-17 17:47:13 -0400",
        "subject": "Add bool rendering to jsonFromVar()."
    },
    {
        "commit": "8fc1d3883b2d96d4f518ff2bfa810b082cc48b38",
        "date": "2019-08-17 17:43:56 -0400",
        "subject": "Fix expire not immediately writing into separate file after backup.",
        "body": "Logging stayed in the backup log until the Perl code started.  Fix this so it logs to the correct file and will still work after the Perl code is removed."
    },
    {
        "commit": "41b6795a374391d66dcfb2df0521f1d7acf84b3e",
        "date": "2019-08-17 14:15:37 -0400",
        "subject": "Create log directories/files with 0750/0640 mode.",
        "body": "The log directories/files were being created with a mix of modes depending on whether they were created in C or Perl.  In particular, the C code was creating log files with the execute bit set for the user and group which was just odd.\n\nStandardize on 750/640 for both code paths."
    },
    {
        "commit": "bc5385142c75f5fa390531a8ff1bd660dd1380ef",
        "date": "2019-08-09 15:18:42 -0400",
        "subject": "Change comment for searchability."
    },
    {
        "commit": "382ed9282504b2adced37275937d2414632bb968",
        "date": "2019-08-09 15:17:18 -0400",
        "subject": "The start/stop commands are implemented entirely in C.",
        "body": "The Perl versions remain because they are still being used by the Perl stanza commands.  Once the stanza commands are migrated they can be removed."
    },
    {
        "commit": "fe196cb0dffacb5d2d1488e3b592cc8ba3f39a5e",
        "date": "2019-08-09 14:52:26 -0400",
        "subject": "Update RHEL patch for upstream changes.",
        "body": "This isn't correct, but we can't test anything else if the package doesn't build."
    },
    {
        "commit": "0e7134d114af1767addce36a3857ea3fd38abc5f",
        "date": "2019-08-08 18:50:54 -0400",
        "subject": "Constify some globals."
    },
    {
        "commit": "e9517dcec05c75a03fa73029250de4f5b21fdfd3",
        "date": "2019-08-08 18:47:02 -0400",
        "subject": "Add hash constants for zero-length data.",
        "body": "No need to calculate a hash when the data length is known to be zero.  Use one of these constants instead."
    },
    {
        "commit": "56c24b7669f1e636a8221106547469065eb7d161",
        "date": "2019-08-08 16:20:51 -0400",
        "subject": "Fix typo in parameter logging."
    },
    {
        "commit": "1076b142e38a4960af1157bd117fa2aacee7d8e6",
        "date": "2019-08-08 16:15:42 -0400",
        "subject": "Remove Debian package patch merged to upstream."
    },
    {
        "commit": "969e5817c5d29890cbe12fa95422cd8703abf8d9",
        "date": "2019-08-08 11:59:39 -0400",
        "subject": "Add cvtZToMode().",
        "body": "The companion function to cvtModeToZ()."
    },
    {
        "commit": "1f93e147fa8563028db8b58621db4a1a12387c87",
        "date": "2019-08-08 11:41:49 -0400",
        "subject": "Add kvGetDefault() to KeyValue object.",
        "body": "Return the default only if the key is not found, not when the value is NULL."
    },
    {
        "commit": "289b47902ba1f49a1baea9fdce53eec52d5358bb",
        "date": "2019-08-08 10:50:25 -0400",
        "subject": "Allow NULLs in strEq().",
        "body": "Bring this function more in line with the way varEq() works.  NULL == NULL but NULL != NOT NULL."
    },
    {
        "commit": "feec674b6ff88bdfa62b20dd706d724c79ca1bcd",
        "date": "2019-08-08 06:48:25 -0400",
        "subject": "Add constant for lock file extension."
    },
    {
        "commit": "efc62c90573bd7a0595d81bcf8a261f732fa1fa9",
        "date": "2019-08-05 12:32:06 -0400",
        "subject": "Begin v2.17 development."
    },
    {
        "commit": "9e730c1bd61b00fa506ea443cdd6161e88ed31ae",
        "date": "2019-08-05 12:03:04 -0400",
        "subject": "v2.16: C Migrations and Bug Fixes"
    },
    {
        "commit": "3d3003e9ca6dd449ea16c6812d1cabc392c9d294",
        "date": "2019-08-01 20:35:01 -0400",
        "subject": "The check command is implemented partly in C.",
        "body": "Implement switch WAL and archive check in C but leave the rest in Perl for now.\n\nThe main idea was to have some real integration tests for the new database code so the rest of the migration can wait."
    },
    {
        "commit": "e4901d50d5e99168f7962b93f7a327e45f7b7fed",
        "date": "2019-08-01 15:38:27 -0400",
        "subject": "Add Db object to encapsulate PostgreSQL queries and commands.",
        "body": "Migrate functionality from the Perl Db module to C. For now this is just enough to implement the WAL switch check.\n\nAdd the dbGet() helper function to get Db objects easily.\n\nCreate macros in harnessPq to make writing pq scripts easier by grouping commonly used functions together."
    },
    {
        "commit": "f9e1f3a79823ee1bd6656e4f7a8fb23e735b8ccf",
        "date": "2019-08-01 14:28:30 -0400",
        "subject": "Retry S3 RequestTimeTooSkewed errors instead of immediately terminating.",
        "body": "The cause of this error seems to be that a failed request takes so long that a subsequent retry at the http level uses outdated headers.\n\nWe're not sure if pgBackRest it to blame here (in one case a kernel downgrade fixed it, in another case an incorrect network driver was the problem) so add retries to hopefully deal with the issue if it is not too persistent.  If SSL_write() has long delays before reporting an error then this will obviously affect backup performance."
    },
    {
        "commit": "2eb3c9f95f6e57072b65da81cb07a1268ebbf38e",
        "date": "2019-08-01 09:58:24 -0400",
        "subject": "Improve error handling for SSL_write().",
        "body": "Error codes were not being caught for SSL_write() so it was hard to see exactly what was happening in error cases.  Report errors to aid in debugging.\n\nAlso add a retry for SSL_ERROR_WANT_READ.  Even though we have not been able to reproduce this case it is required by SSL_write() so go ahead and implement it."
    },
    {
        "commit": "89c67287bcb8bc7884b5dd37703b0d7786c68b95",
        "date": "2019-07-31 20:44:49 -0400",
        "subject": "Improve multi-host handling in protocol helper.",
        "body": "Multiple PostgreSQL hosts were supported via the host-id option but there are cases where it is useful to be able to directly specify the host id required, e.g. to iterate through pg* hosts when looking for candidate primaries and standbys during backup."
    },
    {
        "commit": "893ae24284e506c551fbc28bec8719881a856e2a",
        "date": "2019-07-31 19:58:57 -0400",
        "subject": "Add timeout to walSegmentFind().",
        "body": "Keep trying to locate the WAL segment until timeout.  This is useful for the check and backup commands which must wait for segments to arrive in the archive."
    },
    {
        "commit": "03b28da1cac8f39c7f57d2c15a83ad667a51b997",
        "date": "2019-07-31 11:35:58 -0400",
        "subject": "Rename control/control module to control/common.",
        "body": "This is more consistent with how other common modules are named."
    },
    {
        "commit": "a04baa1bdc07f85041bfaf910f122b7ae278d6aa",
        "date": "2019-07-30 11:42:56 -0400",
        "subject": "Fix incorrect comment (obviously pasted from S3 code)."
    },
    {
        "commit": "3d892cfb75c3303b0b592d4481d415d25c3f0df9",
        "date": "2019-07-30 11:39:01 -0400",
        "subject": "Remove extra linefeed."
    },
    {
        "commit": "88c1929ec5a41915753e3d3078bdaae62d14bf0f",
        "date": "2019-07-26 08:37:58 -0400",
        "subject": "Don't pass local config* options to the remote.",
        "body": "The remotes have their own config options (repo-host-config, etc.) so don't pass the local config* options.\n\nThis was a regression from the behavior of the Perl code and while there have been no field reports it caused breakage on test systems with multiple configurations."
    },
    {
        "commit": "f8b0676fd6edbe915bc23d2f082b4862004ca151",
        "date": "2019-07-25 20:15:06 -0400",
        "subject": "Allow modules to be included for testing without requiring coverage.",
        "body": "Sometimes it is useful to get at the internals of a module that is not being tested for coverage in order to provide coverage for another module that is being tested.  The include directive allows this.\n\nUpdate modules that had previously been added to coverage that only need to be included."
    },
    {
        "commit": "554d98746a96d5a93e3449d62c81c9b7a7c84e9d",
        "date": "2019-07-25 17:36:51 -0400",
        "subject": "Add repo-s3-port option for setting a non-standard S3 service port.",
        "body": "If this option is set then ports appended to repo-s3-endpoint or repo-s3-host will be ignored.\n\nSetting this option explicitly may be the only way to use a bare ipv6 address with S3 (since multiple colons confuse the parser) but we plan to improve this in the future."
    },
    {
        "commit": "d8ca0e5c5bc2af6b85b20f48b40b83762d415b7a",
        "date": "2019-07-25 17:05:39 -0400",
        "subject": "Add Perl interface to C PgQuery object.",
        "body": "This validates that all current queries work with the new interface and removes the dependency on DBD::Pg."
    },
    {
        "commit": "415542b4a3589ff7b25dbd97d1041a9b1ff87815",
        "date": "2019-07-25 14:50:02 -0400",
        "subject": "Add PostgreSQL query client.",
        "body": "This direct interface to libpq allows simple queries to be run against PostgreSQL and supports timeouts.\n\nTesting is performed using a shim that can use scripted responses to test all aspects of the client code.  The shim will be very useful for testing backup scenarios on complex topologies."
    },
    {
        "commit": "59f135340d4f76c522c8b24ecb23d56b57b2b0f8",
        "date": "2019-07-25 14:34:16 -0400",
        "subject": "The local command for backup is implemented entirely in C.",
        "body": "The local process is now entirely migrated to C.  Since all major I/O operations are performed in the local process, the vast majority of I/O is now performed in C."
    },
    {
        "commit": "54ec8f151e4164c3f363f417bece7c4b1533dfd6",
        "date": "2019-07-24 19:45:35 -0400",
        "subject": "Add int rendering to jsonFromVar()."
    },
    {
        "commit": "615735e7eed32c429a13559584a7268e4dbff3fc",
        "date": "2019-07-24 06:52:49 -0400",
        "subject": "Add new types to JSON render.",
        "body": "Add bool, array, and int64 as valid array subtypes.\n\nPretty print for the array subtype is not correct but is currently not in use (this can be seen at line 328 in typeJsonTest.c)."
    },
    {
        "commit": "62f0c7fb37e160d4a8a2dbe410fe8a569bc4ba38",
        "date": "2019-07-22 13:09:51 -0400",
        "subject": "Add lock bot configuration.",
        "body": "Lock closed issues after ninety days to prevent posting on old issues."
    },
    {
        "commit": "38ba458616f450232dc1090306e651561c9b3076",
        "date": "2019-07-18 08:42:42 -0400",
        "subject": "Add IoSink filter.",
        "body": "Discard all data passed to the filter.  Useful for calculating size/checksum on a remote system when no data needs to be returned.\n\nUpdate ioReadDrain() to automatically use the IoSink filter."
    },
    {
        "commit": "d1dd6add4853a77d2ebbf27c326bbb4670b78955",
        "date": "2019-07-17 16:55:21 -0400",
        "subject": "Remove never-used infoBackupCheckPg() function.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "3bdba4933d45451a3fa6f5dafcb79fd976bffef6",
        "date": "2019-07-17 16:49:42 -0400",
        "subject": "Fix incorrect handling of transfer-encoding response to HEAD request.",
        "body": "The HTTP server can use either content-length or transfer-encoding to indicate that there is content in the response.  HEAD requests do not include content but return all the same headers as GET.  In the HEAD case we were ignoring content-length but not transfer-encoding which led to unexpected eof errors on AWS S3.  Our test server, minio, uses content-length so this was not caught in integration testing.\n\nIgnore all content for HEAD requests (no matter how it is reported) and add a unit test for transfer-encoding to prevent a regression."
    },
    {
        "commit": "6f981c53bb63d3a644a8573cb9edb162c443d03b",
        "date": "2019-07-17 15:44:55 -0400",
        "subject": "Remove obsolete ignoreMissing parameter.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "7662d32e6020148d822fd5080f2a5ebda7ebe103",
        "date": "2019-07-17 15:42:37 -0400",
        "subject": "Fix comment typos and clarify HEAD response behavior."
    },
    {
        "commit": "eee67db4d611bb18950daf7bddb84217b010d767",
        "date": "2019-07-17 14:09:50 -0400",
        "subject": "Allow pg storage to be remote.",
        "body": "None of the currently migrated commands needed remote pg storage but now backup, check, stanza-* will need it."
    },
    {
        "commit": "30f55a3c2a139ffd59547fd8e422c3fae3feecd3",
        "date": "2019-07-15 17:36:24 -0400",
        "subject": "Add compressed storage feature.",
        "body": "This feature denotes storage that can compress files so that they take up less space than what was written.  Currently this includes the Posix and CIFS drivers.  The stored size of the file will be rechecked after write to determine if the reported size is different.  This check would be wasted on object stores such as S3, and they might not report the file as existing immediately after write.\n\nAlso add tests to each storage driver to check features."
    },
    {
        "commit": "3e1062825dde7cab506225a3b0658552b44de7ce",
        "date": "2019-07-15 16:49:46 -0400",
        "subject": "Allow multiple filters to be pushed to the remote and return results.",
        "body": "Previously only a single filter could be pushed to the remote since order was not being maintained.  Now the filters are strictly ordered.\n\nResults are returned from the remote and set in the local IoFilterGroup so they can be retrieved.\n\nExpand remote filter support to include all filters."
    },
    {
        "commit": "d5654375a5152764f76335eb5265eb994d1df6bd",
        "date": "2019-07-15 08:44:41 -0400",
        "subject": "Add ioReadDrain().",
        "body": "Read all data from an IoRead object and discard it.  This is handy for calculating size, hash, etc. when the output is not needed.\n\nUpdate code where a loop was used before."
    },
    {
        "commit": "cdb75ac8b38810e2e7c6f5d0161443650f94bb31",
        "date": "2019-07-15 07:13:36 -0400",
        "subject": "Add constants for path and archive.info/backup.info combinations.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "ede7df9fb1d937f228e982d987d306345007dfe0",
        "date": "2019-07-14 15:53:31 -0400",
        "subject": "Allow NULL in JSON list."
    },
    {
        "commit": "c836c483dc7198a685991753300bae49d3caa73c",
        "date": "2019-07-14 15:42:55 -0400",
        "subject": "Add lstClear() to List object."
    },
    {
        "commit": "e10577d0b0c8054a08513b069e2f2647ddd51fb7",
        "date": "2019-07-11 09:13:56 -0400",
        "subject": "Fix incorrect offline upper bound for ignoring page checksum errors.",
        "body": "For offline backups the upper bound was being set to 0x0000FFFF0000FFFF rather than UINT64_MAX.  This meant that page checksum errors might be ignored for databases with a lot of past WAL in offline mode.\n\nOnline mode is not affected since the upper bound is retrieved from pg_start_backup()."
    },
    {
        "commit": "2fd0ebb78aabe882d4b080d4014d7ecabbded3da",
        "date": "2019-07-10 15:08:35 -0400",
        "subject": "Fix links broken by non-standard version.",
        "body": "Using version 2.15.1 fixed the duplicate tarball problem but broke the auto-generated links.  Fix them manually since this should not be a common problem."
    },
    {
        "commit": "6a89c1526e1ecc2940ed2bf42258ceb9ef85f0e0",
        "date": "2019-07-10 12:04:25 -0400",
        "subject": "Revert a2dcdc07.",
        "body": "It is simpler to implement the required logic in stanza-delete rather than add complexity to this function."
    },
    {
        "commit": "04646599a776348914b3e9bb9b707d2845540aac",
        "date": "2019-07-10 06:17:33 -0400",
        "subject": "Remove extraneous test macro."
    },
    {
        "commit": "4e7db608dc6488feb99e5f2707f06e3ca39d78e8",
        "date": "2019-07-10 06:11:21 -0400",
        "subject": "Clarify that return statements are not removed in production builds."
    },
    {
        "commit": "a22a6dc08c25a2af9ac9a6f2331144f2bae8dcbe",
        "date": "2019-07-10 06:06:07 -0400",
        "subject": "Update contributor name."
    },
    {
        "commit": "a2dcdc0711a8dfb7d562b2ee0a8586de9676669f",
        "date": "2019-07-09 16:41:58 -0400",
        "subject": "Update lockStopTest() to optionally return a result rather than error.",
        "body": "Some commands (e.g. stanza-delete) would prefer to throw a customized error."
    },
    {
        "commit": "27b3246e852e98902f21589f5cdfece9ebb27b39",
        "date": "2019-07-08 08:29:25 -0400",
        "subject": "Exclude more build files from rsync between tests.",
        "body": "Files (especially build.auto.h) were being removed and forcing a full build between separate invocations of test.pl.\n\nThis affected ad-hoc testing at the command-line, not a full test run in CI."
    },
    {
        "commit": "5e1ed2e8a52c2c4d2151ef17496f0847cd9ae939",
        "date": "2019-07-05 18:34:15 -0400",
        "subject": "Remove clang static analysis.",
        "body": "This analysis never produced anything but false positives (var might be NULL) but took over a minute per test run and added 600MB to the test container."
    },
    {
        "commit": "488fb672948c07abfd7e38604eacbd0f82610b1a",
        "date": "2019-07-05 17:25:01 -0400",
        "subject": "Force PostgreSQL versions to string for newer versions of JSON:PP.",
        "body": "Since 2.91 JSON::PP has a bias for saving variables that look like numbers as numbers even if they were declared as strings.\n\nForce versions to strings where needed by appending ''.\n\nUpdate the json-pp-perl package on Ubuntu 18.04 to 2.97 to provide test coverage."
    },
    {
        "commit": "9836578520e3fb5c038230ebfb123001a7eb32fa",
        "date": "2019-07-05 16:55:17 -0400",
        "subject": "Remove perl critic and coverage.",
        "body": "No new Perl code is being developed, so these tools are just taking up time and making migrations to newer platforms harder.  There are only a few Perl tests remaining with full coverage so the coverage tool does not warn of loss of coverage in most cases.\n\nRemove both tools and associated libraries."
    },
    {
        "commit": "fc2101352206a87f8471fd37455d9cd990fce95d",
        "date": "2019-07-05 16:25:28 -0400",
        "subject": "Fix scoping violations exposed by optimizations in gcc 9.",
        "body": "gcc < 9 makes all compound literals function scope, even though the C spec requires them to be invalid outside the current scope.  Since the compiler and valgrind were not enforcing this we had a few violations which caused problems in gcc >= 9.\n\nEven though we are not quite ready to support gcc 9 officially, fix the scoping violations that currently exist in the codebase."
    },
    {
        "commit": "1708f1d1514b3f2afb69664317df705a1fccfaf7",
        "date": "2019-07-02 22:20:35 -0400",
        "subject": "Use minio for integration testing.",
        "body": "ScalityS3 has not received any maintenance in years and is slow to start which is bad for testing.  Replace it with minio which starts quickly and ships as a single executable or a tiny container.\n\nMinio has stricter limits on allowable characters but should still provide enough coverage to show that our encoding is working correctly.\n\nThis commit also includes the upgrade to openssl 1.1.1 in the Ubuntu 18.04 container."
    },
    {
        "commit": "b9b21315ead6610bb41ee19794763555a7265261",
        "date": "2019-07-02 22:09:12 -0400",
        "subject": "Updates for openssl 1.1.1.",
        "body": "Some HTTP error tests were failing after the upgrade to openssl 1.1.1, though the rest of the unit and integration tests worked fine.  This seemed to be related to the very small messages used in the error testing, but it pointed to an issue with the code not being fully compliant, made worse by auto-retry being enabled by default.\n\nDisable auto-retry and implement better error handling to bring the code in line with openssl recommendations.\n\nThere's no evidence this is a problem in the field, but having all the tests pass seems like a good idea and the new code is certainly more robust.\n\nCoverage will be complete in the next commit when openssl 1.1.1 is introduced."
    },
    {
        "commit": "c55009d0f9ebfea746ab270be167dc2d78976ce9",
        "date": "2019-06-27 14:39:11 -0400",
        "subject": "Community yum package can be installed with --var=package=yum.",
        "body": "Like apt, the community yum package can now be installed instead of a user-specified package."
    },
    {
        "commit": "b0728c33dbd7c99a7b785c152f20d5cdfa902bff",
        "date": "2019-06-27 14:30:20 -0400",
        "subject": "Remove Debian package patch merged to upstream."
    },
    {
        "commit": "020101b30bfe9f2d34b878fcd51fad932781d9f8",
        "date": "2019-06-27 09:38:40 -0400",
        "subject": "Update release notes to explicitly select release commit when tagging."
    },
    {
        "commit": "33e3d316d63a41cd64d217abe30786cfb48bf09e",
        "date": "2019-06-26 19:52:04 -0400",
        "subject": "Reverse loop in infoPgSave() to be consistent with infoPgNewLoad().",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "4bffa0c5bb7d551c60b8d8bcff9a3bbe6e02eddd",
        "date": "2019-06-26 15:02:30 -0400",
        "subject": "Add test function to create the S3 bucket instead of using aws cli.",
        "body": "Eventually the idea is to remove the dependency on aws cli since Python is a big install."
    },
    {
        "commit": "4815752ccc46ff742f67b369bc75ad3efcf11204",
        "date": "2019-06-26 08:24:58 -0400",
        "subject": "Add Perl interface to C storage layer.",
        "body": "Maintaining the storage layer/drivers in two languages is burdensome.  Since the integration tests require the Perl storage layer/drivers we'll need them even after the core code is migrated to C.  Create an interface layer so the Perl code can be removed and new storage drivers/features introduced without adding Perl equivalents.\n\nThe goal is to move the integration tests to C so this interface will eventually be removed.  That being the case, the interface was designed for maximum compatibility to ease the transition.  The result looks a bit hacky but we'll improve it as needed until it can be retired."
    },
    {
        "commit": "bd6c0941e9e3aa2dab84f7404da1f9dc60cd693b",
        "date": "2019-06-25 17:27:19 -0400",
        "subject": "Fix missing dash in site name.",
        "body": "Without this the project name and tagline just run together."
    },
    {
        "commit": "466602387bc279aa44a811dc2948b893e4127b2c",
        "date": "2019-06-25 08:42:20 -0400",
        "subject": "Begin v2.16 development."
    },
    {
        "commit": "6650d8144cba46f93ad75c11ad98d87c57d2ea7f",
        "date": "2019-06-25 08:29:06 -0400",
        "subject": "v2.15: C Implementation of Expire"
    },
    {
        "commit": "51fcaee43edf022aea0f94b76d254f2de8b6e1d1",
        "date": "2019-06-25 07:58:38 -0400",
        "subject": "Add host-repo-path variable internal replacement.",
        "body": "This variable needs to be replaced right before being used without being added to the cache since the host repo path will vary from system to system.\n\nThis is frankly a bit of a hack to get the documentation to build in the Debian packages for the upcoming release.  We'll need to come up with something more flexible going forward."
    },
    {
        "commit": "5cbe2dee855577ccd14051cad35f30376db21d50",
        "date": "2019-06-25 07:36:16 -0400",
        "subject": "Add compress-level-network option to ls command.",
        "body": "039e515a added a dependency on compress-level-network but the ls command did not get updated."
    },
    {
        "commit": "d7f12f268a370e388c6a6375666831ecd8fad72c",
        "date": "2019-06-24 19:27:13 -0400",
        "subject": "Redact secure options in the help command.",
        "body": "Secure options could show up in the help as \"current\".  While the user must have permissions to see the source of the options (e.g. environment, config file) it's still not a good idea to display them in an unexpected context.\n\nInstead show secure options as <redacted> in the help command."
    },
    {
        "commit": "c22e10e4a938b444ac7912efc3b751829401360f",
        "date": "2019-06-24 15:42:33 -0400",
        "subject": "Honor configure --prefix option.",
        "body": "The --prefix option was entirely ignored and DESTDIR was a combination of DESTDIR and bindir.\n\nBring both in line with recommendations for autoconf and make as specified in https://www.gnu.org/software/make/manual/html_node/Directory-Variables.html and https://www.gnu.org/prep/standards/html_node/DESTDIR.html."
    },
    {
        "commit": "b498188f01f8d2ccd4d0ce2cce3af2e5069d9ac3",
        "date": "2019-06-24 11:59:44 -0400",
        "subject": "Error on db history mismatch when expiring.",
        "body": "Amend commit 434cd832 to error when the db history in archive.info and backup.info do not match.\n\nThe Perl code would attempt to reconcile the history by matching on system id and version but we are not planning to migrate that code to C.  It's possible that there are users with mismatches but if so they should have been getting errors from info for the last six months.  It's easy enough to manually fix these files if there are any mismatches in the field."
    },
    {
        "commit": "039e515a319216035187c89efccf97143d4cac03",
        "date": "2019-06-24 10:20:47 -0400",
        "subject": "Allow protocol compression when read/writing remote files.",
        "body": "If the file is compressible (i.e. not encrypted or already compressed) it can be marked as such in storageNewRead()/storageNewWrite().  If the file is being read from/written to a remote it will be compressed in transit using gzip.\n\nSimplify filter group handling by having the IoRead/IoWrite objects create the filter group automatically.  This removes the need for a lot of NULL checking and has a negligible effect on performance since a filter group needs to be created eventually unless the source file is missing.\n\nAllow filters to be created using a VariantList so filter parameters can be passed to the remote."
    },
    {
        "commit": "62715ebf2d8b0585c35cd2ee14d6aabf9cc0f1f8",
        "date": "2019-06-19 17:49:38 -0400",
        "subject": "Fix archive retention expiring too aggressively.",
        "body": "The problem expressed when repo1-archive-retention-type was set to diff.  In this case repo1-archive-retention ended up being effectively equal to one, which meant PITR recovery was only possible from the last backup.  WAL required for consistency was still preserved for all backups.\n\nThis issue is not present in the C migration committed at 434cd832, which was written before this bug was reported.  Even so, we wanted to note this issue in the release notes in case any other users have been affected.\n\nFixed by Cynthia Shang.\nReported by Mohamad El-Rifai."
    },
    {
        "commit": "a7d64bab7abe56132ad1c83eb6bfcca1166e0000",
        "date": "2019-06-18 19:02:09 -0400",
        "subject": "Add FAQ on where to find old Debian/Ubuntu packages."
    },
    {
        "commit": "e2d791394a3577aac53a21e3141e4e337ac8edf0",
        "date": "2019-06-18 18:42:47 -0400",
        "subject": "Add FAQ to the documentation.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "434cd832855e4e189403962753fd8771e29880a4",
        "date": "2019-06-18 15:19:20 -0400",
        "subject": "The expire command is implemented entirely in C.",
        "body": "This implementation duplicates the functionality of the Perl code but does so with different logic and includes full unit tests.\n\nAlong the way at least one bug was fixed, see issue #748."
    },
    {
        "commit": "f88bee7b3321a2c79f0317913ba1e83a56d19c7d",
        "date": "2019-06-18 10:13:28 -0400",
        "subject": "TLS/HTTP statistics log replacements.",
        "body": "These statistics can change with any code update so they cause a lot of churn in the expect logs."
    },
    {
        "commit": "0efdf2576f02b1768fb8805b27571e403ac3cb52",
        "date": "2019-06-18 07:35:34 -0400",
        "subject": "Remove hard-coded PostgreSQL user so $PGUSER works.",
        "body": "The PostgreSQL user was hard-coded to the OS user which libpq will automatically use if $PGUSER is not set, so this code was redundant and prevented $PGUSER from working when set."
    },
    {
        "commit": "593446718a8997bfd674cf5e54230290cb5bcdea",
        "date": "2019-06-18 06:45:47 -0400",
        "subject": "Add S3 info type missed in 7f2f5354.",
        "body": "File is the only type possible in S3."
    },
    {
        "commit": "0a96a2895d7a1e4c5eec402d3742f1d1e25cc126",
        "date": "2019-06-17 09:16:44 -0400",
        "subject": "Add storage layer for tests and documentation.",
        "body": "The tests and documentation have been using the core storage layer but soon that will depend entirely on the C library, creating a bootstrap problem (i.e. the storage layer will be needed to build the C library).\n\nCreate a simplified Posix storage layer to be used by documentation and the parts of the test code that build and execute the actual tests.  The actual tests will still use the core storage driver so they can interact with any type of storage."
    },
    {
        "commit": "ceafd8e19d416106f50c4ff440bf1cf7fcb5553f",
        "date": "2019-06-17 07:52:03 -0400",
        "subject": "Migrate page checksum filter to C.",
        "body": "This filter exactly mimics the behavior of the Perl filter so is a drop-in replacement.\n\nThe filter is not integrated yet since it requires the Perl-to-C storage layer interface coming in a future commit."
    },
    {
        "commit": "892f35a7283462fae0bc3077aeb23c9624a50dea",
        "date": "2019-06-17 07:42:12 -0400",
        "subject": "Add new types to JSON render.",
        "body": "Still not a complete list, but we are getting there."
    },
    {
        "commit": "c64c9c05905d435cd650195ed9470355a4d2be2f",
        "date": "2019-06-17 06:59:06 -0400",
        "subject": "Add backup management functions to InfoBackup.",
        "body": "Allow current backups to be listed and deleted.\n\nAlso expose some constants required by expire and stanza-* commands."
    },
    {
        "commit": "44bafc127d9d4e38478aa44d0adc0f34695c6640",
        "date": "2019-06-17 06:47:15 -0400",
        "subject": "Rename info*New() functions to info*NewLoad().",
        "body": "These names more accurately reflect what the functions do and follow the convention started in Info and InfoPg.\n\nAlso remove the ignoreMissing parameter since it was never used."
    },
    {
        "commit": "f05fbc54a8f00a56937439fb88eafe8e239781e8",
        "date": "2019-06-14 08:04:28 -0400",
        "subject": "Fix filters not processing when there is no input.",
        "body": "Some filters (e.g. encryption and compression) produce output even if there is no input.  Since the filter group was marked as \"done\" initially, processing would not run when there was zero input and that resulted in zero output.\n\nAll filters start not done so start the filter group the same way."
    },
    {
        "commit": "9ba95e993ba3dbf73f8967a875608980e6380633",
        "date": "2019-06-13 17:58:33 -0400",
        "subject": "Use retries to wait for test S3 server to start.",
        "body": "The prior method of tailing the docker log no longer seems reliable.  Instead, keep retrying the make bucket command until it works and show the error if it times out."
    },
    {
        "commit": "b9233f7412e44c8daf41db05bd9699fa088ece5d",
        "date": "2019-06-13 12:44:40 -0400",
        "subject": "Create filter group in read/write object's memory context.",
        "body": "The filter group was being created in the parent context so it would go away if the parent context was freed."
    },
    {
        "commit": "20be5c9bf39d606b8586ffcf575a7443c6375479",
        "date": "2019-06-13 12:35:13 -0400",
        "subject": "Remove extra spaces."
    },
    {
        "commit": "fdd375b63d3962845efbb38a7020d852143b97fd",
        "date": "2019-06-11 16:26:32 -0400",
        "subject": "Integrate S3 storage driver with HTTP client cache.",
        "body": "This allows copying from one S3 object to another.  We generally try to avoid doing this but there are a few cases where it is needed and the tests do it quite a bit.\n\nOne thing to look out for here is that reads require the http client to be explicitly released by calling httpClientDone().  This means than clients could grow if they are not released properly.  The http statistics will hopefully alert us if this is happening."
    },
    {
        "commit": "ced42d6511e9b5735a2281dd0e1faec41870fd37",
        "date": "2019-06-11 10:48:22 -0400",
        "subject": "Add HTTP client cache.",
        "body": "This cache manages multiple http clients and returns one to the caller that is not busy.  It is the responsibility of the caller to indicate when they are done with a client. If returnContent is set then the client will automatically be marked done.\n\nAlso add special handing for HEAD requests to recognize that content-length is informational only and no content is expected."
    },
    {
        "commit": "6e809e578fbd24269205de25cc6e9c84cefc5647",
        "date": "2019-06-11 10:34:42 -0400",
        "subject": "Add tag to specify minio version to use for documentation build.",
        "body": "The new minio major release broke the build.  We'll need to figure that out but for now use the last major version, which is known to work."
    },
    {
        "commit": "7f2f535460e3499c1811b5beca9130f84b78c982",
        "date": "2019-06-10 16:09:38 -0400",
        "subject": "Add info() and infoList() to S3 driver.",
        "body": "These should be the last functions required to complete the implementation of the S3 driver."
    },
    {
        "commit": "9d1b03781f9fe88b868cdfaf4808d84ad1f072fb",
        "date": "2019-06-10 15:52:51 -0400",
        "subject": "Revert removal of aws cli in 3e1b06ac.",
        "body": "This is required for integration tests to create buckets."
    },
    {
        "commit": "456391f67c220647e130fdc7a7fc805b075cfd87",
        "date": "2019-06-10 12:23:04 -0400",
        "subject": "Create general-purpose S3 list function.",
        "body": "There are already two functions which need file lists and more on the way, so create a general-purpose function to reduce code duplication."
    },
    {
        "commit": "fb8bd095ca93e2bf77eaec0f7573f961f691c3ab",
        "date": "2019-06-10 10:37:20 -0400",
        "subject": "Add missing const qualifiers."
    },
    {
        "commit": "78b333790c69aca991f740a9ea6b1982fb70c3d6",
        "date": "2019-06-07 10:35:44 -0400",
        "subject": "Return IoRead/IoWrite from io*FilterGroupSet()",
        "body": "This makes is possible to chain functions more effectively."
    },
    {
        "commit": "e701e8fd846539ec20f2a9be90b0590ceb6a7be6",
        "date": "2019-06-05 11:50:49 -0400",
        "subject": "Expose storage type.",
        "body": "Code calling the storage should be driver agnostic but knowing the storage type can be useful for debugging and error reporting."
    },
    {
        "commit": "6ff3325c7744a8f6f0e1e965fa673040a2f40a71",
        "date": "2019-06-05 11:43:17 -0400",
        "subject": "Enforce requiring repo-cipher-pass at config parse time.",
        "body": "This was not enforced at parse time because repo1-cipher-type could be passed on the command-line even in cases where encryption was not needed by the subprocess.\n\nFilter repo-cipher-type so it is never passed on the command line.  If the subprocess does not have access to the passphrase then knowing the encryption type is useless anyway."
    },
    {
        "commit": "d7bd0c58cdd9a434aa5893db16e6bcf8425e26b9",
        "date": "2019-06-05 07:27:24 -0400",
        "subject": "Use wal_level=replica in the documentation for PostgreSQL >= 9.6.",
        "body": "The documentation was using wal_level=hot_standby which is a deprecated setting.\n\nAlso remove the reference to wal_level=archive since it is no longer supported and is not recommended for older versions."
    },
    {
        "commit": "aca11b2fa19337f934fc095e33f014d5e6df71f3",
        "date": "2019-06-04 17:40:27 -0400",
        "subject": "Add String to types supported by JSON list render.",
        "body": "All types should be supported eventually but for now this answers the need."
    },
    {
        "commit": "0ab6f3bb87005d5a5d102156730b1e3099894189",
        "date": "2019-06-04 13:38:05 -0400",
        "subject": "Fix incorrect error type on missing path."
    },
    {
        "commit": "4b91259de8d7feec6d33d154032169aa32c879e3",
        "date": "2019-06-04 12:56:04 -0400",
        "subject": "Make working with filter groups less restrictive.",
        "body": "Filter groups could not be manipulated once they had been assigned to an IO object.  Now they can be freely manipulated up to the time the IO object is opened.\n\nAlso, move the filter group into the IO object's context so they don't need to be tracked separately."
    },
    {
        "commit": "92e04ea9f4e0eb3f6cd88a72497a026cbd348280",
        "date": "2019-06-04 10:34:19 -0400",
        "subject": "Remove per-stanza repo cache clear during testing.",
        "body": "This was not being used and is not supported by the equivalent C code."
    },
    {
        "commit": "44eb21ea935fdaa4e96d4637c7b62cb5a73d3e77",
        "date": "2019-06-04 10:05:27 -0400",
        "subject": "Use HEAD to check if a file exists on S3.",
        "body": "The previous implementation searched for the file in a list which worked but was not optimal.  For arbitrary bucket structures it would also produce a false negative if a match was not found in the first 1000 entries.  This was not an issue for our repo structure since the max hits on exists calls is two but it seems worth fixing to avoid future complications."
    },
    {
        "commit": "15b8e3b6af7327179d8bdd2e0c6833ed28005b0b",
        "date": "2019-06-04 09:39:08 -0400",
        "subject": "Make C S3 requests use the same host logic as Perl.",
        "body": "The C code was passing the host (if specified) with the request which could force the server into path-style URLs, which are not supported.\n\nInstead, use the Perl logic of always passing bucket.endpoint in the request no matter what host is used for the HTTPS connection.\n\nIt's an open question whether we should support path-style URLs but since we don't it's useless to tell the server otherwise.  Note that Amazon S3 has deprecated path-style URLs and they are no longer supported on newly created buckets."
    },
    {
        "commit": "5f92c36b30072edb71b12f79163c37c67d9806bc",
        "date": "2019-06-04 08:04:33 -0400",
        "subject": "Fix erroneous parameter name.",
        "body": "The exists() function only checks for files so the parameter name should reflect that."
    },
    {
        "commit": "0945d9666b5af1a5893ba0b4537e9cd1f72be478",
        "date": "2019-06-01 11:09:01 -0400",
        "subject": "Bring back PATH_PAX for platforms that don't define it.",
        "body": "This define was replaced in 8c712d89 with limits.h but that caused an issue with the hurd-i386 build for Debian which apparently does not define this value."
    },
    {
        "commit": "a207af79215d05539825c484dbfa9aa2a26cf7d0",
        "date": "2019-06-01 09:44:40 -0400",
        "subject": "Fix mismatched log/test macros."
    },
    {
        "commit": "12bca3c43eb2ee0df80ef5e10850657b52fb680b",
        "date": "2019-06-01 09:28:31 -0400",
        "subject": "Add CPPFLAGS to compile rules.",
        "body": "This should silence the last of the Debian package warnings."
    },
    {
        "commit": "388ba0458c37ab4e8b82df0c0fa2b6a4d7462ecb",
        "date": "2019-05-31 18:37:31 -0400",
        "subject": "Fix build.flags being removed on each build.",
        "body": "This was being removed by rsync which forced a full build even when a partial should have been fine.  Rewrite the file after the rsync so it is preserved."
    },
    {
        "commit": "6cba50c3f23a7a7822ae0fd03ff3b5a3f6d8a32a",
        "date": "2019-05-31 18:32:40 -0400",
        "subject": "Remove Debian package patch merged to upstream."
    },
    {
        "commit": "3a5fd7b28a79c1564ddd2b5bad36d4d4be358453",
        "date": "2019-05-30 11:19:59 -0400",
        "subject": "Fix typo in macro name."
    },
    {
        "commit": "a2ec1253e97805e2a3b990d8bc23c98ab8013d09",
        "date": "2019-05-30 10:44:35 -0400",
        "subject": "Add code classification exclusion missed in 3e1b06ac."
    },
    {
        "commit": "64260b2e9878944116dc78812a3a21633c5f3d15",
        "date": "2019-05-29 08:38:45 -0400",
        "subject": "Build all docs with S3 using --var=s3-all=y",
        "body": "Force repo-type=s3 for all tests.  This is not currently the default for any OS builds."
    },
    {
        "commit": "404284b90ff0f67fe29fa5a7b2831ebf51d459aa",
        "date": "2019-05-28 12:18:05 -0400",
        "subject": "Add internal flag for commands.",
        "body": "Allow commands to be skipped by default in the command help but still work if help is requested for the command directly.  There may be other uses for the flag in the future.\n\nUpdate help for ls now that it is exposed."
    },
    {
        "commit": "20e5b92f366848ec1464e2272c6af2c29ac7b36d",
        "date": "2019-05-28 10:03:48 -0400",
        "subject": "Add ls command.",
        "body": "Allows listing repo paths/files from the command-line, to be used primarily for testing and debugging.\n\nThis command is internal-only so the interface may change at any time without notice."
    },
    {
        "commit": "3b3327eae6dd14f67f1002f094bd33ab7785f765",
        "date": "2019-05-28 09:50:59 -0400",
        "subject": "Move tls/http statistics output to command/command.",
        "body": "This module already has the filtering required to keep these messages from being displayed by default for commands that output to stdout (e.g. info)."
    },
    {
        "commit": "3e1b06acaa84399abcfaa8c684f437b63aa38de5",
        "date": "2019-05-27 07:37:20 -0400",
        "subject": "Use minio as local S3 emulator in documentation.",
        "body": "The documentation was relying on a ScalityS3 container built for testing which wasn't very transparent.  Instead, use the stock minio container and configure it in the documentation.\n\nAlso, install certificates and CA so that TLS verification can be enabled."
    },
    {
        "commit": "a474ba54c5c9c7bdba6ffa3e92671bb9565889f6",
        "date": "2019-05-26 12:41:15 -0400",
        "subject": "Refactoring path support in the storage module.",
        "body": "Not all storage types support paths as a physical thing that must be created/destroyed.  Add a feature to determine which drivers use paths and simplify the driver API as much as possible given that knowledge and by implementing as much path logic as possible in the Storage object.\n\nRemove the ignoreMissing parameter from pathSync() since it is not used and makes little sense.\n\nCreate a standard list of error messages for the drivers to use and apply them where the code was modified -- there is plenty of work still to be done here."
    },
    {
        "commit": "38f28bd52081405321939fec66046bd9ada35c23",
        "date": "2019-05-26 12:32:49 -0400",
        "subject": "Log TLS and HTTP statistics on exit.",
        "body": "These stats measure how efficiently TLS and HTTP are reusing connections."
    },
    {
        "commit": "819eda0818669ea9cc45bcd65c57e3b4c7d29129",
        "date": "2019-05-26 12:29:29 -0400",
        "subject": "Set log level of protocol processing functions to debug.",
        "body": "Setting these to trace effectively made debug level useless in local/remote processes since all debug messages were demoted to trace when called from these functions."
    },
    {
        "commit": "d12d94c53c466eb808459b98669a877c19b5716b",
        "date": "2019-05-24 18:09:16 -0400",
        "subject": "Make info(), pathCreate() and pathSync() optional for storage drivers.",
        "body": "These functions are not required for repository storage so make them optional and error if they are not implemented for non-repository storage, .e.g. pg or spool.\n\nThe goal is to simplify the drivers (e.g. S3) that are intended only for repository storage."
    },
    {
        "commit": "39645fc1a99540063399a7a3b86177a330bd743c",
        "date": "2019-05-24 14:33:47 -0400",
        "subject": "Add pathRemove() and remove() to S3 storage.",
        "body": "These functions will be needed for the expire command."
    },
    {
        "commit": "6c385dfa7a7f489159c06c5a31fd3cd7c77c39a8",
        "date": "2019-05-24 13:56:38 -0400",
        "subject": "Add function to determine if HTTP response code is OK.",
        "body": "OK responses are a range rather than a single value, so simplify the check with a function."
    },
    {
        "commit": "96770c529be4df408b9d1fc39fc5157e90555375",
        "date": "2019-05-24 13:12:56 -0400",
        "subject": "storageList() returns an empty list by default for missing paths.",
        "body": "The prior behavior was to return NULL so the caller would know the path was missing, but this is rarely useful, complicates the calling code, and increases the chance of segfaults.\n\nThe .nullOnMissing param has been added to enable the prior behavior."
    },
    {
        "commit": "707e4a29f04a733cff868f37b90f8bf83a02394c",
        "date": "2019-05-24 11:09:43 -0400",
        "subject": "Notify compiler that cryptoErrorCode() does not return."
    },
    {
        "commit": "01f3024b5c0a83819d58ee6ccc2edb5109277aaa",
        "date": "2019-05-24 11:06:11 -0400",
        "subject": "Add missing const qualifier."
    },
    {
        "commit": "39cb6248314e21530924886e6e669ac395daeeb1",
        "date": "2019-05-24 07:45:03 -0400",
        "subject": "Add missing menus to the new user guides.",
        "body": "Since the CentOS 6/7 user guides were generated as a single page they did not get menus.  Generate the entire site for each user guide so menus are included."
    },
    {
        "commit": "04f8b4ea52f89d1542b25d2fb0ba28a43ddaba6d",
        "date": "2019-05-24 07:41:55 -0400",
        "subject": "Use git url for website clone."
    },
    {
        "commit": "ec9622cde883c649c1346cbc0b9057e7f3fcb787",
        "date": "2019-05-22 18:54:49 -0400",
        "subject": "Use the git log to ease release note management.",
        "body": "The release notes are generally a direct reflection of the git log.  So, ease the burden of maintaining the release notes by using the git log to determine what needs to be added.\n\nCurrently only non-dev items are required to be matched to a git commit but the goal is to account for all commits.\n\nThe git history cache is generated from the git log but can be modified to correct typos and match the release notes as they evolve.  The commit hash is used to identify commits that have already been added to the cache.\n\nThere's plenty more to do here.  For instance, links to the commits for each release item should be added to the release notes."
    },
    {
        "commit": "86482c7db943375d48fcee0e243ca96bdf50d35c",
        "date": "2019-05-22 18:23:44 -0400",
        "subject": "Reduce log level for all expect tests to detail.",
        "body": "The C code is designed to be efficient rather than deterministic at the debug log level.  As we move more testing from integration to unit tests it makes less sense to try and maintain the expect logs at this log level.\n\nMost of the expect logs have already been moved to detail level but mock/all still had tests at debug level.  Change the logging defaults in the config file and remove as many references to log-level-console as possible."
    },
    {
        "commit": "e4cc008b982d47ac526962e310c18626e2aefbc2",
        "date": "2019-05-22 11:31:38 -0400",
        "subject": "Remove duplicated hint.",
        "body": "At some point this hint got added to the underlying code so it is no longer needed here."
    },
    {
        "commit": "ff9c1bed5de380a6e7df1cbc6870b972d93b3dc4",
        "date": "2019-05-22 11:24:18 -0400",
        "subject": "Save cipher-pass key/value missed in f492f057.",
        "body": "This value is required when encryption is enabled.\n\nIn passing simplify the expression used to skip the checksum when calculating the checksum."
    },
    {
        "commit": "3da60f4b5ee8ed663fc5e8d8968709dbaadee1f6",
        "date": "2019-05-22 11:10:43 -0400",
        "subject": "Don't escape / when rendering JSON.",
        "body": "/ is escaped in the spec but the Perl renderer we use does not escape it which leads to checksum mismatches between the two sets of code.\n\nThis particular escape seems to be a more recent addition to the spec and is targeted toward embedding JSON in JavaScript.\n\n\\/ is still allowed when parsing JSON."
    },
    {
        "commit": "664054fea94186374dcae84e31e0cd7329c279d0",
        "date": "2019-05-22 06:55:31 -0400",
        "subject": "Remove RHEL package patch merged to upstream."
    },
    {
        "commit": "e1cce9c6147446c026f528cc4afe518de0bcb87f",
        "date": "2019-05-21 14:07:35 -0400",
        "subject": "Remove extraneous parens."
    },
    {
        "commit": "936b8a289c4884dd22f7ff0d3d624d6e70980512",
        "date": "2019-05-21 10:37:30 -0400",
        "subject": "Allow separate paragraphs in release items.",
        "body": "The first paragraph should match the first line of the commit message as closely as possible.  The following paragraphs add more information.\n\nRelease items have been updated back to 2.01."
    },
    {
        "commit": "e3fe3434b4428398ffbee5359f0e0cdec8e55bcb",
        "date": "2019-05-21 10:14:41 -0400",
        "subject": "Rename repo-s3-verify-ssl option to repo-s3-verify-tls.",
        "body": "The new name is preferred because pgBackRest does not support any SSL protocol versions (they are all considered to be insecure).\n\nThe old name will continue to be accepted."
    },
    {
        "commit": "1bc84c647490d6cf78975b5dde5b1937016d24c6",
        "date": "2019-05-20 17:07:37 -0400",
        "subject": "The local command for restore is implemented entirely in C.",
        "body": "This is just the part of restore run by the local helper processes, not the entire command.\n\nEven so, various optimizations in the code (like connection reuse and optimizations for zero-length files) should make the restore command faster on object stores."
    },
    {
        "commit": "a839830333490555800377ea095d756765f476e4",
        "date": "2019-05-20 16:19:14 -0400",
        "subject": "Add most unimplemented functions to the remote storage driver.",
        "body": "Add pathCreate(), pathRemove(), pathSync(), and remove() to the driver."
    },
    {
        "commit": "bbf2e0d5b0876d3663cc69d10925c6e0d08cd729",
        "date": "2019-05-20 12:24:43 -0400",
        "subject": "Remove extra linefeed."
    },
    {
        "commit": "a9f589b87a09bd37ad903b5c37bcd3000d47840d",
        "date": "2019-05-20 12:23:40 -0400",
        "subject": "Begin v2.15 development."
    },
    {
        "commit": "0f685a33a02adde45792711b957a75391fc5f34e",
        "date": "2019-05-20 11:51:58 -0400",
        "subject": "v2.14: Bug Fix and Improvements"
    },
    {
        "commit": "51d67ce1ba932476b2349dbe611f77ab4f15213d",
        "date": "2019-05-16 09:59:34 -0400",
        "subject": "Update contributor name."
    },
    {
        "commit": "2b75f57232e3d2c983e0a703b6807dadd0b4c0e6",
        "date": "2019-05-16 09:56:48 -0400",
        "subject": "Add linefeeds for clarity."
    },
    {
        "commit": "19d8358cba0064392cd519e7bce66bb3dcce3dc9",
        "date": "2019-05-16 09:53:55 -0400",
        "subject": "Update mock/expire module test matrix so expect tests output.",
        "body": "Also add an error message to prevent regression."
    },
    {
        "commit": "c51274d1b6a85aeb8ecf1dfffcdc68a503ac3de9",
        "date": "2019-05-16 08:32:02 -0400",
        "subject": "Add user guides for CentOS/RHEL 6/7.",
        "body": "It would be better if the documentation could be generated on multiple operating systems all in one go, but the doc system currently does not allow vars to be changed once they are set.\n\nThe solution is to run the docs for each required OS and stitch the documentation together.  It's not pretty but it works and the automation in release.pl should at least make it easy to use."
    },
    {
        "commit": "bc7b42e71811e1b3231c1386496efbdf8338e086",
        "date": "2019-05-16 07:35:45 -0400",
        "subject": "Restore index menu url default lost in b85e51d6.",
        "body": "The url for the menu item referring to the index (i.e. site root page) should use {[project-url-root]}.\n\nThis allows the url to be set to different values depending on the location of the index."
    },
    {
        "commit": "a4561dc0879fd1fb383ecbeafa6936729a515190",
        "date": "2019-05-16 07:29:17 -0400",
        "subject": "Add --out-preserve to preserve contents of output path.",
        "body": "Useful for building a single set of documentation over multiple doc.pl runs."
    },
    {
        "commit": "bc30027d730e4ce7090919406eb0d7f5c7f7e51e",
        "date": "2019-05-16 07:04:28 -0400",
        "subject": "Fix typo in doc.pl command-line help."
    },
    {
        "commit": "18d4cb574180d279dbbdabd8b87b9dab43115659",
        "date": "2019-05-15 13:14:58 -0400",
        "subject": "Bypass database checks when stanza-delete issued with force.",
        "body": "Previously it was not possible to delete a stanza if the PostgreSQL server could not be contacted."
    },
    {
        "commit": "5c1d4bcd0d41590e722f2d184cf64a62b740625c",
        "date": "2019-05-15 13:04:56 -0400",
        "subject": "Automate coverage summary report generation.",
        "body": "This report replaces the lcov report that was generated manually for each release.\n\nThe lcov report was overly verbose just to say that we have virtually 100% coverage."
    },
    {
        "commit": "5bba72b87445f3edd2c7a2e636ffcb46cac5d9dd",
        "date": "2019-05-15 12:55:08 -0400",
        "subject": "Remove -Wswitch-enum compiler option.",
        "body": "The -Wswitch option included in -Wall provides the same level of coverage and allows enum options to be grouped into default."
    },
    {
        "commit": "53f6232264f27a029d3f6261c75a16585ade1951",
        "date": "2019-05-14 10:35:39 -0400",
        "subject": "Improve coverage in config/parse module."
    },
    {
        "commit": "1e5ab69cada2862cbc458ae322bdc166c244f0f8",
        "date": "2019-05-13 19:10:24 -0400",
        "subject": "Improve coverage in config/config module."
    },
    {
        "commit": "57281d479296627e30cccd00c089f3fb40a076ca",
        "date": "2019-05-13 18:05:54 -0400",
        "subject": "Add MAX_ASSIGN() macro.",
        "body": "This improves coverage in cases where the compared values may be always ascending or descending."
    },
    {
        "commit": "15a33bf74be84bda822e96c91e37479419b451a9",
        "date": "2019-05-13 17:10:41 -0400",
        "subject": "Error on multiple option alternate names and simplify help command.",
        "body": "There are currently no options with multiple alternate (deprecated) names so the code to render them in the help command could not be covered.\n\nRemove the uncovered code and add an error when multiple alternate names are configured.  It's not clear that the current code was handling this correctly, so it will need to be reviewed if it comes up again."
    },
    {
        "commit": "2d2bec842a2c424d5a36c98dc3a465da1696caf4",
        "date": "2019-05-13 13:36:24 -0400",
        "subject": "Improve coverage in perl/exec module."
    },
    {
        "commit": "431532574b1e2e59979bd6cf3c333979d0817ad2",
        "date": "2019-05-13 07:51:11 -0400",
        "subject": "Add testUser() and testGroup().",
        "body": "Retrieve the name of the current user/group used for testing."
    },
    {
        "commit": "31d0fe5f50a1a061c3ffbf7d194fafffee6a34b7",
        "date": "2019-05-11 18:20:57 -0400",
        "subject": "Improve log performance, simplify macros, rename logWill() to logAny().",
        "body": "Pre-calculate the value used by logAny() to improve performance and make it more likely to be inlined.\n\nMove IF_LOG_ANY() into LOG_INTERNAL() to simplify the macros and improve performance of LOG() and LOG_PID().  If the message has no chance of being logged there's no reason to call logInternal().\n\nRename logWill() to logAny() because it seems more intuitive."
    },
    {
        "commit": "87f36e814ea95696870711018c050725e8e7269f",
        "date": "2019-05-11 14:51:51 -0400",
        "subject": "Improve macros and coverage rules that were hiding missing coverage.",
        "body": "The branch coverage exclusion rules were overly broad and included functions that ended in a capital letter, which disabled all coverage for the statement.  Improve matching so that all characters in the name must be upper-case for a match.\n\nSome macros with internal branches accepted parameters that might contain conditionals.  This made it impossible to tell which branches belonged to which, and in any case an overzealous exclusion rule was ignoring all branches in such cases.  Add the DEBUG_COVERAGE flag to build a modified version of the macros without any internal branches to be used for coverage testing.  In most cases, the branches were optimizations (like checking logWill()) that improve production performance but are not needed for testing.  In other cases, a parameter needed to be added to the underlying function to handle the branch during coverage testing.\n\nAlso tweak the coverage rules so that macros without conditionals are automatically excluded from branch coverage as long as they are not themselves a parameter.\n\nFinally, update tests and code where missing coverage was exposed by these changes.  Some code was updated to remove existing coverage exclusions when it was a simple change."
    },
    {
        "commit": "f819a32cdf94bc799a4902ab6aaa559cd11d4ef8",
        "date": "2019-05-11 07:57:49 -0400",
        "subject": "Improve efficiency of FUNCTION_LOG*() macros.",
        "body": "Call stackTraceTestStop()/stackTraceTestStart() once per block instead of with every param call.  This was done to be cautious but is not necessary and slows down development.\n\nThese functions were never built into production so had no impact there."
    },
    {
        "commit": "7e2f6a6a4365b48fc89672b5d7de4c1d8937caa6",
        "date": "2019-05-09 12:28:39 -0400",
        "subject": "Clarify that sort order must be ascending."
    },
    {
        "commit": "f0f105ddeca7b3434d9c3bb78e25247b3c6b7584",
        "date": "2019-05-09 12:10:46 -0400",
        "subject": "Improve filter's notion of \"done\" to optimize filter processing.",
        "body": "Filters had different ideas about what \"done\" meant and this added complication to the group filter processing.  For example, gzip decompression would detect end of stream and mark the filter as done before it had been flushed.\n\nImprove the IoFilter interface to give a consistent definition of done across all filters, i.e. no filter can be done until it has started flushing no matter what the underlying driver reports.  This removes quite a bit of tricky logic in the processing loop which tried to determine when a filter was \"really\" done.\n\nAlso improve management of the input buffers by pointing directly to the prior output buffer (or the caller's input) to eliminate loops that set/cleared these buffers."
    },
    {
        "commit": "d5fac35fe3efe79f2b39a0e1b5ad3bb1cb1dd173",
        "date": "2019-05-09 09:53:24 -0400",
        "subject": "Improve zero-length content handling in HttpClient object.",
        "body": "If content was zero-length then the IO object was not created.  This put the burden on the caller to test that the IO object existed before checking eof.\n\nInstead, create an IO object even if it will immediately return eof.  This has little cost and makes the calling code simpler.\n\nAlso add an explicit test for zero-length files in S3 and a few assertions."
    },
    {
        "commit": "15531151d7b3c07f51c442cb8951a5781bcc39d4",
        "date": "2019-05-09 08:55:48 -0400",
        "subject": "Add --c option to request a C remote.",
        "body": "The rules for when a C remote is required are getting complicated and will get worse when restoreFile() is migrated.\n\nInstead, set the --c option when a C remote is required.  This option will be removed when the remote is entirely implemented in C."
    },
    {
        "commit": "c99c7c458b0a04d1f1a637be70bb4f8e8011feb0",
        "date": "2019-05-09 08:28:58 -0400",
        "subject": "Add pathExists() to Storage object.",
        "body": "The S3 driver did not get an implementation since S3 has a weak notion of paths, and it is not currently required."
    },
    {
        "commit": "cb00030ee38148a99df9d5ddcaef64252b0b50c9",
        "date": "2019-05-08 18:58:07 -0400",
        "subject": "Remove dead code missed in 1b486847.",
        "body": "This commit removed all Perl references to spool storage but some stuff was left behind."
    },
    {
        "commit": "f1eea2312104ce7fa87119d6ef50a554b154e954",
        "date": "2019-05-03 18:52:54 -0400",
        "subject": "Add macros for object free functions.",
        "body": "Most of the *Free() functions are pretty generic so add macros to make creating them as easy as possible.\n\nCreate a distinction between *Free() functions that the caller uses to free memory and callbacks that free third-party resources.  There are a number of cases where a driver needs to free resources but does not need a normal *Free() because it is handled by the interface.\n\nAdd common/object.h for macros that make object maintenance easier.  This pattern can also be used for many more object functions."
    },
    {
        "commit": "7ae96949f18af90a9b07f1dd712f939ca7a1ec41",
        "date": "2019-05-03 18:09:58 -0400",
        "subject": "Various MemContext callback improvements.",
        "body": "Rename memContextCallback() to memContextCallbackSet() to be more consistent with other parts of the code.\n\nFree all context memory when an exception is thrown from a callback.  Previously only the child contexts would be freed and this resulted in some allocations being lost.  In practice this is probably not a big deal since the process will likely terminate shortly, but there may well be cases where that is not true."
    },
    {
        "commit": "4a20d44c6b118143f1c1607bacac0d4e268f6ffe",
        "date": "2019-05-03 17:49:57 -0400",
        "subject": "Add common/macro.h for general-purpose macros.",
        "body": "Add GLUE() macro which is useful for creating identifiers.\n\nMove MACRO_TO_STR() here and rename it STRINGIFY().  This appears to be the standard name for this type of macro and it is also an awesome name."
    },
    {
        "commit": "32ca27a20b13941cfab27672d6f383a0ba44fa20",
        "date": "2019-05-03 15:46:15 -0400",
        "subject": "Simplify storage object names.",
        "body": "Remove \"File\" and \"Driver\" from object names so they are shorter and easier to keep consistent.\n\nAlso remove the \"driver\" directory so storage implementations are visible directly under \"storage\"."
    },
    {
        "commit": "8c712d89ebe10e3d318952a0b4db8cd09f8a580c",
        "date": "2019-05-02 17:52:24 -0400",
        "subject": "Improve type safety of interfaces and drivers.",
        "body": "The function pointer casting used when creating drivers made changing interfaces difficult and led to slightly divergent driver implementations.  Unit testing caught production-level errors but there were a lot of small issues and the process was harder than it should have been.\n\nUse void pointers instead so that no casts are required.  Introduce the THIS_VOID and THIS() macros to make dealing with void pointers a little safer.\n\nSince we don't want to expose void pointers in header files, driver functions have been removed from the headers and the various driver objects return their interface type.  This cuts down on accessor methods and the vast majority of those functions were not being used.  Move functions that are still required to .intern.h.\n\nRemove the special \"C\" crypto functions that were used in libc and instead use the standard interface."
    },
    {
        "commit": "28359eea83206f6eeddd3fbc91a52cd42399e529",
        "date": "2019-05-02 16:33:23 -0400",
        "subject": "Update code count rules missed in 027c2638."
    },
    {
        "commit": "0c816f94814767dd96040aa2cb299dfa169d59e5",
        "date": "2019-05-02 15:19:26 -0400",
        "subject": "Update comments for storageExists() and driver functions."
    },
    {
        "commit": "498017bcf02560e101703e89b1119d0b48944835",
        "date": "2019-05-02 12:43:09 -0400",
        "subject": "Various Buffer improvements.",
        "body": "Add bufDup() and bufNewUsedC().\n\nArrange bufNewC() params to match bufNewUsedC() since they have always seemed backward.\n\nFix bufHex() to only render the used portion of the buffer and fix some places where used was not being set correctly.\n\nUse a union to make macro assignments for all legal values without casting.  This is much more likely to catch bad assignments."
    },
    {
        "commit": "59234f249e73a4038ee1ba5d2e80f8acc11640ce",
        "date": "2019-04-29 18:36:57 -0400",
        "subject": "Use THROW_ON_SYS_ERROR*() to improve code coverage.",
        "body": "There is only one instance in the core code where this helps. It is mostly helpful in the tests.\n\nThere is an argument to be made that only THROW_SYS_ERROR*() variants should be used in the core code to improve test coverage.  If so, that will be the subject of a future commit."
    },
    {
        "commit": "683b096e187605c5cf16a727cd2c413540e4d150",
        "date": "2019-04-29 18:03:32 -0400",
        "subject": "Don't append strerror() to error message when errno is 0.",
        "body": "Some functions (e.g. getpwnam()/getgrnam()) will return an error but not set errno.  In this case there's no use in appending strerror(), which will be \"Success\".  This is confusing since an error has just been reported.\n\nAt least in the examples above, an error with no errno set just means \"missing\" and our current error message already conveys that."
    },
    {
        "commit": "6ad44db9a0a30ad933a6ca8012de52558b7b9c02",
        "date": "2019-04-29 17:30:06 -0400",
        "subject": "Merge duplicated contributor."
    },
    {
        "commit": "518bba1ed950633746f33474cbfa90f76324e345",
        "date": "2019-04-29 17:22:01 -0400",
        "subject": "Add missing assert."
    },
    {
        "commit": "af33126cb68915db9644ca941fc2490d09107b0c",
        "date": "2019-04-29 17:17:14 -0400",
        "subject": "Allow StorageFileWrite to set user, group, and modification time.",
        "body": "The S3 driver will throw an error if these options are set since they are not supported."
    },
    {
        "commit": "d0c296bd5b67966fd35fd9f70c25788dd6de0c34",
        "date": "2019-04-29 16:10:27 -0400",
        "subject": "Fix segfault when process-max > 8 for archive-push/archive-get.",
        "body": "The remote list was at most 9 (based on pg[1-8]-* max index) so anything over 8 wrote into unallocated memory.\n\nThe remote for the main process is (currently) stored in position zero so do the same for remotes started from locals, since there should only be one.  The main process will need to start more remotes in the future which is why there is extra space."
    },
    {
        "commit": "c935b1c9e83d6f14644de3aa5f36011234e69423",
        "date": "2019-04-29 15:20:54 -0400",
        "subject": "Add missing httpUriEncode() in S3 request.",
        "body": "This was not a live bug since the files currently handled by C can't have special characters in them."
    },
    {
        "commit": "62b48d8a5a9bb7aa962e96566073dd58cfdb4436",
        "date": "2019-04-29 15:14:10 -0400",
        "subject": "Allow storageInfo() to follow links.",
        "body": "This allows info to be retrieved from linked files/paths in a single step."
    },
    {
        "commit": "60edadf71dbbe6c82c5a83bcebee36a16b42ed88",
        "date": "2019-04-29 14:54:49 -0400",
        "subject": "Expose handle (file descriptor) from IoWrite when applicable.",
        "body": "This is a followup to dee90d3e which exposed file handles for IoRead.\n\nAlso expose handle for StorageDriverPosixFileRead missed in dee90d3e."
    },
    {
        "commit": "e2141cc05faa4032f7da55afacc57bf17ce11838",
        "date": "2019-04-29 14:23:37 -0400",
        "subject": "Add missing space."
    },
    {
        "commit": "027c2638719dffa9ba99250085c403e89a2a8a9a",
        "date": "2019-04-26 08:08:23 -0400",
        "subject": "Add configure script for improved multi-platform support.",
        "body": "Use autoconf to provide a basic configure script. WITH_BACKTRACE is yet to be migrated to configure and the unit tests still use a custom Makefile.\n\nEach C file must include \"build.auto.conf\" before all other includes and defines.  This is enforced by test.pl for includes, but it won't detect incorrect define ordering.\n\nUpdate packages to call configure and use standard flags to pass options."
    },
    {
        "commit": "3505559a808855600016dc73c5aec3843e51bfaf",
        "date": "2019-04-24 13:23:32 -0400",
        "subject": "Update test containers with PostgreSQL minor releases and liblz4.",
        "body": "Update RHEL repos that have changed upstream.  Remove PostgreSQL 9.3 since the RHEL6/7 packages have disappeared.\n\nRemove PostgreSQL versions from U12 that are still getting minor updates so the container does not need to be rebuilt.\n\nLZ4 is included for future development, but this seems like a good time to add it to the containers."
    },
    {
        "commit": "1ae8a6a71665c12bec6e20741df29ba4792bf8f8",
        "date": "2019-04-23 20:52:03 -0400",
        "subject": "Add build-max option to set max build processes.",
        "body": "Currently this controls make processes via -j."
    },
    {
        "commit": "c11c936366fd93a6cdb143d7d93a1d8f249ee9c2",
        "date": "2019-04-23 20:19:31 -0400",
        "subject": "Reduce ScalityS3 processes since only two are needed."
    },
    {
        "commit": "52b0b81976df5583ebe12189d8697dd66d23e84b",
        "date": "2019-04-23 19:33:55 -0400",
        "subject": "Add storageInfoList() to get detailed info about all entries in a path.",
        "body": "The function provides all the file/path/link information required to build a backup manifest.\n\nAlso update storageInfo() to provide the same information for a single file."
    },
    {
        "commit": "f492f0571b145d499f4ff9017219794a5a3c7a1b",
        "date": "2019-04-23 17:08:34 -0400",
        "subject": "Add *Save() functions to most Info objects.",
        "body": "At the same time change the way that load constructors work (and are named) so that Ini objects do not persist after the constructors complete.\n\ninfoArchiveSave() is excluded from this commit since it is just a trivial call to infoPgSave() and won't be required soon."
    },
    {
        "commit": "f41112a4634421071d80686ae19042c652576cb3",
        "date": "2019-04-23 14:02:30 -0400",
        "subject": "Add harnessInfoChecksum/Z() to ease creation of test info files."
    },
    {
        "commit": "aebac47cd5fa21f6e62ee3dce3ef13abf59ca61f",
        "date": "2019-04-23 13:58:19 -0400",
        "subject": "Extern infoHash() so it can be used by other modules.",
        "body": "This is currently needed only for testing, but there's no reason not to expose the function to everyone."
    },
    {
        "commit": "cddb0c05b444aaed388e53e0cd0b02148307ca87",
        "date": "2019-04-23 13:03:22 -0400",
        "subject": "Add iniSave() and iniMove() to Ini object.",
        "body": "iniSave() sorts alphabetically to maintain compatibility with the expect tests, but we plan to change this behavior when the migration is complete."
    },
    {
        "commit": "c650134a0414c154eb21609b363aeceafbfdda60",
        "date": "2019-04-22 18:46:29 -0400",
        "subject": "Add ioWriteStr() and ioWriteStrLine().",
        "body": "These function names make it clearer what is being written.\n\nThe old ioWriteLine() has been repurposed to write buffers."
    },
    {
        "commit": "81f652137c8f3179aad24d3283a4141b0075ae66",
        "date": "2019-04-22 18:41:01 -0400",
        "subject": "Add separate functions to encode/decode each JSON type.",
        "body": "In most cases the JSON type is known so this is more efficient than converting to Variant first, both in terms of memory and time.\n\nAlso rename some of the existing functions for consistency."
    },
    {
        "commit": "f100ea0ff44e173299e8f691115b9e7ce68d422b",
        "date": "2019-04-22 17:52:23 -0400",
        "subject": "Add constant for maximum buffer sizes required by cvt*() functions.",
        "body": "Also update Variant to use cvt*() in all cases.  Variant was written before these functions were available and not all cases were updated."
    },
    {
        "commit": "f5739051eba3dae6cbee6d1fc0f72c36705c3be1",
        "date": "2019-04-22 17:17:56 -0400",
        "subject": "Add true and false String constants."
    },
    {
        "commit": "47491e3c47e84be17263ce3b897ab3fcd8879a3f",
        "date": "2019-04-22 16:04:04 -0400",
        "subject": "varNewKv() accepts a KeyValue object rather than creating one.",
        "body": "This allows for more flexibility about when the Variant is created."
    },
    {
        "commit": "fdf19e5ab68c64f6c063c265bd3ddc5b39b56620",
        "date": "2019-04-22 09:00:50 -0400",
        "subject": "Refactor Ini interface to expose String values instead of Variant.",
        "body": "Variants were being used to expose String and StringList types but this can be done more simply with an additional method.\n\nUsing only strings also allows for a more efficient implementation down the road."
    },
    {
        "commit": "cc39bddc15b7cb5bba5dd8443325ee199e8aa12b",
        "date": "2019-04-22 08:47:32 -0400",
        "subject": "Refactor main() as a switch() statement.",
        "body": "This makes it clearer what has been migrated and where the new C implementations should go."
    },
    {
        "commit": "38286272596d7b53b88c3f4f081d6c7dfc9360d8",
        "date": "2019-04-21 14:59:32 -0400",
        "subject": "Fix missing const."
    },
    {
        "commit": "e7255be108b6b85bb736934b19abdef32cbd39e8",
        "date": "2019-04-20 11:25:04 -0400",
        "subject": "Only process next filter in IoFilterGroup when input buffer is full or flushing.",
        "body": "This greatly reduces calls to filter processing, which is a performance benefit, but also makes the trace logs smaller and easier to read.\n\nHowever, this means that ioWriteFlush() will no longer work with filters since a full flush of IoFilterGroup would require an expensive reset.  Currently ioWriteFlush() is not used in this scenario so for now just add an assert to ensure it stays that way."
    },
    {
        "commit": "e513c52c0973772465a81a5db2ba18d0f956d686",
        "date": "2019-04-20 08:16:17 -0400",
        "subject": "Add macros to create constant Buffer objects.",
        "body": "These are more efficient than creating buffers in place when needed.\n\nAfter replacement discovered that bufNewStr() and BufNewZ() were not being used in the core code so removed them.  This required using the macros in tests which is not the usual pattern."
    },
    {
        "commit": "c9168028c6c43d535a5663cb17ce93945951cb7e",
        "date": "2019-04-19 14:38:11 -0400",
        "subject": "Improve performance of non-blocking reads by using maximum buffer size.",
        "body": "Since the introduction of blocking read drivers (e.g. IoHandleRead, TlsClient) the non-blocking drivers have used the same rules for determining maximum buffer size, i.e. read only as much as requested.  This is necessary so the blocking drivers don't get stuck waiting for data that might not be coming.\n\nInstead mark blocking drivers so IoRead knows how much buffer to allow for the read.  The non-blocking drivers can now request the maximum number of bytes allowed by buffer-size."
    },
    {
        "commit": "0c866f52c69ee2bd6af20e67af78bad94c4048af",
        "date": "2019-04-19 11:40:39 -0400",
        "subject": "Update code to use new unsigned int Variant type and config methods."
    },
    {
        "commit": "9f0829cbf2fcd9be869cac21fbf974fd7ecce019",
        "date": "2019-04-19 11:29:08 -0400",
        "subject": "Add cfgOptionUInt() and cfgOptionUInt64().",
        "body": "These are better than casting from cfgOptionInt() since bounds checking is performed."
    },
    {
        "commit": "1adcbc5c913bddac3a2078b2c5b7329617fa504c",
        "date": "2019-04-19 11:22:43 -0400",
        "subject": "Add unsigned int Variant type.",
        "body": "This is better than using (unsigned int)varUInt64() because bounds checking is performed."
    },
    {
        "commit": "c45ae5f221ba9cc5e65f585920cc1ea23e3dd293",
        "date": "2019-04-19 08:41:17 -0400",
        "subject": "Begin v2.14 development."
    },
    {
        "commit": "41f3874822faf3f859f46867c0fe965f7156b123",
        "date": "2019-04-18 21:26:02 -0400",
        "subject": "v2.13: Bug Fixes"
    },
    {
        "commit": "7390952d8e99649077a6d4b577a483e6c38a3ecd",
        "date": "2019-04-18 21:24:10 -0400",
        "subject": "Harden IO filters against zero input and optimize zero output case.",
        "body": "Add production checks to ensure no filter gets a zero-size input buffer.\n\nAlso, optimize the case where a filter returns no output.  There's no sense in running downstream filters if they have no new input."
    },
    {
        "commit": "2d73de1d360e0b7bc66b4db9e6b3a0e441927230",
        "date": "2019-04-18 21:21:35 -0400",
        "subject": "Fix zero-length reads causing problems for IO filters that did not expect them.",
        "body": "The IoRead object was passing zero-length buffers into the filter processing code but not all the filters were happy about getting them.\n\nIn particular, the gzip compression filter failed if it was given no input directly after it had flushed all of its buffers.  This made the problem rather intermittent even though a zero-length buffer was being passed to the filter at the end of every file.  It also explains why tweaking compress-level or buffer-size allowed the file to go through.\n\nSince this error was happening after all processing had completed, there does not appear to be any risk that successfully processed files were corrupted."
    },
    {
        "commit": "670fa88a98c7e12c4e2e948d92476918d3048f7e",
        "date": "2019-04-18 13:21:24 -0400",
        "subject": "Add CHECK() macro for production assertions.",
        "body": "CHECK() works just like ASSERT() but is kept in production builds."
    },
    {
        "commit": "b258aec0adcf6fdaf7a2494c66f1540aa720e345",
        "date": "2019-04-18 13:19:05 -0400",
        "subject": "Move lockRelease() to the end of exitSafe().",
        "body": "Releasing the lock too early was allowing other async processes to sneak in and start running before the current process was completely shut down.\n\nThe only symptom seems to have been mixed up log messages so not a very serious issue."
    },
    {
        "commit": "b960919cf7322f03ee4f9681f0cb06da6b4c52de",
        "date": "2019-04-18 10:36:21 -0400",
        "subject": "Fix reliability of error reporting from local/remote processes.",
        "body": "Asserts were only only reported on stderr rather than being returned through the protocol layer.  This did not appear to be very reliable.\n\nInstead, report the assert through the protocol layer like any other error.  Add a stack trace if an assert error or debug logging is enabled."
    },
    {
        "commit": "281d2848b92bf7dba36018127cb9238662d7875b",
        "date": "2019-04-17 18:39:35 -0400",
        "subject": "Option to build documentation from current apt.postgres.org packages.",
        "body": "This is useful for testing any issue currently being seen in the field.\n\nWe'll also need to add a \"yum\" option at some point."
    },
    {
        "commit": "0d4ba3a39f10667bb0234a94850548ab2dd7ab2d",
        "date": "2019-04-17 18:18:55 -0400",
        "subject": "Fix Posix/CIFS error messages reporting the wrong filename on write/sync/close.",
        "body": "The reported file name was the destination file, not the temp file that is written to during atomic write operations."
    },
    {
        "commit": "4c13955c05662c2df3fb13cfc1d5538c2a0010a0",
        "date": "2019-04-17 08:04:22 -0400",
        "subject": "Add macros to create constant Variant types.",
        "body": "These work almost exactly like the String constant macros. However, a struct per variant type was required which meant custom constructors and destructors for each type.\n\nPropagate the variant constants out into the codebase wherever they are useful."
    },
    {
        "commit": "2dac4b598620693d1d564c0ecb2c124693357d6f",
        "date": "2019-04-16 13:39:58 -0400",
        "subject": "Add STR() macro to create constant String objects from runtime strings.",
        "body": "The STRING_CONST() macro worked fine for constants but was not able to constify strings created at runtime.\n\nAdd the STR() macro to do this by using strlen() to get the size.\n\nAlso rename STRING_CONST() to STRDEF() for brevity and to match the other macro name."
    },
    {
        "commit": "a029eba8d56dc2167814669bc8c5ba12f2eaab80",
        "date": "2019-04-16 13:18:30 -0400",
        "subject": "Use a macro instead of a nested struct to create common String variables.",
        "body": "This makes the code a bit less obfuscated while still ensuring that these variables will be common to both String structures."
    },
    {
        "commit": "a7281878ac8e058b528e49f80a525c09f62a39ed",
        "date": "2019-04-15 08:29:25 -0400",
        "subject": "Migrate backupRegExp() to C.",
        "body": "Removed the \"anchor\" parameter because it was never used in any calls in the Perl code so it was just a dead parameter that always defaulted to true."
    },
    {
        "commit": "39ed4f763b923905b651938b7fe65c48e099b880",
        "date": "2019-04-12 18:13:01 -0400",
        "subject": "Various comment and assert fixes in the info modules."
    },
    {
        "commit": "65a26ac4ba111c1e7e4bfd6c0a0bf1d84afd66e8",
        "date": "2019-04-12 18:10:39 -0400",
        "subject": "Convert commented cipherPass params to test params.",
        "body": "This param will show up in stack traces for test builds, but not production."
    },
    {
        "commit": "c5157c03345eaf4b8e9e7e06190d75021e9d8e39",
        "date": "2019-04-12 09:03:34 -0400",
        "subject": "Automatically generate constants for command and option names.",
        "body": "These constants are easier than using cfgOptionName() and cfgCommandName() and lead to cleaner code and simpler to construct messages.\n\nString versions are provided. Eventually all the strings will be used in the config structures, but for now they are useful to avoid wrapping with strNew()."
    },
    {
        "commit": "867690c08d5710d0cab27a9ee5ba879f7216abda",
        "date": "2019-04-12 08:33:10 -0400",
        "subject": "Begin v2.13 development.",
        "body": "Also update CentOS packages so documentation builds."
    },
    {
        "commit": "4e57b689165cffd8c686f0f36d0c5dccb553b3e1",
        "date": "2019-04-11 09:14:22 -0400",
        "subject": "v2.12: C Implementation of Archive Push"
    },
    {
        "commit": "df12cbb1625ed61c74d43ae3a308445f943b0570",
        "date": "2019-04-10 17:48:34 -0400",
        "subject": "Fix C code to recognize host:port option format like Perl does.",
        "body": "This was not an intentional feature in Perl, but it works, so it makes sense to implement the same syntax in C.\n\nThis is a break from other places where a -port option is explicitly supplied, so it may make sense to support both styles going forward.  This commit does not address that, however."
    },
    {
        "commit": "3aa521fed0838021209b4be36849feb2c7e40a2e",
        "date": "2019-04-10 13:37:24 -0400",
        "subject": "Fix compile flag accidentally removed in 5ee8388f."
    },
    {
        "commit": "25cea0bd0a22de2f83a2ded786e2facc86ff4b10",
        "date": "2019-04-09 11:08:27 -0400",
        "subject": "Add process id to C archive-get and archive-push logging.",
        "body": "This was missed in the original migration.  There was no functional issue, but logging the process ids is useful for debugging."
    },
    {
        "commit": "8c202c77dac74d919962f69acb279b583b4272ff",
        "date": "2019-04-09 11:01:35 -0400",
        "subject": "Add process id to ProtocolParallelJob.",
        "body": "This exposes the process that performed to job to the caller for logging purposes."
    },
    {
        "commit": "4ace7edbd9e849d5a7a5d8b20e08c0c3e2098a02",
        "date": "2019-04-09 10:54:36 -0400",
        "subject": "Allow process id in C logging",
        "body": "The default process id in C logging has always been zero.  This should have been updated when multi-processing was introduced in C, but it was missed."
    },
    {
        "commit": "6099729e922893312e001a3394db43d0c2b341ad",
        "date": "2019-04-08 19:38:06 -0400",
        "subject": "Improve error message when an S3 bucket name contains dots.",
        "body": "The Perl lib we have been using for TLS allows dots in wildcards, but this is forbidden by RFC-2818.  The new TLS implementation in C forbids this pattern, just as PostgreSQL and curl do.\n\nHowever, this does present a problem for users who have been using bucket names with dots in older versions of pgBackRest.  Since this limitation exists for security reasons there appears to be no option but to take a hard line and do our best to notify the user of the issue as clearly as possible."
    },
    {
        "commit": "21c83eea59f5fb4d3c366a1e9782d26356801675",
        "date": "2019-04-08 17:21:20 -0400",
        "subject": "Fix issues when log-level-file=off is set for the archive-get command.",
        "body": "This problem was not specific to archive-get, but that was the only place it was expressing in the last release.  The new archive-push was also affected.\n\nThe issue was with daemon processes that had closed all their file descriptors.  When exec'ing and setting up pipes to communicate with a child process the dup2() function created file descriptors that overlapped with the first descriptor (stdout) that was being duped into.  This descriptor was subsequently closed and wackiness ensued.\n\nIf logging was enabled (the default) that increased all the file descriptors by one and everything worked.\n\nFix this by checking if the file descriptor to be closed is the same one being dup'd into.  This solution may not be generally applicable but it works fine in this case."
    },
    {
        "commit": "8ac422dca95c8761fc57450ed74061ff286ff0c3",
        "date": "2019-04-07 21:09:29 -0400",
        "subject": "Close log file before exec().",
        "body": "The log file should be closed before exec() so the child process does not retain a reference to it."
    },
    {
        "commit": "ade20e5c657f1a05bbe00c1f693346bfadd8b795",
        "date": "2019-04-07 19:11:20 -0400",
        "subject": "Fix typo in error message."
    },
    {
        "commit": "9f3425f6dd2892721935103ff3f75555b7408dd5",
        "date": "2019-04-07 18:47:04 -0400",
        "subject": "Skip coverage for macros with numbers in their name.",
        "body": "This was an oversight in the old regular expression."
    },
    {
        "commit": "c72a94cfec64096d0f18fa1385b1347918be4fdb",
        "date": "2019-04-07 18:20:03 -0400",
        "subject": "Increase process-max limit to 999.",
        "body": "Recent hardware has outstripped the old default so increase it to something that should last for a while."
    },
    {
        "commit": "9a7eab9428b8ce34b31b878bd5e6af4f842ce8d7",
        "date": "2019-04-07 18:12:07 -0400",
        "subject": "Allow three-digits process IDs in logging.",
        "body": "This is required to support process-max > 99 or else there will be formatting/alignment issues in the logs."
    },
    {
        "commit": "2a85df95c121528d826e30526a2fd251638624e7",
        "date": "2019-04-03 17:48:45 +0100",
        "subject": "Add assert missed in 1b486847.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "1e5f2713b2936bd3252e0081a979a9d84eba19d0",
        "date": "2019-04-03 16:40:19 +0100",
        "subject": "Add memContextSwitch() missed in 5bdaa35f.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "5504f286eb6765d3131f2ff99cb2b464a02c4589",
        "date": "2019-04-03 12:32:56 +0100",
        "subject": "Add test and asserts missed in abba2bd1.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "be58b8fee799d29cc5f1df0147bce59b09982208",
        "date": "2019-04-03 12:04:44 +0100",
        "subject": "Add assert missed in 1b486847.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "e97b8241a59f4dd56ea374b00b3fb9905a1febc3",
        "date": "2019-04-03 11:40:12 +0100",
        "subject": "Clarify that S3-compatible object stores are supported.",
        "body": "The documentation mentioned Amazon S3 frequently but failed to mention that other S3-compatible object stores are also supported.\n\nTone down the specific mentions of Amazon S3 and replace them with \"S3-compatible object store\" when appropriate."
    },
    {
        "commit": "4c63279a19a6baa1f6854eee59cc804f6f89cb23",
        "date": "2019-04-02 13:50:02 +0100",
        "subject": "Add forkSafe() to handle fork errors.",
        "body": "fork() rarely fails but we should definitely detect when it does so."
    },
    {
        "commit": "1b48684713220b3436b24b266e543196824e974f",
        "date": "2019-03-29 13:26:33 +0000",
        "subject": "The archive-push command is implemented entirely in C.",
        "body": "This new implementation should behave exactly like the old Perl code with the exception of updated log messages.\n\nRemove as much of the Perl code as possible without breaking other commands."
    },
    {
        "commit": "251dbede8ff8a7206986106b8df8b08257cd7ebd",
        "date": "2019-03-27 21:14:06 +0000",
        "subject": "Add locking capability to the remote command.",
        "body": "When a repository server is configured, commands that modify the repository acquire a remote lock as well as a local lock for extra protection against multiple writers.\n\nInstead of the custom logic used in Perl, make remote locking part of the command configuration.\n\nThis also means that the C remote needs the stanza since it is used to construct the lock name.  We may need to revisit this at a later date."
    },
    {
        "commit": "7db8cedd68477dd511bb8bdf8b94b2d2925470dd",
        "date": "2019-03-27 20:59:28 +0000",
        "subject": "Add protocolKeepAlive() to send noops to all remotes.",
        "body": "While the local processes are doing their jobs the remote connection from the main process may timeout.\n\nSend occasional noops to ensure that doesn't happen."
    },
    {
        "commit": "f8cbf5d78cbacfef253f8e75983e403e10049df0",
        "date": "2019-03-27 20:52:23 +0000",
        "subject": "Add TEST_64BIT() macro to detect 64-bit platforms.",
        "body": "This may not be the best way to detect 64-bit platforms but it seems to be working fine so far.\n\nCreate a macro to make it clearer what is being done and to make it easier to change the implementation."
    },
    {
        "commit": "1fa103a4d23742af0fb16214a74b974cbe875724",
        "date": "2019-03-27 18:14:00 +0200",
        "subject": "Fix missing semicolon in code example."
    },
    {
        "commit": "3181cd0ab8f09cbeca87d97e670e0901feb412a3",
        "date": "2019-03-26 18:46:44 +0200",
        "subject": "Set WAL long header flag in test function missed in e938a892.",
        "body": "This was missed because the unit tests were reusing a buffer without resetting it to zero, so this flag ended up still set when the test function was called.\n\nThis was not a live issue since it only expressed in tests and this code is not used in master yet."
    },
    {
        "commit": "7364d859da8b4ee67e4b0d76e9c0d08a15fa546d",
        "date": "2019-03-26 16:00:15 +0200",
        "subject": "Add missing parens."
    },
    {
        "commit": "5ee8388f482adc52129a9960bdb077e8c054edb0",
        "date": "2019-03-26 08:20:55 +0200",
        "subject": "Build test harness with the same warnings as code being tested.",
        "body": "The test harness was not being built with warnings which caused some wackiness with an improperly structured switch.  Just use the same warnings as the code being tested.\n\nAlso enable warnings on code that is not directly being tested since other code modules are frequently modified during testing."
    },
    {
        "commit": "f709334851cfbe254ce9f13266adba4504e9af64",
        "date": "2019-03-25 23:59:56 +0200",
        "subject": "Fix comment content and formatting."
    },
    {
        "commit": "abba2bd13269b3d51802cb7bfba18a0abae47342",
        "date": "2019-03-25 20:35:20 +0400",
        "subject": "Add strLstMergeAnti() for merge anti-joins.",
        "body": "We deal with some pretty big lists in archive-push so a nested-loop anti-join looked like it would not be efficient enough.\n\nThis merge anti-join should do the trick even though both lists must be sorted first."
    },
    {
        "commit": "538e2c7474394f1f24bb0899bc7d85bf7c68bd5a",
        "date": "2019-03-25 09:45:36 +0400",
        "subject": "Add storagePg()/storagePgWrite() to storage helper.",
        "body": "Add read/write storage helper functions for the PostgreSQL data directory."
    },
    {
        "commit": "444b4f86403088f24883ffe0b940a6402159bfc0",
        "date": "2019-03-25 09:17:15 +0400",
        "subject": "Allow warnings to be written by archiveAsyncStatusOkWrite().",
        "body": "Migrate this feature to the C code since archive-push will need it."
    },
    {
        "commit": "8820d695747b40b73ead6d32a408e7d2804bd192",
        "date": "2019-03-25 08:12:38 +0400",
        "subject": "Use a single file to handle global errors in async archiving.",
        "body": "The prior behavior on a global error (i.e. not file specific) was to write an individual error file for each WAL file being processed.  On retry each of these error files would be removed, and if the error was persistent, they would then be recreated.  In a busy environment this could mean tens or hundreds of thousands of files.\n\nAnother issue was that the error files could not be written until a list of WAL files to process had been generated.  This was easy enough for archive-get but archive-push requires more processing and any errors that happened when generating the list would only be reported in the pgBackRest log rather than the PostgreSQL log.\n\nInstead write a global.error file that applies to any WAL file that does not have an explicit ok or error file.  This reduces churn and allows more errors to be reported directly to PostgreSQL."
    },
    {
        "commit": "1f6f3f673e49a2dff4dff465d183a2f6928138e6",
        "date": "2019-03-24 18:29:20 +0400",
        "subject": "Update default WAL segment size comment."
    },
    {
        "commit": "1fff60ad2ad56f303080af666ed76e82dbb171b7",
        "date": "2019-03-24 14:34:45 +0400",
        "subject": "Remove unused infoArchiveCheckPg() function.",
        "body": "The idea was to use this function for archive-push, but in the end archive-push required two very different versions of the function."
    },
    {
        "commit": "8560db5c42fdc07de44b86daf76ad195282f67d7",
        "date": "2019-03-24 13:54:05 +0400",
        "subject": "Add constants for .ok/.error status extensions."
    },
    {
        "commit": "7cf7373761cb83253a502e8d0af4f925c86a7944",
        "date": "2019-03-21 21:11:36 +0400",
        "subject": "Refactor PostgreSQL interface to remove most code duplication.",
        "body": "Having a copy per version worked well until it was time to add new features or modify existing functions.  Then it was necessary to modify every version and try to keep them all in sync.\n\nConsolidate all the PostgreSQL types into a single file using #if for type versions.  Many types do not change or change infrequently so this cuts down on duplication.  In addition, it is far easier to see what has changed when a new version is added.\n\nUse macros to write the interface functions.  There is still duplication here since some changes require a new copy of the macro, but it is far less than before."
    },
    {
        "commit": "e938a89250bd6a6512d4d6b5217a9750c848ca49",
        "date": "2019-03-19 19:44:06 +0400",
        "subject": "Add WAL info to PostgreSQL interface.",
        "body": "This allows the WAL header to be read for any supported version on PostgreSQL."
    },
    {
        "commit": "1c9645d4166165f70bf837b7d053415d78a216f2",
        "date": "2019-03-19 19:20:38 +0400",
        "subject": "Add missing static keyword."
    },
    {
        "commit": "5c732e992904bc7f3201c119787d84cf05a8997d",
        "date": "2019-03-18 22:10:25 +0400",
        "subject": "Remove redundant documentation from PostgreSQL interface files and clarify ambiguous function names.",
        "body": "Move the documentation to postgres/interface.c so it can be updated without having to update N source files.\n\nThe \"is\" function was not very specific so rename to \"controlIs\"."
    },
    {
        "commit": "e26d510d0c1d8157ef5d9149bed9c2902ec29ba2",
        "date": "2019-03-17 22:11:35 +0400",
        "subject": "Use restore command for remote performances tests.",
        "body": "Since archive-push is being moved to C, the Perl remote will no longer work with that command.\n\nEventually this module will need to be rewritten in C, but for now just use the restore command which is planned to be migrated last."
    },
    {
        "commit": "856a369b863fb134ec249b7036eea70ba56d89ac",
        "date": "2019-03-17 22:00:54 +0400",
        "subject": "Add file write to the S3 storage driver.",
        "body": "Now that repositories are writable the storage drivers that don't yet support file writes need to be updated to do so.\n\nNote that the part size for multi-part upload has not been defined as a proper constant.  This will become an option in the near future so it doesn't seem worth creating a constant that we might then forget to remove."
    },
    {
        "commit": "7193738288e7c25bba526f5133fad9d4cf70d4c0",
        "date": "2019-03-17 21:38:07 +0400",
        "subject": "Add document creation to XML objects.",
        "body": "The xml objects only exposed read methods of the underlying libxml2.\n\nThis worked for S3 commands that only received data but to send data we need to be able to create XML documents from scratch.\n\nAdd the ability to create empty documents and add nodes and contents."
    },
    {
        "commit": "fc974626cd060271c39480ea5ac960b8db903699",
        "date": "2019-03-17 08:35:40 +0400",
        "subject": "Add a note regarding verifying checkpoint against replay position."
    },
    {
        "commit": "8ebc6d6c34e7ccc7e4d07f1321fd4b1dce1579c7",
        "date": "2019-03-16 21:50:19 +0400",
        "subject": "Add file write to the remote storage driver.",
        "body": "Now that repositories are writable the storage drivers that don't yet support file writes need to be updated to do so."
    },
    {
        "commit": "2d386cd26672ed6c1ff2ca20465b7c7505cf9de6",
        "date": "2019-03-16 16:14:10 +0400",
        "subject": "Move WAL path prefix logic into walPath().",
        "body": "This logic is used by both archive-push and archive-get."
    },
    {
        "commit": "12273a10346a5520ce556a19df7b0cd4f9be74be",
        "date": "2019-03-16 15:48:50 +0400",
        "subject": "Add storageRepoWrite() to storage helper.",
        "body": "Writable repos are allowed with the addition of the CIFS driver, so add a helper function."
    },
    {
        "commit": "66c2f4cd2e43f05d65e06f3c89094fbdf702d60d",
        "date": "2019-03-16 15:27:38 +0400",
        "subject": "Make notion of current PostgreSQL info ID in C align with Perl.",
        "body": "The C code was assuming that the current PostgreSQL version in archive.info/backup.info was the most recent item in the history, but this is not always the case with some stanza-upgrade scenarios.  If a cluster is restored from before the upgrade and stanza-upgrade is run again, it will revert db-id to the original history item.\n\nInstead, load db-id from the db section explicitly as the Perl code does.\n\nThis did not affect archive-get since it does a reverse scan through the history versions and does not rely on the current version."
    },
    {
        "commit": "b2b2cf0511b326c695e825bee0c5f5faf648224c",
        "date": "2019-03-16 15:00:02 +0400",
        "subject": "Fix issues with remote/local command logging options.",
        "body": "Logging was being enable on local/remote processes even if --log-subprocess was not specified, so fix that.\n\nAlso, make sure that stderr is enabled at error level as it was on Perl.  This helps expose error information for debugging.\n\nFor remotes, suppress log and lock paths since these are not applicable on remote hosts.  These options should be set in the local config if they need to be overridden."
    },
    {
        "commit": "d377e926c806faa8d61744e27eacfa7bf610c445",
        "date": "2019-03-16 13:07:43 +0400",
        "subject": "httpClientRequest() accepts a body parameter.",
        "body": "None of our C HTTP requests have needed to output a body, but they will with the migration of archive-push.\n\nAlso, add constants that are useful when POSTing/PUTing data."
    },
    {
        "commit": "078df66e2c66ea992c423ffc92a789a4f036b622",
        "date": "2019-03-16 12:51:37 +0400",
        "subject": "Add httpHeaderDup().",
        "body": "Allow duplication of headers and updating of redactions."
    },
    {
        "commit": "be670e25450a174f6652850af765805de1139263",
        "date": "2019-03-16 12:32:54 +0400",
        "subject": "Add hash size constants and extern hash type constant.",
        "body": "The size constants are convenient for creating data structures of the proper size.\n\nThe hash type constant must be extern'd so that results can be pulled from a filter."
    },
    {
        "commit": "76560b3cf0959c11b92e3b98c640f5e6070b1e7a",
        "date": "2019-03-16 12:26:25 +0400",
        "subject": "Add missing const to cryptoHashOne() and cryptoHashOneStr()."
    },
    {
        "commit": "0eb4c2c8291ed0dc5c211594b5e85e1b31a9d84d",
        "date": "2019-03-16 12:21:16 +0400",
        "subject": "Fix incorrect buffer size used in cryptoHashOne().",
        "body": "This was missing when bufUsed() was introduced.\n\nIt is not currently a live issue, but becomes a problem in the new archive-push code where the entire buffer is not always used."
    },
    {
        "commit": "9c1549585e0d8a4613954bbfc194dd0dc0a537a8",
        "date": "2019-03-15 22:18:56 +0400",
        "subject": "Add command for removing all Docker containers to the Vagrantfile."
    },
    {
        "commit": "b68d1d60a1532e9d1ef2703b043d538643d6f8cc",
        "date": "2019-03-15 22:16:50 +0400",
        "subject": "Add cvtSSizeToZ() and debug macros."
    },
    {
        "commit": "d16bff64cdcb5be6c6ac3b8f31d394c2393b7649",
        "date": "2019-03-15 10:30:48 +0400",
        "subject": "Add missing log param and assert."
    },
    {
        "commit": "a6e219bc8bf1f6d93a24ba120fa9614d7b667ce3",
        "date": "2019-03-15 10:25:24 +0400",
        "subject": "Improve comment, remove duplicated header and extraneous braces."
    },
    {
        "commit": "5554377632807a3e778273b9882a191e8a6edae6",
        "date": "2019-03-15 10:20:52 +0400",
        "subject": "Make strLstDup() null-tolerant.",
        "body": "Duping a NULL StringList without checking if it is NULL is a useful capability."
    },
    {
        "commit": "9382283586da4794d3585dbf6680c3a2f3d10a33",
        "date": "2019-03-14 13:48:33 +0400",
        "subject": "Fix issues when a path option is / terminated.",
        "body": "This condition was not being properly checked for in the C code and it caused problems in the info command, at the very least.\n\nInstead of applying a local fix, introduce a new path option type that will rigorously check the format of any incoming paths."
    },
    {
        "commit": "b8ebea6b1c3cf2a26c44f04c7552c66fd9acb44a",
        "date": "2019-03-14 13:38:55 +0400",
        "subject": "Add separate archive-push-async command.",
        "body": "This command was previously forked off from the archive-push command which required a bit of artificial option and log manipulation.\n\nA separate command is easier to test and will work on platforms that don't have fork(), e.g. Windows."
    },
    {
        "commit": "982b47c5ecec475703860f52a0eabe7d501a96e2",
        "date": "2019-03-14 13:28:33 +0400",
        "subject": "Add CIFS storage driver.",
        "body": "This driver borrows heavily from the Posix driver.\n\nAt this point the only difference is that CIFS does not allow explicit directory fsyncs so they need to be suppressed.  At some point the CIFS diver will also omit link support.\n\nWith the addition of this driver repository storage is now writable."
    },
    {
        "commit": "941dbb47313b25339d438e7a57975bcd88c65168",
        "date": "2019-03-14 13:02:19 +0400",
        "subject": "Remove package patch merged to upstream."
    },
    {
        "commit": "cf5a5b7b9a97fb5907990812745d42ec4e3de7fb",
        "date": "2019-03-11 10:43:35 +0200",
        "subject": "Begin v2.12 development."
    },
    {
        "commit": "68d20edea6cbfc7b8b6db69633e08ac473821547",
        "date": "2019-03-10 18:56:00 +0200",
        "subject": "v2.11: C Implementation of Archive Get"
    },
    {
        "commit": "2ef5ad70a29b36db570f8f50a2ba821fc4ee02ff",
        "date": "2019-03-10 13:27:30 +0200",
        "subject": "Move crypto module to common/crypto.",
        "body": "It makes sense for the crypto code to be in common since it is not pgBackRest-specific.\n\nAlso combine the crypto tests into a single module."
    },
    {
        "commit": "95597be81e7450fdbb88a6c17b549e9eb750d5dd",
        "date": "2019-03-10 13:11:20 +0200",
        "subject": "Move compress module to common/compress.",
        "body": "It makes sense for the compression code to be in common since it is not pgBackRest-specific."
    },
    {
        "commit": "2f63babe9dfa6f49d5fbc9a6e039e1a1dfa5054d",
        "date": "2019-03-10 11:55:01 +0200",
        "subject": "Move help/help test module to command/help."
    },
    {
        "commit": "e4e2606fce1ef28e82f359581e1a90be6d10414c",
        "date": "2019-03-10 11:03:52 +0200",
        "subject": "Add additional options to backup.manifest for debugging purposes.",
        "body": "Add the buffer-size, compress-level, compress-level-network, and process-max options to the backup:option section in backup.manifest to aid in debugging.\n\nIt may also make sense to propagate these options up to backup.info so they can be displayed in the info command, but for now this is deemed sufficient."
    },
    {
        "commit": "21f56f64ebe0af34b61793efad1730707a8e9f39",
        "date": "2019-03-10 10:38:12 +0200",
        "subject": "Add hints when unable to find a WAL segment in the archive.",
        "body": "When this error happens in the context of a backup it can be a bit mystifying as to why the backup is failing.  Add some hints to get the user started.\n\nThese hints will appear any time a WAL segment can't be found, which makes the hint about the check command redundant when the user is actually running the check command, but it doesn't seem worth trying to exclude the hint in that case."
    },
    {
        "commit": "bc9fb0f59ae4d9cc843fa8ac2d9d434cf850910d",
        "date": "2019-03-10 09:16:25 +0200",
        "subject": "Add note for CSTD settings on BSD variants.",
        "body": "Suggested by ucando, jungle-boogie, Luca Ferrari."
    },
    {
        "commit": "786e77a9feb0ec3133d7f1ab7efe0037816a1382",
        "date": "2019-03-09 11:40:55 +0200",
        "subject": "Make DESTDIR fully-configurable in the Makefile.",
        "body": "DESTDIR always had /usr/bin appended which was a problem systems that don't use /usr/bin as the install location for binaries.\n\nInstead, use the value of DESTDIR exactly and update the Debian packages accordingly."
    },
    {
        "commit": "60fe5b7365c9eaaa03e954cac7dec14777aa2461",
        "date": "2019-03-09 11:03:47 +0200",
        "subject": "Error when parameters are passed to a command that does not accept parameters.",
        "body": "This behavior allowed a command like this to run without error:\n\npgbackrest backup --stanza=db full\n\nEven though it actually performed an incremental backup in most circumstances because the `full` parameter was ignored.\n\nInstead, output an error and exit."
    },
    {
        "commit": "cad6fedb7ba2877f7ea1b2e23415c42b6bda3483",
        "date": "2019-03-07 15:54:59 +0200",
        "subject": "Prevent option warning from being output when running help command.",
        "body": "This warning was being output when getting help if retention was not set:\n\nWARN: option repo1-retention-full is not set, the repository may run out of space\n\nSuppress this when getting help since the warning will display by default on a system that is not completely configured."
    },
    {
        "commit": "3d7edc4ca4db2f75a33d43ffc5131a6a20086507",
        "date": "2019-03-07 14:08:35 +0200",
        "subject": "Add clean and uninstall targets to Makefile.",
        "body": "Contributed by Luca Ferrari."
    },
    {
        "commit": "d441061168ec56d22082a6ff54e5f1fb02cc8eae",
        "date": "2019-03-02 15:01:02 +0200",
        "subject": "Create test matrix for mock/all to increase coverage and reduce tests.",
        "body": "The same test configurations are run on all four test VMs, which seems a real waste of resources.\n\nVary the tests per VM to increase coverage while reducing the total number of tests. Be sure to include each major feature (remote, s3, encryption) in each VM at least once."
    },
    {
        "commit": "f7d1d4400f1edcdd3216dfa5c9d1e306946c36a2",
        "date": "2019-03-01 19:04:26 +0200",
        "subject": "Create test matrix for mock/expire to increase coverage and reduce tests.",
        "body": "The same test configurations are run on all four test VMs, which seems a real waste of resources.\n\nVary the tests per VM to increase coverage while reducing the total number of tests."
    },
    {
        "commit": "91622942c2e465cb46571343d0e40f8b7cef8742",
        "date": "2019-03-01 17:12:41 +0200",
        "subject": "Create test matrix for mock/archive-stop to increase coverage and reduce tests.",
        "body": "The same test configurations are run on all four test VMs, which seems a real waste of resources.\n\nVary the tests per VM to increase coverage while reducing the total number of tests. Be sure to include each major feature (remote, s3, encryption) in each VM at least once."
    },
    {
        "commit": "c307d9fdf9439661d2a94f215bbc7b1ef714e34f",
        "date": "2019-03-01 15:58:52 +0200",
        "subject": "Don't make a copy of the context name in the MemContext module.",
        "body": "This is very inefficient in terms of memory and time and dynamic context names were never utilized.\n\nJust require that context names be valid for the life of the context.\n\nIn practice they are all static strings."
    },
    {
        "commit": "90709dfd213b1eb1dab3daff0101768f61be4b5f",
        "date": "2019-03-01 14:57:01 +0200",
        "subject": "Improve performance of context and memory allocations in MemContext module.",
        "body": "Allocations required a sequential scan through the allocation list for both contexts and memory.  This was very inefficient since for the most part individual memory allocations are seldom freed directly, rather they are freed when their context is freed.\n\nFor both types of allocations track an index for the lowest free position.  After an allocation of the free position, a sequential search will be required for the next allocation but this is still far better than doing a scan for every allocation.\n\nWith a moderately-sized dataset (500 history entries in backup.info), there is a 237X performance improvement when combined with the f74e88bb refactor.\n\nBefore:\n\n  %   cumulative   self\n time   seconds   seconds name\n 65.11    331.37   331.37 memContextAlloc\n 16.19    413.78    82.40 memContextCurrent\n 14.74    488.81    75.03 memContextTop\n  2.65    502.29    13.48 memContextNewIndex\n  1.18    508.31     6.02 memFind\n\nAfter:\n\n  %   cumulative   self\n time   seconds   seconds name\n 94.69      2.14     2.14 memFind\n\nFinding memory allocations in order to free or resize them is the next bottleneck, but this does not seem to be a major issue presently."
    },
    {
        "commit": "f74e88bba9c7a7912f0b1fc322823f1b527042f8",
        "date": "2019-03-01 13:33:58 +0200",
        "subject": "Use contextTop/contextCurrent instead of memContextTop()/memContextCurrent() in MemContext module.",
        "body": "Using the functions internally is great for abstraction but not so great for performance on non-optimized builds.\n\nAlso, the functions end up prominent in any profiled build."
    },
    {
        "commit": "6ce3310f8a2900d1af717da8d4c3345a9016933b",
        "date": "2019-03-01 09:10:14 +0200",
        "subject": "Update default documentation version to PostgreSQL 10.",
        "body": "Also update CentOS 6 and 7 versions to PostgreSQL 9.5 and 9.6 respectively."
    },
    {
        "commit": "409360924151a561dd5dc122dbcd9173a4e6c950",
        "date": "2019-03-01 09:00:51 +0200",
        "subject": "Documentation builds on PostgreSQL 9.4-10.",
        "body": "More than likely 9.2-11 will work as well, but this has not been tested.\n\nHowever, 11 needs work on the group permissions introduced in that version."
    },
    {
        "commit": "cb3b4fa24bbe271a517b50a3522bc5075d8fe6c7",
        "date": "2019-02-28 14:33:29 +0200",
        "subject": "Enable socket keep-alive on older Perl versions.",
        "body": "The prior method depended on IO:Socket:SSL to push the keep-alive options down to the socket but it only worked for recent versions of the module.\n\nInstead, create the socket directly using IO::Socket::IP if available or IO:Socket:INET as a fallback.  The keep-alive option is set directly on the socket before it is passed to IO:Socket:SSL."
    },
    {
        "commit": "0913523096cf9178ffa46595171dc16ab815148b",
        "date": "2019-02-28 09:51:19 +0200",
        "subject": "Cleanup local/remote protocol interaction from 9367cc46.",
        "body": "The command option was not being set correctly when a remote was started from a local.  It was being set as 'local' rather than the command that the local was running as.\n\nAlso automatically select the remote protocol id based on whether it is started from a local (use the local protocol id) or from the main process (use 0).\n\nThese were not live issues but could cause strange behaviors as new features are added that might be hard to diagnose."
    },
    {
        "commit": "db4b447be89878496f0a50905b2f51c1306b9de5",
        "date": "2019-02-27 23:03:02 +0200",
        "subject": "The archive-get command is implemented entirely in C.",
        "body": "This new implementation should behave exactly like the old Perl code with the exception of a few updated log messages.\n\nRemove as much of the Perl code as possible without breaking other commands."
    },
    {
        "commit": "9367cc461cda63698caa04ddb262405eef05890d",
        "date": "2019-02-27 22:34:21 +0200",
        "subject": "Migrate local command to C.",
        "body": "The C local is only used for C commands in the main process.\n\nSome tweaking of the existing protocolGet() command was required. Originally the idea was to share the function for local and remote requests but the differences (as in Perl) were too great to make that practical."
    },
    {
        "commit": "35abd4cd9517c4acf02d98bf386e1ef2ed2e8485",
        "date": "2019-02-27 21:10:52 +0200",
        "subject": "Add ProtocolParallel* objects for parallelizing commands.",
        "body": "Allows commands to be easily parallelized if the jobs are broken up into discrete, non-overlapping chunks."
    },
    {
        "commit": "35acfae7c2328a70f978973aa1c7ed91af750d88",
        "date": "2019-02-27 19:48:30 +0200",
        "subject": "Add ProtocolCommand object.",
        "body": "This formalizes the creation of protocol commands, which was previously done by creating KeyValue objects manually."
    },
    {
        "commit": "dee90d3e606262fe99dcc099867a96039540a1c2",
        "date": "2019-02-27 18:11:09 +0200",
        "subject": "Expose handle (file descriptor) from IoRead when applicable.",
        "body": "Some IO objects have file descriptors which can be useful for monitoring with select().\n\nIt might also be useful to expose handles for write objects but there is currently no use case."
    },
    {
        "commit": "b1957b07f351a93fa64658f8c898420b4bbe68f5",
        "date": "2019-02-27 18:10:18 +0200",
        "subject": "Improve null-handling of varToLog()."
    },
    {
        "commit": "ea2aef1d0ceff366b75f663281df511b8169eadd",
        "date": "2019-02-27 18:09:21 +0200",
        "subject": "Add lstRemove() to List object.",
        "body": "Because it is sometimes useful to remove items from a list."
    },
    {
        "commit": "4be271ea2a1a7bed4e5165f10a8e62a19b4e7dc9",
        "date": "2019-02-27 18:07:16 +0200",
        "subject": "Improve fork harness to allow multiple children and setup pipes automatically.",
        "body": "There was a lot of extra boilerplate involved in setting up pipes so that is now automated.\n\nIn some cases testing with multiple children is useful so allow that as well."
    },
    {
        "commit": "18b62a4220acabc4ba0018ed884e20f695304aed",
        "date": "2019-02-27 17:09:19 +0200",
        "subject": "Only run test-level stack trace by default for unit-tested modules.",
        "body": "This amends 70c30dfb which disabled test tracing in general.\n\nInstead, only enable test tracing by default for modules that are being unit tested. This saves lots of time but still ensures that test tracing is working and helps with debugging in unit tests.\n\nAlso rename the option to --debug-test-trace for a clarity."
    },
    {
        "commit": "3a05359087560248dc0bc7d1ce35516c6a5d622f",
        "date": "2019-02-24 07:42:41 +0200",
        "subject": "Create test matrix for mock/stanza to increase coverage and reduce tests.",
        "body": "The same test configurations are run on all four test VMs, which seems a real waste of resources.\n\nVary the tests per VM to increase coverage while reducing the total number of tests. Be sure to include each major feature (remote, s3, encryption) in each VM at least once."
    },
    {
        "commit": "6d3e18b181d08f4e1ed64c097346a3532e6005af",
        "date": "2019-02-24 06:55:59 +0200",
        "subject": "Reduce expect log level in mock/stanza tests.",
        "body": "The expect tests were originally a rough-and-ready type of unit test so monitoring changes in the expect log helped us detect changes in behavior.\n\nNow the stanza code is heavily unit-tested so the detailed logs mainly cause churn and don't have any measurable benefit.\n\nReduce the log level to DETAIL to make the logs less verbose and volatile, yet still check user-facing log messages."
    },
    {
        "commit": "2f081f3ec7a0c9bb664eb5a426ec21859bb48722",
        "date": "2019-02-23 18:51:52 +0200",
        "subject": "Rename test modules for consistency.",
        "body": "The conventions for command and info tests have shifted in the C modules, though not even all the C modules got the message."
    },
    {
        "commit": "d489eb87f7f7da58dd02812e5088f507e1cab491",
        "date": "2019-02-23 15:59:39 +0200",
        "subject": "Create test matrix for mock/archive to increase coverage and reduce tests.",
        "body": "The same test configurations are run on all four test VMs, which seems a real waste of resources.\n\nVary the tests per VM to increase coverage while reducing the total number of tests.  Be sure to include each major feature (remote, s3, encryption) in each VM at least once."
    },
    {
        "commit": "4a7588e604d3b39858f09e8c879e973bd4432ded",
        "date": "2019-02-23 15:13:23 +0200",
        "subject": "Create aliases for test VMs ordered by age.",
        "body": "This will allow for smarter allocation of tests in the next commit."
    },
    {
        "commit": "59d7958914d2965d0690ebd579541c21a40ad201",
        "date": "2019-02-23 15:05:06 +0200",
        "subject": "Reduce expect log level in mock/archive tests.",
        "body": "The expect tests were originally a rough-and-ready type of unit test so monitoring changes in the expect log helped us detect changes in behavior.\n\nNow the archive code is heavily unit-tested so the detailed logs mainly cause churn and don't have any measurable benefit.\n\nReduce the log level to DETAIL to make the logs less verbose and volatile, yet still check user-facing log messages."
    },
    {
        "commit": "a9cbf23f4cacb18d85e7a6f02cff198790a9e21f",
        "date": "2019-02-23 07:28:27 +0200",
        "subject": "Improve error when hostname cannot be found in a certificate.",
        "body": "Update error message with the hostname and more detail about what went wrong.  Hopefully this will help in diagnosing certificate/hostname issues."
    },
    {
        "commit": "1f66bda02ec9ae92403af2feeaf61505b3482932",
        "date": "2019-02-22 12:02:26 +0200",
        "subject": "Fix non-compliant JSON for options passed from C to Perl.",
        "body": "We have been using a hacked-up JSON generator to pass options from C to Perl since the C binary was introduced.  This generator was not very compliant which led to issues with \\n, \", etc. inside strings.\n\nWe have a fully-compliant JSON generator now so use that instead."
    },
    {
        "commit": "70c30dfb619a3ec2ea7d465d5b8e2014518b723d",
        "date": "2019-02-22 11:40:30 +0200",
        "subject": "Disable test-level stack trace by default.",
        "body": "Detailed stack traces for low-level functions (e.g. strCat, bufMove) can be very useful for debugging but leaving them on for all tests has become quite burdensome in terms of time.  Complex operations like generating JSON on a large KevValue can lead to timeouts even with generous values.\n\nAdd a new param, --debug-trace, to enable test-level stack trace, but leave it off by default."
    },
    {
        "commit": "ae86e6d5b2f6f86bc3ec1a4b1378d9b49e89799e",
        "date": "2019-02-22 11:31:37 +0200",
        "subject": "Add missing ToLog() coverage to String, List, and PgControl.",
        "body": "Missing coverage is exposed in the next commit which disables test tracing by default."
    },
    {
        "commit": "a7c8906581e8fc875c3cac99153aacb323de034f",
        "date": "2019-02-21 18:49:02 +0200",
        "subject": "Fix incorrect tags."
    },
    {
        "commit": "e14c0eeb65a998a419e5a2e6c0ce833e8d7d03dc",
        "date": "2019-02-21 16:20:46 +0200",
        "subject": "Use driver for remote protocol introduced in da628be8.",
        "body": "The remote protocol was calling into the Storage object but this required some translation which will get more awkward as time goes by.\n\nInstead, call directly into the local driver so the communication is directly driver to driver.  This still requires resolving the path and may eventually have more duplication with the Storage object methods but it seems the right thing to do."
    },
    {
        "commit": "b1eb8af7d5093a26a2e221a428540e5e7b356eed",
        "date": "2019-02-21 15:40:21 +0200",
        "subject": "Resolve storage path expressions before passing to remote.",
        "body": "Expressions such as <REPO:ARCHIVE> require a stanza name in order to be resolved correctly.  However, if the stanza name is passed to the remote then that remote will only work correctly for that one stanza.\n\nInstead, resolved the expressions locally but still pass a relative path to the remote.  That way, a storage path that is only configured on the remote does not need to be known locally."
    },
    {
        "commit": "b4d4680f8c3126d1c2016d30aa2a1b77aac085c0",
        "date": "2019-02-21 14:40:35 +0200",
        "subject": "Allow cfgExecParam() to exclude options.",
        "body": "It is useful to be able to exclude an option even if it is shared by both commands."
    },
    {
        "commit": "be6a3f131e746304c6a30c39fcab4fe4b44dcb7f",
        "date": "2019-02-21 14:26:06 +0200",
        "subject": "Improve null-handling of strToLog().",
        "body": "NULL was returning {\"(null)\"} which was comprehensible but not very pretty.  Instead return null on NULL."
    },
    {
        "commit": "1fd89f05afd8d8614d7b38a006eda4418f6324ce",
        "date": "2019-02-21 14:16:17 +0200",
        "subject": "Add kvKeyExists() to KeyValue object.",
        "body": "Check if a key exists even if the value is NULL, which is the same result for a missing key."
    },
    {
        "commit": "80df1114bdc97a930421f491bb7f41d9aeab6069",
        "date": "2019-02-21 12:09:12 +0200",
        "subject": "Fix info command missing WAL min/max when stanza specified.",
        "body": "This issue was a result of STORAGE_REPO_PATH prepending an extra stanza when the stanza was specified on the command line.\n\nThe tests missed this because by some strange coincidence the WAL dirs were empty for each test that specified a stanza.  Add new tests to prevent a regression.\n\nFixed by Stefan Fercot."
    },
    {
        "commit": "1519f5b04540d5a431044f83a45b604ad8757397",
        "date": "2019-02-21 11:40:30 +0200",
        "subject": "Add storageHelperFree() to storage helper.",
        "body": "Free all cached objects in the storage helper, especially the stanza name.\n\nThis clears the storage environment for tests that switch stanza names or go from a stanza name to no stanza name or vice versa. This is only useful for testing right now, but may be used in the future for commands than act on multiple stanzas."
    },
    {
        "commit": "b0b5989acae29b962b9101719459234968a8e6c1",
        "date": "2019-02-20 22:57:18 +0200",
        "subject": "Migrate remote archive-get command to C.",
        "body": "All required protocol commands are implemented so this is mostly a matter of enabling the feature and updating expect logs."
    },
    {
        "commit": "6866ff031a6a48d6cd966f5df78bcbc2c84a3890",
        "date": "2019-02-20 22:43:02 +0200",
        "subject": "Add exists() to remote storage."
    },
    {
        "commit": "71bc5697b1a35c8460af7885b888b1d43bd994b1",
        "date": "2019-02-20 22:23:19 +0200",
        "subject": "Increase per-call stack trace size to 4096.",
        "body": "This was previously 256, which was too small to log protocol parameters.  Not only did this truncate important debug information but varying path lengths caused spurious differences in the expect logs."
    },
    {
        "commit": "73be64ce49aaff9d94f70c47590476c404365ce4",
        "date": "2019-02-20 15:52:07 +0200",
        "subject": "Add separate archive-get-async command.",
        "body": "This command was previously forked off from the archive-get command which required a bit of artificial option and log manipulation.\n\nA separate command is easier to test and will work on platforms that don't have fork(), e.g. Windows."
    },
    {
        "commit": "e48b406cdc3c73056137d6767a7f70e08bee9806",
        "date": "2019-02-20 15:48:14 +0200",
        "subject": "Add instructions for building the coverage report.",
        "body": "These are intended to be temporary until a fully automated report is developed.\n\nSince we don't know when that will happen, at least make it easier to generate the current report."
    },
    {
        "commit": "da628be8a8045e73b621fb229ac149b545008327",
        "date": "2019-02-19 20:57:38 +0200",
        "subject": "Migrate remote command to C.",
        "body": "Prior to this the Perl remote was used to satisfy C requests. This worked fine but since the remote needed to be migrated to C anyway there was no reason to wait.\n\nAdd the ProtocolServer object and tweak ProtocolClient to work with it. It was also necessary to add a mechanism to get option values from the remote so that encryption settings could be read and used in the storage object.\n\nUpdate the remote storage objects to comply with the protocol changes and add the storage protocol handler.\n\nIdeally this commit would have been broken up into smaller chunks but there are cross-dependencies in the protocol layer and it didn't seem worth the extra effort."
    },
    {
        "commit": "d211c2b8b51ae5b796bbb581d21a4a406e3ed972",
        "date": "2019-02-15 11:52:39 +0200",
        "subject": "Fix possible truncated WAL segments when an error occurs mid-write.",
        "body": "The file write object destructors called close() and finalized the file even if it was not completely written.  This was an issue in both the C and Perl code.\n\nRewrite the destructors to simply free resources (like file handles) rather than calling the close() method.  This leaves the temp file in place for filesystems that use temp files.\n\nAdd unit tests to prevent regression."
    },
    {
        "commit": "2cd204f38037f1465c84bb4e6b55893204ee8f93",
        "date": "2019-02-12 14:59:51 +0200",
        "subject": "Change execRead() to return a size_t.",
        "body": "execRead() should be returning a size_t, not a void. Thankfully, this isn't actually used and therefore shouldn't be an issue, but we should fix it anyway."
    },
    {
        "commit": "a5f6f801d7651606363715471dcb958e3339414c",
        "date": "2019-02-12 14:11:16 +0200",
        "subject": "Begin v2.11 development."
    },
    {
        "commit": "35903b94d9f2de14fb116c4b15649466eff78ef2",
        "date": "2019-02-09 19:52:31 +0200",
        "subject": "v2.10: Bug Fixes"
    },
    {
        "commit": "51971617a82a3f58efe33dff8386bc94fe1ac628",
        "date": "2019-02-09 19:01:16 +0200",
        "subject": "Fix year on 2.09 release.",
        "body": "Reported by Achilleas Mantzios."
    },
    {
        "commit": "057e2e27822ffd053f735762e1441fccea24c5ed",
        "date": "2019-02-09 18:57:30 +0200",
        "subject": "Add unimplemented S3 driver method required for archive-get.",
        "body": "This was not being caught because the integration tests for S3 were running remotely and going through the Perl code rather than the new C code.\n\nImplement the exists method for the S3 driver and add tests to prevent a regression."
    },
    {
        "commit": "6e88f93991171632f33fd1b12fc1090d4a9f02a5",
        "date": "2019-02-05 18:55:07 +0200",
        "subject": "Fix check for improperly configured pg-path.",
        "body": "The check to verify that pg-path and data_directory are equal was not working because pg-path was getting overwritten with data_directory before validation took place."
    },
    {
        "commit": "be8f31a9524f7b6c47e52a01f89aaf9f0a65ddc2",
        "date": "2019-02-05 15:34:18 +0200",
        "subject": "JSON improvements.",
        "body": "Optimize the parser implementation and make the renderer more null tolerant.\n\nAlso make some string and variant constructors null tolerant."
    },
    {
        "commit": "b3d1a2a8023adc6d1e35221dc6c3789a1b772c5c",
        "date": "2019-02-02 15:18:10 +0200",
        "subject": "FIx typos and missing debug param."
    },
    {
        "commit": "b29a8dd9c541b755381f2e103abbe0b05fc65190",
        "date": "2019-02-02 15:03:19 +0200",
        "subject": "Automatically adjust db-timeout when protocol-timeout is smaller.",
        "body": "This already worked in reverse, but this case is needed when a command that only uses protocol-timeout (e.g. info) calls a remote process where protocol-timeout and db-timeout can be set.  If protocol-timeout was set to less than the default db-timeout then an error resulted."
    },
    {
        "commit": "abc613b454f8f1aa9da5e842c5da822d26504163",
        "date": "2019-02-02 14:50:24 +0200",
        "subject": "Begin v2.10 development."
    },
    {
        "commit": "a89a3761191444ef28b22434f94bc42fd84b83ee",
        "date": "2019-01-30 22:37:35 +0200",
        "subject": "v2.09: Minor Improvements and Bug Fixes"
    },
    {
        "commit": "02dff53d45b3db2daf69ee45ac694696dc051cc3",
        "date": "2019-01-30 22:02:42 +0200",
        "subject": "Add openssl-devel install to documentation build in 711b3e67."
    },
    {
        "commit": "fb342c312591d2980bbbd490a04fb26967d04fb1",
        "date": "2019-01-30 21:11:52 +0200",
        "subject": "Add latex install to documentation build in 711b3e67."
    },
    {
        "commit": "aa3e5b8c72a75a4f5fea93b543a8fbedcd713f02",
        "date": "2019-01-30 17:03:17 +0200",
        "subject": "Allow primary gid for the test user to be different from uid.",
        "body": "Apparently up until now they have always been the same, which is pretty typical.  However, if they were not then ContainerTest.pm was not happy."
    },
    {
        "commit": "711b3e67cbfc7b404ffe2ce196ffb42159c95040",
        "date": "2019-01-30 16:53:59 +0200",
        "subject": "Add examples for building a documentation host."
    },
    {
        "commit": "dada50ee26e3891ebfca73e12a8f14080cc8ad7e",
        "date": "2019-01-30 13:39:22 +0200",
        "subject": "Fix hard-coded repository path.",
        "body": "This prevented packages from being passed to the documentation unless they were in the /backrest directory on the host.\n\nAlso make the local path /pgbackrest instead of the deprecated /backrest."
    },
    {
        "commit": "8634eb8c43c8666634fe64a49a39c6384caee64d",
        "date": "2019-01-29 12:08:14 +0200",
        "subject": "Include Posix-compliant header for fd_set.",
        "body": "Similar to f3ae3c4f, add Posix-compliant header to make FreeBSD happy."
    },
    {
        "commit": "b5a103f2df4999219ef509356ba2c46c292ecccb",
        "date": "2019-01-28 22:33:29 +0200",
        "subject": "Improve P/PP type macro handling.",
        "body": "Rather than create _P/_PP variants for every type that needs to pass/return pointers, create FUNCTION_*_P/PP() macros that will properly pass or return any single/double pointer types.\n\nThere remain a few unresolved edge cases such as CHARPY but this handles the majority of types well."
    },
    {
        "commit": "8b2a344cfecc2438aafeba7f1c1b7b0572973562",
        "date": "2019-01-28 15:06:28 +0200",
        "subject": "Remove unused type parameter from FUNCTION_TEST_RETURN().",
        "body": "This parameter was always useless but commit 7333b630 removed all references to it so remove the parameter at all call sites as well.\n\nThe original intention was probably to allow logging of TEST return values but that never happened."
    },
    {
        "commit": "7333b6302fb26191a322cc1513fd85c76b066346",
        "date": "2019-01-28 09:44:10 +0200",
        "subject": "Improve CONST type macro handling.",
        "body": "Rather than create a CONST_ variant for every type that needs to be returned const, create a FUNCTION_LOG_RETURN_CONST() macro that will return any type as const."
    },
    {
        "commit": "d29aa6128681a3912c1c48ed71cdad9395d0d347",
        "date": "2019-01-27 11:50:09 +0200",
        "subject": "Allocate extra space for concatenations in the String object.",
        "body": "The string object was reallocating memory with every concatenation which is not very efficient.  This is especially true for JSON rendering which does a lot of concatenations.\n\nInstead allocate a pool of extra memory on the first concatenation (50% of size) to be used for future concatenations and reallocate when needed.\n\nAlso add a 1GB size limit to ensure that there are no overflows."
    },
    {
        "commit": "82c2d615b3ecdb851029ad691f5a8061f949535b",
        "date": "2019-01-27 11:34:12 +0200",
        "subject": "Move MACRO_TO_STR() to common/debug.h.",
        "body": "This macro is handy for constructing static message strings so move it where the core code can see it."
    },
    {
        "commit": "4027123ef19629ff1d5638a75677fa81b3831d03",
        "date": "2019-01-27 08:01:17 +0200",
        "subject": "Update contributor name."
    },
    {
        "commit": "8f6d324b2c2576456bd0ba7f691297df1f5aba1e",
        "date": "2019-01-26 16:59:54 +0200",
        "subject": "Fix issue with multiple async status files causing a hard error.",
        "body": "Multiple status files were being created by asynchronous archiving if a high-level error occurred after one or more WAL segments had already been transferred successfully.  Error files were being written for every file in the queue regardless of whether it had already succeeded.  To fix this, add an option to skip writing error files when an ok file already exists.\n\nThere are other situations where both files might exist (various fsync and filesystem error scenarios) so it seems best to retry in the case that multiple status files are found rather than throwing a hard error (which then means that archiving is completely stuck).  In the case of multiple status files, a warning will be logged to alert the user that something unusual is happening and the command will be retried."
    },
    {
        "commit": "f3ae3c4f9d0dd63c583ab27ef1f6aa869db12a3a",
        "date": "2019-01-26 13:48:46 +0200",
        "subject": "Include Posix-compliant header for strcasecmp().",
        "body": "gcc has apparently merged this function in string.h but Posix specifies that it should be in strings.h.  FreeBSD at at least is sticking to the standard.\n\nIn the long run it might be better to implement our own strcasecmp() function but for now just add the header."
    },
    {
        "commit": "1401c023f0cfdd0266144bdd8b181e8194bbd91e",
        "date": "2019-01-26 12:02:48 +0200",
        "subject": "Fix release note typo."
    },
    {
        "commit": "053972bfe01948a463fed56b11e3522b3b10457f",
        "date": "2019-01-26 12:01:18 +0200",
        "subject": "Update address lookup in C TLS client to use modern methods.",
        "body": "The implementation using gethostbyname() was only intended to be used during prototyping but was forgotten when the code was finalized.\n\nReplace it with gettaddrinfo() which is more modern and supports IPv6."
    },
    {
        "commit": "4d1060ea6bdf60d8e9fc7ca372386f53461ed6d1",
        "date": "2019-01-26 10:39:51 +0200",
        "subject": "Replace FileOpenError with HostConnectError in TlsClient.",
        "body": "HostConnectError is more appropriate in this context."
    },
    {
        "commit": "33d39d248c5ae6fab6b4bb7564ca85b18786332c",
        "date": "2019-01-24 16:45:28 +0200",
        "subject": "Allow if condition in documentation lists and list items."
    },
    {
        "commit": "bec52b6f41a6101ab1357fb5b65ce36faefee9e4",
        "date": "2019-01-24 11:11:12 +0200",
        "subject": "Allow if in manifest variables.",
        "body": "The code supported this feature but the manifest DTD did now allow it."
    },
    {
        "commit": "db08656537b22c39e5278f9f2770b816278e771a",
        "date": "2019-01-21 17:41:59 +0200",
        "subject": "Rename FUNCTION_DEBUG_* and consolidate ASSERT_* macros for consistency.",
        "body": "Rename FUNCTION_DEBUG_* macros to FUNCTION_LOG_* to more accurately reflect what they do.  Further rename FUNCTION_DEBUG_RESULT* macros to FUNCTION_LOG_RETURN* to make it clearer that they return from the function as well as logging.  Leave FUNCTION_TEST_* macros as they are.\n\nConsolidate the various ASSERT* macros into a single ASSERT macro that is always compiled out of production builds.  It was difficult to figure out when an assert would be checked with all the different types in play.  When ASSERTs are compiled in they will always be checked regardless of the log level -- tying these two concepts together was not a good idea."
    },
    {
        "commit": "d245f8eb425322f0efcd05ab4c12b3b45cc87138",
        "date": "2019-01-21 13:51:45 +0200",
        "subject": "The info command is implemented entirely in C.",
        "body": "The C info code has already been committed but this commit wires it into main.\n\nAlso remove the info Perl code and tests since they are no longer called."
    },
    {
        "commit": "f79af47bd4ffff693e1a882955323fe73972eeb6",
        "date": "2019-01-19 20:44:40 +0200",
        "subject": "Increase timeout in storage/s3 module to improve reliability."
    },
    {
        "commit": "e57f1b529327ebeca41405b6b57602013de9d625",
        "date": "2019-01-19 12:57:40 +0200",
        "subject": "Fix escaping in JSON string parser."
    },
    {
        "commit": "7355248d6b2b1db0a7ca997db0dc2943331325a0",
        "date": "2019-01-18 22:04:37 +0200",
        "subject": "Add remote storage objects.",
        "body": "This is a partial implementation of remote storage with just enough functionality to get the info command working.  The client is written in C but the server is still in Perl, which limits progress until a C server is written."
    },
    {
        "commit": "88201f37a3b7156dcf6f4aaa659136215485c40d",
        "date": "2019-01-18 21:32:51 +0200",
        "subject": "Add ProtocolClient object and helper functions.",
        "body": "This is a complete protocol client implementation in C.\n\nCurrently there is no C server implementation so the C client is talking to a Perl server.  This won't work very long, though, as the protocol format, even though in JSON, has a lot of language-specific structure.  While it would be possible to maintain compatibility between C and Perl it's probably not worth the effort in the long run.\n\nJust as in Perl there are helper functions to make constructing protocol objects easier.  Currently only repository remotes are supported."
    },
    {
        "commit": "0986db630cf3c931ccb135a86e60ee098fdc2dec",
        "date": "2019-01-18 13:15:43 +0200",
        "subject": "Fix comment typo."
    },
    {
        "commit": "9cac403f610ff3fd4a176b9cf5a7c0543bdd892c",
        "date": "2019-01-18 11:45:40 +0200",
        "subject": "Add Exec object.",
        "body": "Executes a child process and allows the calling process to communicate with it using read/write io.\n\nThis object is specially tailored to implement the protocol layer and may or may not be generally applicable to general purpose\nexecution."
    },
    {
        "commit": "797f8098d1383d05960566174859f75d4e835613",
        "date": "2019-01-18 11:14:44 +0200",
        "subject": "Add ioReadBuf() to easily read into a buffer.",
        "body": "Moves some boilerplate into a function and makes it easier to get coverage in cases where a single buffer read captures all the data."
    },
    {
        "commit": "06d41b4dc0f84f756b57d44cc2e2ceb6b5aec493",
        "date": "2019-01-17 22:29:19 +0200",
        "subject": "Add cfgExecParam() to generate parameters for executing commands.",
        "body": "Parameters for the local/remote commands are based on parameters that are passed to the current command.\n\nGenerate parameters for the new command based on the intersection of parameters between the current command and the command to be executed."
    },
    {
        "commit": "ecd56105e688e74ad71f8a1fc0fc3e785989abe5",
        "date": "2019-01-17 22:08:31 +0200",
        "subject": "Add IoHandleRead and IoHandleWrite objects.",
        "body": "General i/o objects for reading and writing file descriptors, in particular those that can block.  In other words, these are not generally to be used with file descriptors for actual files, but rather pipes, sockets, etc."
    },
    {
        "commit": "bf0c41d9d6d5fd53cc4bf190b0c577f506323b5b",
        "date": "2019-01-16 22:23:25 +0200",
        "subject": "Add const VariantList * debug type."
    },
    {
        "commit": "7d4bbf290cf33de06fca9854f21ec9690cfd51bb",
        "date": "2019-01-16 22:16:50 +0200",
        "subject": "Fix difference in cipher type reporting missed in 8304d452.",
        "body": "The C code can't get the cipher type from the storage object because the C storage object does not have encryption baked in like the Perl code does.\n\nInstead, check backup.info to see if encryption is enabled.  This will need to rethought if another cipher type is added but for now it works fine."
    },
    {
        "commit": "e68d1e73042342c4cea0881e216e6979a3bcb140",
        "date": "2019-01-16 19:23:10 +0200",
        "subject": "Simplify info command text message when no stanzas are present.",
        "body": "Replace the repository path with just \"the repository\".  The path is not important in this context and it is clearer to state where the stanzas are missing from."
    },
    {
        "commit": "ef9dc89e080d7b364a00fec138d1961c703dd02a",
        "date": "2019-01-16 18:49:12 +0200",
        "subject": "Update Storage::Local->list() to accept an undefined path.",
        "body": "The Perl code has a tendency to generate absolute paths even when they are not needed. This change helps the C and Perl storage work together via the protocol layer."
    },
    {
        "commit": "b4146b6bff99c8d82445bfda96b237ef0cff3050",
        "date": "2019-01-16 18:45:19 +0200",
        "subject": "Update Perl repo rules to work when stanza is not specified.",
        "body": "The C storage object strives to use rules whenever possible instead of generating absolute paths.  This change helps the C and Perl storage work together via the protocol layer."
    },
    {
        "commit": "0014e159443354a46197e58f0631d7363d038cde",
        "date": "2019-01-16 18:34:50 +0200",
        "subject": "Fix escaping in JSON string renderer."
    },
    {
        "commit": "49bd8e0e3e6e2c7f5e840c613919e55ee0074414",
        "date": "2019-01-16 12:04:35 +0200",
        "subject": "Fix missing linefeed and param debug."
    },
    {
        "commit": "c0a904853664396d3ee9ffd5599634f489d924a1",
        "date": "2019-01-16 09:11:01 +0200",
        "subject": "Fix null output in JSON renderer.",
        "body": "In some cases nulls were being rendered as \"(null)\" because no special logic existed to handle them."
    },
    {
        "commit": "ec26a0594e2f1da3f2f0041ceef606f70eaeef5e",
        "date": "2019-01-16 09:05:13 +0200",
        "subject": "Allow string Variant objects to contain null.",
        "body": "This is more useful than the variant itself being null as it saves conditionals when creating."
    },
    {
        "commit": "1b334da87ffcddc5393fa0f900ec8c0395155aa7",
        "date": "2019-01-14 22:02:23 +0200",
        "subject": "Add kvMove() and varLstMove().",
        "body": "Allow these objects to be moved to another mem context."
    },
    {
        "commit": "aab9e38b9a070e8707c0a316784b456ecaeba64e",
        "date": "2019-01-14 21:34:22 +0200",
        "subject": "Return UnknownError from errorTypeFromCode() for invalid error codes.",
        "body": "The prior behavior was to throw an exception but this was not very helpful when something unexpected happened.  Better to at least emit the error message even if the error code is not very helpful."
    },
    {
        "commit": "2b02d37602e3bfc451d598032d0e3793a06e8673",
        "date": "2019-01-14 21:21:37 +0200",
        "subject": "Allow empty arrays in JSON parser."
    },
    {
        "commit": "8304d452b3683d5d1d59cf7a6cc14801ddc35efd",
        "date": "2019-01-13 22:44:58 +0200",
        "subject": "Make the C version of the info command conform to the Perl version.",
        "body": "There were some small differences in ordering and how the C version handled missing directories.  It may be that the C version is more consistent, but for now it is more important to be compatible with the Perl version.\n\nThese differences were missed because the C info command was not wired into main.c so it was not being tested in regression.  This commit does not fix the wiring issue because there will likely be a release soon and it is too big a change to put in at the last moment."
    },
    {
        "commit": "f314a1f8aa101b5f73cbb0902af7ebed9804a143",
        "date": "2019-01-13 22:22:15 +0200",
        "subject": "Improve accuracy of strSizeFormat().",
        "body": "Casting to int caused large values to be slightly inaccurate so cast to uint64_t instead.\n\nAlso, use multiplication where possible since the compiler should precompute multiplied values."
    },
    {
        "commit": "cebcb3f027d2a95f5b350df113efef78d449c72f",
        "date": "2019-01-10 09:49:28 +0200",
        "subject": "Null-terminate list returned by strLstPtr().",
        "body": "The null-terminator is required by many C functions that accept a string list so just add it in all cases rather than making it optional."
    },
    {
        "commit": "f8a9fc203909696293e57d84bc8f6d83d737097b",
        "date": "2019-01-09 19:20:38 +0200",
        "subject": "Fix typos in monitoring examples."
    },
    {
        "commit": "ade2c3102d7459d274f0988d7d3cc2de49c7c9b4",
        "date": "2019-01-06 17:42:44 +0200",
        "subject": "Ignore SIGPIPE signals and check EPIPE result instead.",
        "body": "SIGPIPE immediately terminates the process but we would rather catch the EPIPE error and gracefully shutdown.\n\nIgnore SIGPIPE and throw the EPIPE error via normal error handling."
    },
    {
        "commit": "7272d6e2475f7fe8dd327206591b83cf4b9f498b",
        "date": "2019-01-06 17:28:17 +0200",
        "subject": "Add _DARWIN_C_SOURCE flag to Makefile for MacOS builds.",
        "body": "For some reason adding -D_POSIX_C_SOURCE=200112L caused MacOS builds to stop working.  Combining both flags seems to work fine for all tested systems."
    },
    {
        "commit": "9560baf659cafec2614e90ce72d988635cb945c1",
        "date": "2019-01-06 15:52:59 +0200",
        "subject": "Move C module include in test.c above headers included for testing.",
        "body": "Including the C module after the headers required for testing meant that if headers were missing from the C module they were not caught while directly testing the C module.\n\nThe missing headers were caught in general testing, but it is frustrating to get an error in a module that has already passed while testing another module or running CI.\n\nMove the C module include to the very top so missing headers cause immediate failures."
    },
    {
        "commit": "0e0000f59c571a3889927288a536c8e220f97fac",
        "date": "2019-01-06 15:27:30 +0200",
        "subject": "Add debug macros and extra space missed in 256b727a."
    },
    {
        "commit": "1de22cac2b0d2f9bddc794693dd2b97e61efdf85",
        "date": "2019-01-06 14:37:39 +0200",
        "subject": "Rename common/io/handle module to common/io/handleWrite.",
        "body": "ioHandleWriteOneStr() will become a helper function for the IoHandleWrite object."
    },
    {
        "commit": "f52e0187e61b6f74c66573580523018509541f98",
        "date": "2019-01-05 18:10:30 +0200",
        "subject": "Fix object struct comment to be conforming."
    },
    {
        "commit": "842147321ff39a523608e281ade7ccb5fcad7bba",
        "date": "2019-01-05 14:43:40 +0200",
        "subject": "Fix typo in error message."
    },
    {
        "commit": "59d7352f31a646c2f2491aacb922116caf125c50",
        "date": "2019-01-05 14:38:31 +0200",
        "subject": "Command-line help update missed in 200fd3aa."
    },
    {
        "commit": "200fd3aa05174e109488f533d57db503d18ce25a",
        "date": "2019-01-04 12:25:58 +0200",
        "subject": "Clarify that encryption is always performed client-side.",
        "body": "Suggested by Bruce Burdick."
    },
    {
        "commit": "50717aa846a41852179feaa69b35a924bffc66c6",
        "date": "2019-01-04 11:00:59 +0200",
        "subject": "Begin v2.09 development."
    },
    {
        "commit": "db24ff8df4b2c2de133461df3ab4f28167516dbf",
        "date": "2019-01-02 22:04:47 +0200",
        "subject": "v2.08: Minor Improvements and Bug Fixes"
    },
    {
        "commit": "98ba7ece23637ead3b6a458372f32517aef0c20f",
        "date": "2019-01-01 18:46:27 +0200",
        "subject": "Update LICENSE.txt for 2019."
    },
    {
        "commit": "26c888873e3c0956ec1e4a160715433ae3dd9eaf",
        "date": "2019-01-01 18:14:43 +0200",
        "subject": "Merge common/typeVariantListTest module into common/typeVariantTest.",
        "body": "These modules are closely related so it makes sense for them to be merged."
    },
    {
        "commit": "07b9176f257148d02c479207180c6af536ad43e1",
        "date": "2019-01-01 18:05:13 +0200",
        "subject": "Merge common/typeStringListTest module into common/typeStringTest.",
        "body": "These modules are closely related so it makes sense for them to be merged."
    },
    {
        "commit": "493fb78787b0929831899d333484140bfc636a89",
        "date": "2019-01-01 17:31:23 +0200",
        "subject": "Add strLstInsert() and strLstInsertZ() to StringList object.",
        "body": "Use lstInsert() to implement insertions into any position in a StringList."
    },
    {
        "commit": "cc6376fdb6bb3bff8ce0b432e23b1fa4ed13a210",
        "date": "2018-12-31 09:19:38 +0200",
        "subject": "Modify general document elements to allow any child element.",
        "body": "This allows for nesting of elements such as <b> and <i>."
    },
    {
        "commit": "2b7440ddf313e6dbf8b53443a26cdf211161ad26",
        "date": "2018-12-31 08:51:00 +0200",
        "subject": "Allow custom logo for PDF documentation.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "72865ca33ba383fba54da8db0bb8595890a12a3e",
        "date": "2018-12-30 16:40:20 +0200",
        "subject": "Add admonitions to documentation renderers.",
        "body": "Admonitions call out places where the user should take special care.\n\nSupport added for HTML, PDF, Markdown and help text renderers.  XML files have been updated accordingly."
    },
    {
        "commit": "3dc327fd05882b2dc27e77a7922f5c275a7e2b25",
        "date": "2018-12-20 23:20:54 +0200",
        "subject": "Add optional table captions.",
        "body": "All renderers now support table captions, when requested."
    },
    {
        "commit": "8cf8d29f124723d717fa809168c6ea587bd5d592",
        "date": "2018-12-19 19:13:26 +0200",
        "subject": "Escape special characters in latex when not in a code block.",
        "body": "A number of common characters are not allowed in latex without being escaped.\n\nAlso convert some HTML-specific codes that are used in the documentation."
    },
    {
        "commit": "23b583336f3095b3e64d6068199b5c449dc776ac",
        "date": "2018-12-18 22:12:59 +0200",
        "subject": "Set TCP keepalives on S3 connections.",
        "body": "Keepalives may help in situations where RST packets are being blocked by a firewall or otherwise do not arrive.\n\nThe C code uses select on all reads so it should never block, but add keepalives just in case."
    },
    {
        "commit": "96028073cb45fffc5df0d510f3dd143ca10d7d62",
        "date": "2018-12-18 22:02:23 +0200",
        "subject": "Add HTML table rendering and update PDF/Markdown renderers to support header-less tables.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "b85e51d6d545df61cf22501c1db09371219a83da",
        "date": "2018-12-14 18:46:12 -0500",
        "subject": "Base menu ordering on natural ordering in the manifest.",
        "body": "Menu ordering was alphabetical which is not ideal for a user interface."
    },
    {
        "commit": "35bbb5bd6881e3f405cbd99c3992c32aa5c6d69f",
        "date": "2018-12-14 18:25:31 -0500",
        "subject": "Reorder info command text output so most recent backup is output last.",
        "body": "After a stanza-upgrade backups for the old cluster are displayed until they expire.  Cluster info was output newest to oldest which meant after an upgrade the most recent backup would no longer be output last.\n\nUpdate the text output ordering so the most recent backup is always output last."
    },
    {
        "commit": "205525b60780587366b9786750535a55977f0221",
        "date": "2018-12-13 16:22:34 -0500",
        "subject": "Migrate local info command to C.",
        "body": "The info command will only be executed in C if the repository is local, i.e. not located on a remote repository host.  S3 is considered \"local\" in this case.\n\nThis is a direct migration from Perl to integrate as seamlessly with the remaining Perl code as possible. It should not be possible to determine if the C version is running unless debug-level logging is enabled."
    },
    {
        "commit": "e6ef40e8a327d94e5111d21dd056eefbe5d19a86",
        "date": "2018-12-13 15:46:18 -0500",
        "subject": "Add infoBackup object to encapsulate the backup.info file.",
        "body": "The infoBackup object is the counterpart to the infoArchive object which encapsulates the archive.info file.\n\nCurrently the object is read-only, i.e. it is not possible to create a new or modify an existing backup.info file.\n\nThere a number of constants that will also be used in the infoManifest object so go ahead and create a module to contain them so they don't need to be moved later."
    },
    {
        "commit": "56d466ce4b39173c777e70e16914a0a76a400dfb",
        "date": "2018-12-13 15:20:57 -0500",
        "subject": "Add null support to jsonToKv().",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "d6dfbfd2f3cc2c838d6c1d28ba96076efa9364a6",
        "date": "2018-12-12 14:35:44 -0500",
        "subject": "Add zlib1g-dev to Debian builds.",
        "body": "Not all debian-based distros were getting this installed."
    },
    {
        "commit": "df947cfcb22928ac4487c74483a49075e35ea15d",
        "date": "2018-12-12 13:52:23 -0500",
        "subject": "Add documentation for building the documentation.",
        "body": "A basic primer for building the documentation.  Lots that could be added, but it's a start."
    },
    {
        "commit": "fdc76742c8e98e630fa4219ba8e9aad79c882e40",
        "date": "2018-12-12 13:48:31 -0500",
        "subject": "Use absolute paths so that ./doc.pl runs.",
        "body": "The relative paths used would not correctly find required libraries and DTD files."
    },
    {
        "commit": "ee04ebe3142b0f170ef6662db3b6be3e2ba2e32e",
        "date": "2018-12-12 11:15:09 -0500",
        "subject": "Fix Centos/RHEL 7 documentation builds.",
        "body": "This was caused by a new container version that was released around December 5th.  The new version explicitly denies user logons by leaving /var/run/nologin in place after boot.\n\nThe solution is to enable the service that is responsible for removing this file on a successful boot."
    },
    {
        "commit": "2f15a90d18e0cdc0d91e9915b400acfc78ccaf26",
        "date": "2018-12-10 18:45:57 -0500",
        "subject": "Add infoArchiveIdHistoryMatch() to the InfoArchive object.",
        "body": "Match a PostgreSQL system identifier and version to a pgBackRest archive id."
    },
    {
        "commit": "f0417ee524d1759b1aa5949abcae4769741ce550",
        "date": "2018-12-10 18:31:49 -0500",
        "subject": "Use cast to make for loop more readable in InfoPg module.",
        "body": "The previous way worked but was a head-scratcher when reading the code.  This cast hopefully makes it a bit more obvious what is going on."
    },
    {
        "commit": "2514d08d0dc6d28a59bd884a751b734c70e2c0c0",
        "date": "2018-12-10 18:15:06 -0500",
        "subject": "Remove #define statements in the InfoPg module to conform with newly-adopted coding standards.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "fe152b8f29ff794cd6108c8295e35c44fe37c847",
        "date": "2018-12-10 18:08:26 -0500",
        "subject": "Rename constants in Info module for consistency.",
        "body": "INFO is generally used as the prefix for info file constants so rename these accordingly.\n\nAlso follow newly-adopted coding standards for when #define is required for a static String constant."
    },
    {
        "commit": "e3435ec386c19fc7a6f08b9d08d4cee4bf8e36f4",
        "date": "2018-12-10 17:35:31 -0500",
        "subject": "Add path expression for repository backup to the storage helper.",
        "body": "This is the counterpart to the archive path expression and constructs paths into the backup part of the repository."
    },
    {
        "commit": "4f539db8d9c666fa5a9c4e020e387a3b26886b83",
        "date": "2018-12-10 17:01:33 -0500",
        "subject": "Allow NULL stanza in storage helper.",
        "body": "Some commands (e.g. info) do not take a stanza or the stanza is optional.  In that case it is the job of the command to construct the repository path with a stanza as needed.\n\nUpdate helper functions to omit the stanza from the constructed path when it is NULL."
    },
    {
        "commit": "cbf514e191783937de63b5a276fcefc426e6f430",
        "date": "2018-12-10 16:32:41 -0500",
        "subject": "Improve info error messages introduced in 74b72df9.",
        "body": "- Add detail to errors when info files are loaded with incorrect encryption settings.\n- Throw FileMissingError rather than FileOpenError when both copies of the info file are missing.\n- If one file is present (but errors) and the other is missing, then return the error for the file that was present."
    },
    {
        "commit": "80a3e215213090878e1519f4f4866de2ff6ee67a",
        "date": "2018-12-10 16:11:51 -0500",
        "subject": "Add strSizeFormat() to String object.",
        "body": "Converts sizes in bytes to a more human-readable form, .e.g. 1KB, 1.1GB."
    },
    {
        "commit": "947fa6fc2b086f0c2fad602b9921861c0bd18fd3",
        "date": "2018-12-10 15:43:52 -0500",
        "subject": "Fix comment typo.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "1c5f8f45b68ad87553c2219ffb8e0da0314ad920",
        "date": "2018-12-07 12:32:10 -0500",
        "subject": "Add configuration to the standby so it works as a primary when promoted.",
        "body": "This code was generated during testing and it seemed a good idea to keep it.  It is only a partial solution since the primary also needs additional configuration to be able to fail back and forth."
    },
    {
        "commit": "495391c7430ee8f4aafc006f6cea829e6a3ca981",
        "date": "2018-12-07 12:19:28 -0500",
        "subject": "Pick pg_switch_wal()/pg_switch_xlog() based on PostgreSQL version.",
        "body": "One step in making the documentation build for all versions that we support."
    },
    {
        "commit": "e6abdfb5b864b6526e0e5cb147911bd8ff5c8e15",
        "date": "2018-12-07 07:41:26 -0500",
        "subject": "Add error message when current user uid/gid does not map to a name.",
        "body": "This condition resulted in a nasty stack trace dump when the undefined value was used later on."
    },
    {
        "commit": "ac84ffb90156585c3f7a84ed757bc2603da13f31",
        "date": "2018-12-06 11:57:30 -0500",
        "subject": "Clarify that storageExists() is only valid for files.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "a72759eb5bad455fc1cca5e1e073628643d6dc0b",
        "date": "2018-12-06 11:53:38 -0500",
        "subject": "Add comments on String and Variant usage regarding memory contexts.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "11181e69b818452a0b01d388ca5ce0879e6c3a3d",
        "date": "2018-12-06 09:04:01 -0500",
        "subject": "Disable Centos/RHEL 7 documentation builds.",
        "body": "These were introduced in 33fa2ede and ran for a day or so before they started failing consistently on CI.  Local builds work fine.\n\nDisable them to free the pipeline for further commits while we determine the issue."
    },
    {
        "commit": "e73416e9e39118a3eb7a10d4d3f434ef7cc1c4ba",
        "date": "2018-12-05 17:56:47 -0500",
        "subject": "Change file ownership only when required.",
        "body": "Previously chown() would be called even when no ownership changes were required.\n\nIn most cases changes are not required and it seems better to perform an extra stat() rather than an extra chown().\n\nAlso add unit tests for owner() since there weren't any."
    },
    {
        "commit": "e96986a4e1e7aa5302686f559ca2848e1518669f",
        "date": "2018-12-05 16:21:45 -0500",
        "subject": "Error when --target-action=shutdown specified for PostgreSQL < 9.5.",
        "body": "This equaled \"promote\" on unsupported versions which qualifies as a surprising behavior."
    },
    {
        "commit": "5b52f020212d75b4f1001727e1a0d8acbae0fe60",
        "date": "2018-12-05 15:58:45 -0500",
        "subject": "Clarify when target-action is effective and PostgreSQL version support.",
        "body": "Suggested by Keith Fiske."
    },
    {
        "commit": "a0ecf53ead32070045119e8a129d0d07da3662fa",
        "date": "2018-12-05 13:07:55 -0500",
        "subject": "Fix documentation typo."
    },
    {
        "commit": "bf873be4aa2688416ec63c8920144a847df142f7",
        "date": "2018-12-05 12:51:13 -0500",
        "subject": "Redact authentication header when throwing S3 errors.",
        "body": "The authentication header contains the access key (not the secret key) so don't include it in errors that can be seen at any log level."
    },
    {
        "commit": "cc6447356ef436582fdd3501311cb8da0f4f0342",
        "date": "2018-12-05 09:15:45 -0500",
        "subject": "Fix test binary name for gprof.",
        "body": "This got missed in 1f8931f7 when the test binary was renamed.\n\nAlso output call graph along with the flat report.  The flat report is generally most useful but it doesn't hurt to have both."
    },
    {
        "commit": "33fa2ede7d106db6bf95712747bd0a8ed52f1be5",
        "date": "2018-12-05 07:12:28 -0500",
        "subject": "Add Centos/RHEL 7 option to documentation build.",
        "body": "Centos/RHEL 7 builds can be specified with --var=os-type=centos7.\n\nAlso added to the documentation release and CI builds."
    },
    {
        "commit": "baeff9e4f04c7f86f9cbe84efaf4dc66b3a4add4",
        "date": "2018-12-04 17:33:56 -0500",
        "subject": "Create common if expressions for testing os-type.",
        "body": "These expressions simplify os-type testing.  This will be especially true as more OS types are added."
    },
    {
        "commit": "9e217d02564d30bcdcb865f87323221aa2969169",
        "date": "2018-12-04 13:17:55 -0500",
        "subject": "Documentation may be built with user-specified packages.",
        "body": "By default the documentation builds pgBackRest from source, but the documentation is also a good way to smoke-test packages.\n\nAllow a package file to be specified by passing --var=package=/path/to/package.ext.  This works for Debian and CentOS 6 builds."
    },
    {
        "commit": "0db030fa63b74fb6e0a8ad58f1417e39cd1eac9e",
        "date": "2018-12-04 11:46:25 -0500",
        "subject": "Add coding standards for String constants."
    },
    {
        "commit": "14190f9e6c290383676a4332ff5c71e9cc83c66a",
        "date": "2018-12-03 12:41:53 -0500",
        "subject": "Update URL for Docker install.",
        "body": "As usual the old URL started providing a broken version of Docker rather than producing a clear error message.  This happens once a year or so."
    },
    {
        "commit": "17e611cb883b6086a802c2adfbda384817feaa09",
        "date": "2018-12-01 12:40:01 -0500",
        "subject": "Replace keywords with more flexible if statements.",
        "body": "Keywords were extremely limited and prevented us from generating multi-version documentation and other improvements.\n\nReplace keywords with an if statement that can evaluate a Perl expression with variable replacement.\n\nSince keywords were used to generate cache keys, add a --key-var parameter to identify which variables should make up the key."
    },
    {
        "commit": "47490ba9600c25f75a9d833d9a42da3633257751",
        "date": "2018-11-30 18:47:42 -0500",
        "subject": "Fix comment typo.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "977506b44615cc9d9d9c581ffd0fd407b7d174d8",
        "date": "2018-11-30 11:15:52 -0500",
        "subject": "Clarify that region/endpoint must be configured correctly for the bucket.",
        "body": "Suggested by Pritam Barhate."
    },
    {
        "commit": "64b97fd7ca3410cd6bca3c01bc438bb104191f78",
        "date": "2018-11-30 10:55:29 -0500",
        "subject": "Correct archive-get-queue-max to be size type.",
        "body": "This somehow was not configured as a size option when it was added.  It worked, but queue sizes could not be specified in shorthand, e.g. 128GB.\n\nThis is not a breaking change because currently configured integer values will be read as bytes."
    },
    {
        "commit": "1ad67644dade53595e2f210d0f75cc247b3ea2a5",
        "date": "2018-11-30 10:38:02 -0500",
        "subject": "Remove request for S3 object info directly after putting it.",
        "body": "After a file is copied during backup the size is requested from the storage in case it differs from what was written so that repo-size can be reported accurately. This is useful for situations where compression is being done by the filesystem (e.g. ZFS) and what is stored can differ in size from what was written.\n\nIn S3 the reported size will always be exactly what was written so there is no need to check the size and doing so immediately can cause problems because the new file might not appear in list commands. This has not been observed on S3 (though it seems to be possible) but it has been reported on the Swift S3 gateway.\n\nAdd a driver capability to determine if size needs to be called after a file is written and if not then simply use the number of bytes written for repo-size."
    },
    {
        "commit": "5d3c8e47f14c9f497866a899bed7d6e25f0fb67f",
        "date": "2018-11-29 14:45:15 -0500",
        "subject": "Pre-build containers for any execute elements marked pre.",
        "body": "This allows the documentation to be built more quickly and offline during development when --pre is specified on the command line.\n\nEach host gets a pre-built container with all the execute elements marked pre. As long as the pre elements do not change the container will not need to be rebuilt.\n\nThe feature should not be used for CI builds as it may hide errors in the documentation."
    },
    {
        "commit": "74b72df9dbfbfb00d5b729cb83bef35e77fd73c6",
        "date": "2018-11-28 18:41:21 -0500",
        "subject": "Improve error message when info files are missing/corrupt.",
        "body": "The previous error message only showed the last error.  In addition, some errors were missed (such as directory permission errors) that could prevent the copy from being checked.\n\nShow both errors below a generic \"unable to load\" error.  Details are now given explaining exactly why the primary and copy failed.\n\nPreviously if one file could not be loaded a warning would be output.  This has been removed because it is not clear what the user should do in this case.  Should they do a stanza-create --force?  Maybe the best idea is to automatically repair the corrupt file, but on the other hand that might just spread corruption if pgBackRest makes the wrong choice."
    },
    {
        "commit": "47687dd13a24a49409f07b99141b508739228791",
        "date": "2018-11-28 18:10:54 -0500",
        "subject": "Add xmlNodeAttribute() to XmlNode object.",
        "body": "Retrieves a node attribute unless it is the root node."
    },
    {
        "commit": "7c2fcb63e4ab62e880ebca935fb67e25fa03d5b3",
        "date": "2018-11-28 14:56:26 -0500",
        "subject": "Enable encryption for archive-get command in C.",
        "body": "The decryption filter was added in archiveGetFile() and archiveGetCheck() was modified to return the WAL decryption key stored in archive.info.  The rest was plumbing.\n\nThe mock/archive/1 integration test added encryption to provide coverage for the new code paths while mock/archive/2 dropped encryption to provide coverage for the existing code paths. This caused some churn in the expect logs but there was no change in behavior."
    },
    {
        "commit": "6c23830991558d74ecade1d510fbd50acf5b0f18",
        "date": "2018-11-28 14:41:10 -0500",
        "subject": "Add encryption capability to Info* objects.",
        "body": "Info objects can be stored encrypted and loaded with a cipher type and passphrase."
    },
    {
        "commit": "410a04a58ee59de3055483a2f971c2e42015267e",
        "date": "2018-11-28 14:20:12 -0500",
        "subject": "Allow arbitrary InOut filters to be chained in IoFilterGroup.",
        "body": "If InOut filters were placed next to each other then the second filter would never get a NULL input signaling it to flush.  This arrangement only worked if the second filter had some other indication that it should flush, such as a decompression filter where the flush is indicated in the input stream.\n\nThis is not a live issue because currently no InOut filters are chained together."
    },
    {
        "commit": "838cfa44b76ed885f030ebf75649df7eaace6593",
        "date": "2018-11-28 14:02:14 -0500",
        "subject": "Allow arbitrary multiplier and flush character in IoTestFilterMultiply.",
        "body": "This allows for more complex test filter chains.\n\nRename from IoTestFilterDouble to reflect the new functionality."
    },
    {
        "commit": "3e254f4cff349f2de95b557b77e3bb0baa1450c9",
        "date": "2018-11-28 12:42:36 -0500",
        "subject": "Add IoFilter interface to CipherBlock object.",
        "body": "This allows CipherBlock to be used as a filter in an IoFilterGroup.  The C-style functions used by Perl are now deprecated and should not be used for any new code.\n\nAlso add functions to convert between cipher names and CipherType."
    },
    {
        "commit": "c3a84ccae08cf7506f26a000344ea1ba2517f9a8",
        "date": "2018-11-28 12:03:27 -0500",
        "subject": "Merge cipher.h into crypto.h.",
        "body": "There is not enough in cipher.h to make it worth having a separate header."
    },
    {
        "commit": "7df7cf6e6d1e04fef41ba37cb13020ada6bf4b22",
        "date": "2018-11-27 22:49:24 -0500",
        "subject": "Rename cipherBlock*() functions to cipherBlock*C().",
        "body": "Some of the old names conflict with the new functions that must be created to implement the filter. Rename these to cipherBlock*C() to indicate that they take C-style parameters.\n\nThese functions are only used by the Perl LibC code and will be removed or refactored eventually."
    },
    {
        "commit": "fea27dbd7eb4ea72a8c792628bba6ed849f68c08",
        "date": "2018-11-27 22:02:08 -0500",
        "subject": "Return IoFilterGroup * from ioFilterGroupAdd().",
        "body": "This allows filters adds to be chained."
    },
    {
        "commit": "56ce98b2f0710b77e9df720722d200add670238e",
        "date": "2018-11-25 10:06:31 -0500",
        "subject": "Explicitly compile with Posix 2001 standard.",
        "body": "This standard was being selectively applied in modules that needed it.\n\nInstead, apply the standard to all compilation for consistency."
    },
    {
        "commit": "315aa2c4512c2789889d68d1253366c5c75d405b",
        "date": "2018-11-25 08:39:41 -0500",
        "subject": "Conditional compilation of Perl logic in exit.c.",
        "body": "This file is the only one to contain Perl logic outside of the perl module.  Make the Perl logic conditional to improve reusability."
    },
    {
        "commit": "78fe642eaeae4f7f73796fdc45b5c2a81e9f3e9f",
        "date": "2018-11-24 20:31:35 -0500",
        "subject": "Remove extraneous use/include statements.",
        "body": "Use conditional loading to make docs work in the absence of LibC.\n\nSomehow this also required a use statement to be added. Perl, go figure."
    },
    {
        "commit": "801e2a5a2ce14f6ef447526c646f0c641c94efa2",
        "date": "2018-11-24 19:05:03 -0500",
        "subject": "Rename PGBACKREST/BACKREST constants to PROJECT.",
        "body": "This brings consistency between the C and Perl constants and allows for easier code reuse."
    },
    {
        "commit": "7a1a68883546bbfa0b24fc65054b0a7bf4f09b66",
        "date": "2018-11-24 09:12:44 -0500",
        "subject": "Add EOF detection to content read in HttpClient.",
        "body": "If the connection closed before all content was sent httpClientRead() would get stuck in an infinite loop waiting for it to arrive.\n\nEOF should never be reached during content read so immediately error if EOF is detected."
    },
    {
        "commit": "f4a1751abc9b42d03e0d041fa386a879beb3ee5b",
        "date": "2018-11-23 16:02:33 -0500",
        "subject": "Improve JSON to Variant conversion and add Variant to JSON conversion.",
        "body": "Add boolean and one-dimensional list types to jsonToKv().\n\nAdd varToJson() and kvToJson() to convert Variants and KeyValues to JSON."
    },
    {
        "commit": "e641c130d30706755775ee328637e3be9d6dba55",
        "date": "2018-11-23 12:19:56 -0500",
        "subject": "Fix release note typo."
    },
    {
        "commit": "beae37533041e63a71b33757e4df933e197e575f",
        "date": "2018-11-23 12:18:07 -0500",
        "subject": "Enable S3 storage for archive-get command in C.",
        "body": "The only change required was to remove the filter that prevented S3 storage from being used.  The archive-get command did not require any modification which demonstrates that the storage interface is working as intended.\n\nThe mock/archive/3 integration test was modified to run S3 storage locally to provide coverage for the new code paths while mock/stanza/3 was modified to run S3 storage remotely to provide coverage for the existing code paths.  This caused some churn in the expect logs but there was no change in behavior."
    },
    {
        "commit": "b5690e21a4ad453f004087adf434adf13d109a8c",
        "date": "2018-11-23 12:01:36 -0500",
        "subject": "Allow I/O read interface to explicitly request blocking reads.",
        "body": "TlsClient introduced a non-blocking read which is required to read protocol messages that are linefeed-terminated rather than a known size. However, in many cases the expected number of bytes is known in advance so in that case it is more efficient to have tlsClientRead() block until all the bytes are read.\n\nAdd block parameter to all read functions and use it when a blocking read is required. For most read functions this is a noop, i.e. if the read function never blocks then it can ignore the parameter.\n\nIn passing, set the log level of storageNew*() functions to debug to expose more high-level I/O operations."
    },
    {
        "commit": "256b727a3d13b680ab2a4c7b3669649c857d1daf",
        "date": "2018-11-21 19:32:49 -0500",
        "subject": "Add S3 storage driver.",
        "body": "Only the storageNewRead() and storageList() functions are currently implemented, but this is enough to enable S3 for the archive-get command."
    },
    {
        "commit": "72252ed2a102bf9c43d45500de1a29834d36721c",
        "date": "2018-11-21 19:11:45 -0500",
        "subject": "Add HttpClient object.",
        "body": "A robust HTTP client with connection reuse and automatic retries.\n\nUsing a single object to make multiple requests is more efficient because connections are reused whenever possible. Requests are automatically retried when the connection has been closed by the server. Any 5xx response is also retried.\n\nOnly the HTTPS protocol is currently supported."
    },
    {
        "commit": "1dd06a6e460049ff888e152f33697b1e49046c30",
        "date": "2018-11-21 18:43:25 -0500",
        "subject": "Add TlsClient object.",
        "body": "A simple, secure TLS client intended to allow access to services that are exposed via HTTPS. We call it TLS instead of SSL because SSL methods are disabled so only TLS connections are allowed.\n\nThis object is intended to be used for multiple TLS connections against a service so tlsClientOpen() can be called each time a new connection is needed. By default, an open connection will be reused so the user must be prepared to retry their transaction on a read/write error if the server closes the connection before it can be reused. If this behavior is not desirable then tlsClientClose() may be used to ensure that the next call to tlsClientOpen() will create a new TLS session.\n\nNote that tlsClientRead() is non-blocking unless there are *zero* bytes to be read from the session in which case it will raise an error after the defined timeout. In any case the tlsClientRead()/tlsClientWrite()/tlsClientEof() functions should not generally be called directly. Instead use the read/write interfaces available from tlsClientIoRead()/tlsClientIoWrite()."
    },
    {
        "commit": "ac426bc456425d68e33a7facc8393f26b9d17bb1",
        "date": "2018-11-21 18:13:37 -0500",
        "subject": "New test containers with static test certificates.",
        "body": "Test certificates were generated dynamically but there are advantages to using static certificates.  For example, it possible to use the same certificate between container versions.  Mostly, it is easier to document the certificates if they are not buried deep in the container code.\n\nThe new test certificates are initially intended to be used with the C unit tests but they will eventually be used for integration tests as well.\n\nTwo new certificates have been defined. See test/certificate/README.md for details.\n\nThe old dynamic certificates will be retained until they are replaced."
    },
    {
        "commit": "53e3651ccaaaa1652f53903534974377a2808aec",
        "date": "2018-11-21 08:30:14 -0500",
        "subject": "Remove embedded semicolon from String constant macros.",
        "body": "The embedded semicolon led to inconsistent semicolons when using the macro and is not our general convention.\n\nRemove embedded semicolons from the macros and add semicolons in usage where they were not present."
    },
    {
        "commit": "bc25db5667b3b05ba47c547591717ee9627f650c",
        "date": "2018-11-20 20:40:11 -0500",
        "subject": "Add interface objects for libxml2.",
        "body": "Add XmlDocument, XmlNode, and XmlNodeList objects as a thin interface layer on libxml2.\n\nThis interface is not intended to be comprehensive. Only a few libxml2 capabilities are exposed but more can be added as needed."
    },
    {
        "commit": "6680130c6f5553e6d0c587dccc57b4a8508c4ab1",
        "date": "2018-11-20 19:24:53 -0500",
        "subject": "Require S3 key options except for local/remote commands.",
        "body": "S3 key options (repo1-s3-key/repo1-s3-key-secret) were not required which meant that users got an ugly assertion when they were missing rather than a tidy configuration error.\n\nOnly the local/remote commands need them to be optional.  This is because local/remote commands get all their options from the command line but secrets cannot be passed on the command line.  Instead, secrets are passed to the local/remote commands via the protocol for any operation that needs them.\n\nThe configuration system allows required to be set per command so use that to improve the error messages while not breaking the local/remote commands."
    },
    {
        "commit": "f743d4e92418d73717225599e3dbd03a4af7dec9",
        "date": "2018-11-20 15:48:56 -0500",
        "subject": "Add testRepoPath() to let C unit tests know where the code repository is located.",
        "body": "This allows a C unit test to access data in the code repository that might be useful for testing.\n\nAdd testRepoPathSet() to set the repository path.\n\nIn passing remove extra whitespace in the TEST_RESULT_VOID() macro."
    },
    {
        "commit": "b0659278cc7ab45519d791c10edbb494024f5148",
        "date": "2018-11-16 17:22:22 -0500",
        "subject": "Add ServiceError for errors from a service that can be retried.",
        "body": "An example is HTTP 5xx errors which should mostly be retried."
    },
    {
        "commit": "3aa4fda573d95839d617c65880a240d4093951b7",
        "date": "2018-11-16 16:17:24 -0500",
        "subject": "Add missing LOG_DEBUG() macro."
    },
    {
        "commit": "d0e553e4c2a024be44a92dfa5eb0ce77330bcef7",
        "date": "2018-11-16 16:05:06 -0500",
        "subject": "Reduce debug level for infoIni() to test.",
        "body": "Getters should generally not be logging at debug or trace level since it clutters the log.\n\nIn passing move the destructor to the end of the file."
    },
    {
        "commit": "6532912d51050df4587ec54eee567e37fcb8b74e",
        "date": "2018-11-16 10:04:14 -0500",
        "subject": "Begin v2.08 development."
    },
    {
        "commit": "04d9e4d5a88512707c350e3885e359d53c3ca36b",
        "date": "2018-11-16 09:50:50 -0500",
        "subject": "v2.07: Automatic Backup Checksum Delta"
    },
    {
        "commit": "332a68ea8d713f24d1db08e20d5b95bcf32cc74e",
        "date": "2018-11-16 08:48:02 -0500",
        "subject": "Fix incorrect config constant introduced in 5e3b7cbe.",
        "body": "This commit introduced PGBACKREST_CONFIG_ORIG_PATH_FILE_STR as a String constant for PGBACKREST_CONFIG_ORIG_PATH_FILE but failed to get the value correct.\n\nAlso, no test was added for PGBACKREST_CONFIG_ORIG_PATH_FILE_STR to prevent regressions as there is for  PGBACKREST_CONFIG_ORIG_PATH_FILE."
    },
    {
        "commit": "75f6e45de26cf4ab087dc791f2aa177553584472",
        "date": "2018-11-15 16:31:46 -0500",
        "subject": "Add \\n, \\r, and 0 String constants."
    },
    {
        "commit": "b6f7cbc31531b6e88a89ecfe9c8d3ebc1e682d2e",
        "date": "2018-11-15 16:25:46 -0500",
        "subject": "Add destructors to IoRead and IoWrite objects.",
        "body": "These interfaces previously used the memory context of the object they were associated with and did not have their own destructors.\n\nThere are times when it is useful to free the interface without also freeing the underlying object so give IoRead and IoWrite their own memory contexts and destructors.\n\nIn passing fix a comment type in bufferRead.c."
    },
    {
        "commit": "480e1da7986a278a3b5c8aca965e539d383da9cc",
        "date": "2018-11-14 08:53:42 -0500",
        "subject": "Add ioWriteFlush() to flush pending output.",
        "body": "By default the IoWrite object does not write until the output buffer is full but this is a problem for protocol messages that must be sent in order to get a response.\n\nioWriteFlush() is not called internally by IoWrite but can be used at any time to immediately write all bytes from the output buffer without closing the IoWrite object."
    },
    {
        "commit": "7918629f5931b2eeca316d8b37191718db4650f4",
        "date": "2018-11-14 08:16:53 -0500",
        "subject": "Modify value of PERL_EMBED_ERROR macro.",
        "body": "Remove three exclamation points which by convention we use as a marker for code that needs attention before it can be committed to master."
    },
    {
        "commit": "504e7d77faeecd213df99ec320246e10a526f9ad",
        "date": "2018-11-14 08:13:01 -0500",
        "subject": "Add comment regarding vars being required in blocks.",
        "body": "Documentation block syntax requires that at least one var be specified.\n\nThis limitation should be removed but for now add a comment to describe why a bogus var is defined."
    },
    {
        "commit": "14d2f8b86c4fd3755af6cd9f5210cf1e34e8d090",
        "date": "2018-11-14 08:11:11 -0500",
        "subject": "Reword misleading message in stack trace when parameter buffer is full.",
        "body": "The prior message stated that there had been a buffer overrun which is not true since the code prevents that.\n\nIn fact, this message means the parameter buffer filled while building the parameter list. Rather than display a partial list we output this message instead.\n\nAlso remove three exclamation points which by convention we use as a marker for code that needs attention before it can be committed to master."
    },
    {
        "commit": "8c7e97a369a145f2d71856f2ff2ed734452a9040",
        "date": "2018-11-14 08:08:26 -0500",
        "subject": "Clarify comment about main.c being excluded from unit testing.",
        "body": "Also remove three exclamation points which by convention we use as a marker for code that needs attention before it can be committed to master."
    },
    {
        "commit": "73102034913ec2e3ca1b1cc485f8ce04820bba27",
        "date": "2018-11-14 07:42:28 -0500",
        "subject": "Remove obsolete comments."
    },
    {
        "commit": "a0b2af567a8b6893c6e9b7f3b9a73acd4496332e",
        "date": "2018-11-13 20:58:32 -0500",
        "subject": "Add TEST_LOG() and TEST_LOG_FMT() macros.",
        "body": "These macros provide a convenient way to output debug information in tests.\n\nThey are not intended to be left in test code when it is committed to master."
    },
    {
        "commit": "a582ad837f9ada7b924d6c0a23580f88c495ce2e",
        "date": "2018-11-13 20:43:08 -0500",
        "subject": "Add logging macros for TimeMSec type."
    },
    {
        "commit": "acb579c4698f856e4c1ceedca751aaeadc9d2d3f",
        "date": "2018-11-13 10:37:58 -0500",
        "subject": "Tighten limits on code coverage context selection.",
        "body": "If the last } of a function was marked as uncovered then the context selection would overrun into the next function.\n\nStart checking context on the current line to prevent this.  Make the same change for start context even though it doesn't seem to have an issue."
    },
    {
        "commit": "086bc35ddc71b008a5d20f8e5e3d0305508dfdf5",
        "date": "2018-11-12 21:18:53 -0500",
        "subject": "Make ioReadLine() read less aggressively.",
        "body": "ioReadLine() calls ioRead(), which aggressively tries to fill the output buffer, but this doesn't play well with blocking reads.\n\nGive ioReadLine() an option that tells it to read only what is available.  That doesn't mean the function will never block but at least it won't do so by reading too far."
    },
    {
        "commit": "bc810e5a87176ee68491e79473325a8a411a34c9",
        "date": "2018-11-12 20:44:56 -0500",
        "subject": "Remove error suppression for pgBackRest make.",
        "body": "This looks like a copy-pasto because make works just fine without it."
    },
    {
        "commit": "a2672557f80da95d6103d49e307321568285e5d6",
        "date": "2018-11-12 20:00:57 -0500",
        "subject": "Allow storage path and file mode to be 0.",
        "body": "Not all storage drivers support Posix-style permissions, e.g. S3."
    },
    {
        "commit": "7107cc68d23f344e7b13206eaec506a039a00350",
        "date": "2018-11-12 18:11:16 -0500",
        "subject": "Expand context shown in coverage and update colors.",
        "body": "Too few lines were shown for coverage context so show the entire function if it has any missing coverage.\n\nUpdate colors to work with light and dark browser modes."
    },
    {
        "commit": "0ba2292a29fcef873991098cc48b488580fbb713",
        "date": "2018-11-12 14:23:42 -0500",
        "subject": "Add EMPTY_STR to String object."
    },
    {
        "commit": "aff9693e640c8a0b76e46f31d4fa569fd7d63289",
        "date": "2018-11-12 14:13:55 -0500",
        "subject": "Add strEmpty() to String object.",
        "body": "strEmpty() is more concise and explanatory than strSize() == 0."
    },
    {
        "commit": "38c5f657704c4c6899a0bf86bbce5fd332d97971",
        "date": "2018-11-11 18:12:43 -0500",
        "subject": "Use THROW_ON_SYS_ERROR macro to improve fork code coverage.",
        "body": "Lack of code coverage in this module is just noise since these functions cannot generally be made to fail.\n\nAny failures are fatal."
    },
    {
        "commit": "72ea47bfb341ff78f2582607e27e7b7df2ac25f8",
        "date": "2018-11-11 18:07:56 -0500",
        "subject": "Add KernelError to report miscellaneous kernel errors."
    },
    {
        "commit": "257df96b12f38cba45751449dcd64ca712dd96c2",
        "date": "2018-11-11 18:06:09 -0500",
        "subject": "Add THROW*_ON_SYS_ERROR* macros to test and throw system errors.",
        "body": "These macros check the error result internally and are appropriate for system calls that won't return errors and so break coverage."
    },
    {
        "commit": "22ecbc153a447b4f635fad2ab71fdd92ed8294bc",
        "date": "2018-11-11 17:32:42 -0500",
        "subject": "New, concise coverage report for C.",
        "body": "The report HTML generated by lcov is overly verbose and cumbersome to navigate. Since we maintain 100% coverage it's far more interesting to look at what is not covered than what is.\n\nThe new report presents all missing coverage on a single page and excludes code that is covered for brevity."
    },
    {
        "commit": "3cd43fd60cd46430f86084f37b6ed874124e2848",
        "date": "2018-11-11 16:34:15 -0500",
        "subject": "Add new HTML tags and strExtra to DocHtmlElement.",
        "body": "Add HTML tags for table elements.\n\nThe strExtra parameter allows adhoc tags to be added to an element for features that can't be implemented with CSS, e.g. colspan."
    },
    {
        "commit": "5e3b7cbe6ee7a409ad6e311668eb764fee82939c",
        "date": "2018-11-10 18:32:49 -0500",
        "subject": "Apply String constant macros where appropriate.",
        "body": "This may not be all the places where the macros can be useful but it's a good start."
    },
    {
        "commit": "8f857a975e22d6a7c0e99a494169f24ed50b6c06",
        "date": "2018-11-10 09:37:12 -0500",
        "subject": "Add constant macros to String object.",
        "body": "There are many places (and the number is growing) where a zero-terminated string constant must be transformed into a String object to be usable.  This pattern wastes time and memory, especially since the created string is generally used in a read-only fashion.\n\nDefine macros to create constant String objects that are initialized at compile time rather than at run time."
    },
    {
        "commit": "df200bee2acf614edf9d008cccde67f02d89f103",
        "date": "2018-11-09 16:50:22 -0500",
        "subject": "Add regExpPrefix() to aid in static prefix searches.",
        "body": "The storageList() command accepts a regular expression as a filter.  This works fine for local filesystems where it is relatively cheap to get a complete list of files and filter them in code.  However, for remote filesystems like S3 it can be expensive to fetch a complete list of files only to discard the bulk of them locally.\n\nS3 does not filter on regular expressions but it can accept a static prefix so this function extracts a prefix from a regular expression when possible.\n\nEven a few characters can drastically reduce the amount of data that must be fetched remotely so the function does not try to be too clever.  It requires a ^ anchor and stops scanning when the first special character is found."
    },
    {
        "commit": "8c504bd2f9e6c14f134b6115f469ec3fe064cb73",
        "date": "2018-11-09 10:37:59 -0500",
        "subject": "Improve alignment of expected vs. got error test results.",
        "body": "It is easier to compare the error messages when they start at the same column."
    },
    {
        "commit": "b5a3c8c84b789558d11d67199fbcc4029721d939",
        "date": "2018-11-09 09:54:55 -0500",
        "subject": "Add strCatChr() to String object."
    },
    {
        "commit": "3e695af9614e61f72e9f0d7c3dc729cc5a27f3eb",
        "date": "2018-11-08 21:41:41 -0500",
        "subject": "New test containers.",
        "body": "* Add libxml2 library needed for S3 development.\n* Minor version updates for PostgreSQL.\n* Remove PostgreSQL 11 beta/rc repository."
    },
    {
        "commit": "7cf1f42c5c65deed8ad0bdb86a33d273438fe9a0",
        "date": "2018-11-08 19:50:31 -0500",
        "subject": "Add time since the beginning of the run to each test statement.",
        "body": "Output the time in seconds of each test statement since the start of the test run.\n\nThis helps find individual tests that are running slowly."
    },
    {
        "commit": "2150a26424cacc80ded57697b67af1e3c2a47211",
        "date": "2018-11-08 18:03:18 -0500",
        "subject": "Storage interface methods no longer declare the driver as const.",
        "body": "This works for the Posix driver but is bad for more dynamic drivers (e.g. S3) that need write access to the driver object."
    },
    {
        "commit": "12b3be1d8ed38beea67c4d4de582af9039c5bd4b",
        "date": "2018-11-08 16:48:33 -0500",
        "subject": "Limit usable Buffer size without changing allocated size.",
        "body": "Allow buffers to report a lower size than their allocated size. This means a larger buffer can be used to do the work of a smaller buffer without having to create a new buffer and concatenate.\n\nThis is useful for blocking I/O where the buffer may be too large for the amount of data that is available to read."
    },
    {
        "commit": "edb2c6eb26ca77eb3e3e05c006f3036dee2865b7",
        "date": "2018-11-08 08:37:57 -0500",
        "subject": "Construct Wait object in milliseconds instead of fractional seconds.",
        "body": "The Wait object accepted a double in the constructor for wait time but used TimeMSec internally.  This was done for compatibility with the Perl code.\n\nInstead, use TimeMSec in the Wait constructor and make changes as needed to calling code.\n\nNote that Perl still uses a double for its Wait object so translation is needed in some places.  There are no plans to update the Perl code as it will become obsolete."
    },
    {
        "commit": "a9feaba9e521e39928ff5fdbc025eeff8fc17646",
        "date": "2018-11-07 08:51:32 -0500",
        "subject": "Add memContextCallbackClear() to prevent double free() calls.",
        "body": "If an object free() method was called manually when a callback was set then the callback would call free() again.  This meant that each free() method had to protect against a subsequent call.\n\nInstead, clear the callback (if present) before calling memContextFree().  This is faster (since there is no unnecessary callback) and removes the need for semaphores to protect against a double free()."
    },
    {
        "commit": "48d2795f312224f03dc88e99434865540ca71c7e",
        "date": "2018-11-06 20:04:16 -0500",
        "subject": "Merge crypto/random module into crypto/crypto.",
        "body": "There wasn't enough code to justify a separate module/test and it seems to fit just fine in crypto/crypto."
    },
    {
        "commit": "8efa5e6a6af848a2a9d3e4c3260084d259949ee5",
        "date": "2018-11-06 19:38:38 -0500",
        "subject": "Rename CipherError to CryptoError.",
        "body": "This aligns with the general renaming from cipher to crypto."
    },
    {
        "commit": "2cb312ef5aa9f57da607229f9fe22ce5d7aa0352",
        "date": "2018-11-06 19:16:00 -0500",
        "subject": "Add cryptoError() and update crypto code to use it.",
        "body": "This adds detail to error messages when available and improves code coverage."
    },
    {
        "commit": "bef31f1802f231ce7b6ab06371148b74eb9eb6ab",
        "date": "2018-11-06 18:32:44 -0500",
        "subject": "Add base variants to all integer to string conversion functions.",
        "body": "Previously these functions were fixed at base 10 conversion. Add variants that can convert from any base."
    },
    {
        "commit": "7de9584435839f8e7b20e8f336820b84a70cafd8",
        "date": "2018-11-04 08:39:48 -0500",
        "subject": "Ignore deleted files in rsync to test/repo.",
        "body": "Deleted files are showing up in git ls-files (added 57d78092) but they don't actually exist on disk.\n\nIf there is someway to exclude deleted files from ls-files then I can't find it, so just tell rsync to ignore missing files."
    },
    {
        "commit": "57d780929741e3d09f60b252a26ad12fb645254e",
        "date": "2018-11-03 19:52:46 -0400",
        "subject": "Improve efficiency of code generation.",
        "body": "Code generation saved files even when they had not changed, which often caused code generation cascades. So, don't save files unless they have changed.\n\nUse rsync to determine which files have changed since the last test run. The manifest of changed files is saved and not removed until all code generation and builds have completed. If an error occurs the work will be redone on the next run.\n\nThe eventual goal is to do all the builds from the test/repo directory created by rsync but for now it is only used to track changes."
    },
    {
        "commit": "1f8931f73274163f27ba38aea378ea50488ba557",
        "date": "2018-11-03 16:34:04 -0400",
        "subject": "Improve single test run performance.",
        "body": "Improve on 7794ab50 by including the build flag files directly into the Makefile as dependencies (even though they are not includes).  This simplifies some of the rsync logic and allows make to do what it does best.\n\nAlso split build flag files into test, harness, and build to reduce rebuilds.  Test flags are used to build test.c, harness flags are used to build the rest of the files in the test harness, and build flags are used for the files that are not directly involved in testing."
    },
    {
        "commit": "7794ab50dc839088fc1e1137edaaf65354faa76a",
        "date": "2018-11-02 11:56:13 -0400",
        "subject": "Preserve contents of C unit test build directory between test.pl executions.",
        "body": "The contents were already preserved between tests in a single test.pl run but for a separate execution the entire project had to be built from scratch, which was getting slower as we added code.\n\nSave the important build flags in a file so the new execution knows whether the build contents can be reused."
    },
    {
        "commit": "1a98bd41b48b2619b318639faeeb688481dbc07e",
        "date": "2018-11-02 08:37:27 -0400",
        "subject": "Mount tmpfs in Vagrantfile instead test.pl.",
        "body": "Mounting/unmounting tmpfs on /home/[user]/test takes time, forces at least 3GB of memory to be available for tests, and makes it harder to preserve data between tests.\n\nInstead, move mounting of tmpfs to the Vagrantfile and add it to fstab so it survives reboots."
    },
    {
        "commit": "34c63276cd26cd5310169343bb8e17e323feef95",
        "date": "2018-11-01 11:31:25 -0400",
        "subject": "Automatically enable backup checksum delta when anomalies (e.g. timeline switch) are detected.",
        "body": "There are a number of cases where a checksum delta is more appropriate than the default time-based delta:\n\n* Timeline has switched since the prior backup\n* File timestamp is older than recorded in the prior backup\n* File size changed but timestamp did not\n* File timestamp is in the future compared to the start of the backup\n* Online option has changed since the prior backup\n\nA practical example is that checksum delta will be enabled after a failover to standby due to the timeline switch.  In this case, timestamps can't be trusted and our recommendation has been to run a full backup, which can impact the retention schedule and requires manual intervention.\n\nNow, a checksum delta will be performed if the backup type is incr/diff.  This means more CPU will be used during the backup but the backup size will be smaller and the retention schedule will not be impacted."
    },
    {
        "commit": "cca7a4ffd477871d5eab323f1a5f621fbe48a568",
        "date": "2018-10-30 16:45:42 -0400",
        "subject": "Retry all S3 5xx errors rather than just 500 internal errors.",
        "body": "We were already retrying 500 errors but 503 (rate-limiting) errors were not being retried and would cause an instant failure which aborted the command.\n\nThere are only two 5xx errors currently implemented by S3 but instead of adding 503 simply retry all 5xx errors. This is consistent with the http definition of this error class, \"the server failed to fulfill an apparently valid request.\""
    },
    {
        "commit": "286f7e501154a05d147d146d25e3dd0ea0d49d5c",
        "date": "2018-10-27 20:00:00 +0100",
        "subject": "Fix static WAL segment size used to determine if archive-push-queue-max has been exceeded.",
        "body": "This calculation was missed when the WAL segment size was made dynamic in preparation for PostgreSQL 11.\n\nFix the calculation by checking the actual WAL file sizes instead of using an estimate based on WAL segment size.  This is more accurate because it takes into account .history and .backup files, which are smaller.  Since the calculation is done in the async process the additional processing time should not adversely affect performance.\n\nRemove the PG_WAL_SIZE constant and instead use local constants where the old value is still required.  This is only the case for some tests and PostgreSQL 8.3 which does not provide a way to get the WAL segment size from pg_control."
    },
    {
        "commit": "41b00dc204a04a87b337aa5bebe7cfd4032d5eae",
        "date": "2018-10-27 16:57:57 +0100",
        "subject": "Fix issue with archive-push-queue-max not being honored on connection error.",
        "body": "If an error occurred while acquiring a lock on a remote server the error would be reported correctly, but the queue max detection code was not reached.  The tests failed to detect this because they fixed the connection before queue max, allowing the ccde to be reached.\n\nMove the queue max code before the lock so it will run even when remote connections are not working.  This means that no attempt will be made to transfer WAL once queue max has been exceeded, but it makes it much more likely that the code will be reach without error.\n\nUpdate tests to continue errors up to the point where queue max is exceeded."
    },
    {
        "commit": "03b9db9aa2e84bf6b23af8331712d1480520ca19",
        "date": "2018-10-25 14:58:25 +0100",
        "subject": "Fix error after log file open failure when processing should continue.",
        "body": "The C code was warning on failure and continuing but the Perl logging code was never updated with the same feature.\n\nRather than add the feature to Perl, just disable file logging if the log file cannot be opened.  Log files are always opened by C first, so this will eliminate the error in Perl."
    },
    {
        "commit": "d301720c58145910189829e8b2ceacccd3543c1e",
        "date": "2018-10-25 10:48:37 +0100",
        "subject": "Change infoArchiveCheckPg() to display the PostgreSQL version as a string in errors.",
        "body": "Previously an integer representation (e.g. 90400) would be displayed which is correct but not as friendly to the user."
    },
    {
        "commit": "5590bfa84c0a91d1e93ed03441e12c4dab1078c5",
        "date": "2018-10-19 18:31:05 +0200",
        "subject": "Add tests for InfoPg history fixes introduced in 070455ce.",
        "body": "The existing tests were not adequate to ensure the history was being added in the correct order when some entries were loaded from a file and others added with infoPgAdd()."
    },
    {
        "commit": "070455ce44504c63a5bf2f70093c64ed278fa12e",
        "date": "2018-10-19 12:31:56 +0200",
        "subject": "Correct current history item in InfoPg to always be in position 0.",
        "body": "The InfoPg object was partially modified in 960ad732 to place the current history item in position 0, but infoPgDataCurrent() didn't get updated correctly.\n\nRemove this->indexCurrent and make the current position always equal 0.  Use the new lstInsert() function when adding new history items via infoPgAdd(), but continue to use lstAdd() when loading from a file for efficiency.\n\nThis does not appear to be a live bug because infoPgDataCurrent() and infoPgAdd() are not yet used in any production code.  The archive-get command is the only C code using InfoPG and it always looks at the entire list of items rather than just the current item."
    },
    {
        "commit": "f345db3f7ca15480c5aa70d015150b399f3ce33a",
        "date": "2018-10-19 11:52:17 +0200",
        "subject": "Add lstInsert() to List object.",
        "body": "Add general purpose insert function and make lstAdd() a special insert case."
    },
    {
        "commit": "09a1ad2c10fa17e165b88731322f4dcf8de73ecc",
        "date": "2018-10-19 10:51:33 +0200",
        "subject": "Correct cfgDefDataFind() to use UINTP instead of VOIDPP.",
        "body": "Also add the UINTP macro."
    },
    {
        "commit": "06d68eada00e6ec57c662aa9ad2bacdc86eb5861",
        "date": "2018-10-16 17:21:01 +0100",
        "subject": "Begin v2.07 development."
    },
    {
        "commit": "904550c97f674d3f576d3113756f2b5c89b55ddf",
        "date": "2018-10-16 14:56:51 +0100",
        "subject": "v2.06: Checksum Delta Backup and PostgreSQL 11 Support"
    },
    {
        "commit": "2c272c220b39739ff324305593034487df81b466",
        "date": "2018-10-15 23:23:49 +0100",
        "subject": "PostgreSQL 11 support.",
        "body": "PostgreSQL 11 RC1 support was tested in 9ae3d8c46 when the u18 container was rebuilt.  Nothing substantive changed after RC1 so pgBackRest is ready for PostgreSQL 11 GA."
    },
    {
        "commit": "9ae3d8c46ac10273ca53c942410f768e27395230",
        "date": "2018-10-15 23:13:08 +0100",
        "subject": "Install nodejs from deb.nodesource.com.",
        "body": "The standard npm packages on Ubuntu 18.04 suddenly required libssl1.0 which broke the pgbackrest package builds. Installing nodejs from deb.nodesource.com seems to work fine with standard libssl.\n\nThis package is required by ScalityS3 which is used for local S3 testing."
    },
    {
        "commit": "98ff8ccc59fa1e344426f3084e0a37498e56ce12",
        "date": "2018-10-09 15:08:49 +0100",
        "subject": "Improve documentation in filter.h and filter.internal.h.",
        "body": "When the filter interface internals were split out into a new header file the documentation was not moved as it should have been.  Additionally some functions which should have been moved were left behind.\n\nMove the documentation and functions to filter.internal.h and add more documentation.  Filters are a tricky subject so the more documentation the better.\n\nAlso add documentation for the user-facing filter functions in filter.h."
    },
    {
        "commit": "68110d04b24dc633e5b5b6869924dd36a2307135",
        "date": "2018-10-07 17:50:10 +0100",
        "subject": "Add ioReadLine()/ioWriteLine() to IoRead/IoWrite objects.",
        "body": "Allow a single linefeed-terminated line to be read or written.  This is useful for various protocol implementations, including HTTP and pgBackRest's protocol.\n\nOn read the maximum line size is limited to buffer-size to prevent runaway memory usage in case a linefeed is not found.  This seems fine for HTTP but we may need to revisit this decision when implementing the pgBackRest protocol.  Another option would be to increase the minimum buffer size (currently 16KB)."
    },
    {
        "commit": "db8dce7adcf277a021ad8766ab91e86fad913eff",
        "date": "2018-10-02 17:54:43 +0100",
        "subject": "Disable flapping archive/get unit on CentOS 6.",
        "body": "This test has been flapping since 9b9396c7.  It seems to be some kind of timing issue since all integration tests pass and this unit passes on all other VMs.  It only happens on Travis and is not reproducible in any development environment that we have tried.\n\nFor now, disable the test since the constant flapping is causing major delays in testing and quite a bit of time has been spent trying to identify the root cause.  We are actively developing these tests and hope the issue will be identified during the course of normal development.\n\nA number of improvements were made to the tests while searching for this issue.  While none of them helped, it makes sense to keep the improvements."
    },
    {
        "commit": "ed5d7a53de7cd952825e824ae507e275c4648e18",
        "date": "2018-09-30 12:27:05 +0100",
        "subject": "Add .gitignore to C src directory.",
        "body": "Suggested by Stephen Frost."
    },
    {
        "commit": "3be9f2dee79c02e728e2339dd047d6990ec215c5",
        "date": "2018-09-30 11:45:37 +0100",
        "subject": "Avoid calling strlen() twice in bufNewZ()."
    },
    {
        "commit": "5404628148a3039f3933607c7f63cb4620f71761",
        "date": "2018-09-27 17:48:40 +0100",
        "subject": "Fix incorrect error message for duplicate options in configuration files.",
        "body": "Duplicating a non-multi-value option was not throwing the correct message when the option was a boolean.\n\nThe reason was that the option was being validated as a boolean before the multi-value check was being done.  The validation code assumed it was operating on a string but was instead operating on a string list causing an assertion to fail.\n\nSince it's not safe to do the multi-value check so late, move it up to the command-line and configuration file parse phases instead."
    },
    {
        "commit": "be2271f6d312e6497e98df2c792d2455afb461eb",
        "date": "2018-09-27 17:24:06 +0100",
        "subject": "Add cfgDefOptionMulti() to identify multi-value options.",
        "body": "Previously this was done in two separate places by checking if an option was type hash or list.\n\nBad enough that it was in two places, but an upcoming bug fix will add another instance so make it a function."
    },
    {
        "commit": "e66e68e324fb8381e0592a419b3aafdf70703b56",
        "date": "2018-09-27 09:20:47 +0100",
        "subject": "Add cryptoHmacOne() for HMAC support.",
        "body": "There doesn't seem to be any need to implement this as a filter since current use cases (S3 authentication) work on small datasets.\n\nSo, use the single function method provided by OpenSSL for simplicity."
    },
    {
        "commit": "6470f03fa28a72c9603d4d913ce58c7223b6cc0b",
        "date": "2018-09-26 22:36:42 +0100",
        "subject": "Comment fixes."
    },
    {
        "commit": "bcca625062b4ee8394f933218e890238a75e9419",
        "date": "2018-09-26 22:33:48 +0100",
        "subject": "Add bufHex()to Buffer object.",
        "body": "A general-purpose function for converting buffers to hex strings."
    },
    {
        "commit": "51484a008f1172b51c2296974de7bfcd37ab24b8",
        "date": "2018-09-26 18:46:52 +0100",
        "subject": "Add bufNewZ() to Buffer object.",
        "body": "This constructor creates a Buffer object directly from a zero-terminated string.  The old way was to create a String object first, then convert that to a Buffer using bufNewStr().\n\nUpdated in all places that used the old pattern."
    },
    {
        "commit": "d038b9a029f0c981e32a94b8b8632c356ffec7ac",
        "date": "2018-09-25 10:24:42 +0100",
        "subject": "Support configurable WAL segment size.",
        "body": "PostgreSQL 11 introduces configurable WAL segment sizes, from 1MB to 1GB.\n\nThere are two areas that needed to be updated to support this: building the archive-get queue and checking that WAL has been archived after a backup.  Both operations require the WAL segment size to properly build a list.\n\nChecking the archive after a backup is still implemented in Perl and has an active database connection, so just get the WAL segment size from the database.\n\nThe archive-get command does not have a connection to the database, so get the WAL segment size from pg_control instead.  This requires a deeper inspection of pg_control than has been done in the past, so it seemed best to copy the relevant data structures from each version of PostgreSQL and build a generic interface layer to address them.  While this approach is a bit verbose, it has the advantage of being relatively simple, and can easily be updated for new versions of PostgreSQL.\n\nSince the integration tests generate pg_control files for testing, teach Perl how to generate files with the correct offsets for both 32-bit and 64-bit architectures."
    },
    {
        "commit": "c0b0b4e541fc7cc5077e7f6b9fa646e7654ca9a4",
        "date": "2018-09-21 13:25:27 -0400",
        "subject": "PostgreSQL 11 Beta 4 support.",
        "body": "Catalog version changed for this release, so update it.\n\nAlso update and upload a new container with beta 4 installed."
    },
    {
        "commit": "d513a46e6d9d34a28dd4b99636d6ea11d3e0dff4",
        "date": "2018-09-19 18:26:12 -0400",
        "subject": "Update introduction to be pithy."
    },
    {
        "commit": "50266cc26c2c76fd155779e85c82dbed58cc2d84",
        "date": "2018-09-19 16:41:20 -0400",
        "subject": "Use command in authorized_hosts to improve SSH security.",
        "body": "Unsecured, passwordless SSH can be a scary thing. If an attacker gains access to one system they can easily hop to other systems.\n\nAdd documentation on how to use the command parameter in authorized_keys to limit ssh to running a single command, pgbackrest. There is more that could be done for security but this likely addresses most needs.\n\nAlso change references to \"trusted ssh\" to \"passwordless ssh\" since this seems more correct."
    },
    {
        "commit": "880fbb5e578c387e52f83c8eca1040b42f4e21a8",
        "date": "2018-09-19 11:12:45 -0400",
        "subject": "Add checksum delta for incremental backups.",
        "body": "Use checksums rather than timestamps to determine if files have changed.  This is useful in cases where the timestamps may not be trustworthy, e.g. when performing an incremental after failing over to a standby.\n\nIf checksum delta is enabled then checksums will be used for verification of resumed backups, even if they are full.  Resumes have always used checksums to verify the files in the repository, enabling delta performs checksums on the database files as well.\n\nNote that the user must manually enable this feature in cases were it would be useful or just keep in enabled all the time.  A future commit will address automatically enabling the feature in cases where it seems likely to be useful."
    },
    {
        "commit": "bf0691576a56df0d662488cee19d21e924a3cecb",
        "date": "2018-09-18 13:29:05 -0400",
        "subject": "Allow delta option to be specified in the pgBackRest configuration file.",
        "body": "This option was previously allowed on the command-line only for no particular reason that we could determine.\n\nBeing able to specify it in the config file seems like a good idea and won't change current usage."
    },
    {
        "commit": "b6b2c915b24fdcfb64e1fe6a0c8a796da50c9fe4",
        "date": "2018-09-18 11:39:48 -0400",
        "subject": "Allow hashSize() to run on remote storage.",
        "body": "Apparently we never needed to run this function remotely.\n\nIt will be needed by the backup checksum delta feature, so implement it now."
    },
    {
        "commit": "052e483057e4ee55d29c229c39b92c90a9cee0af",
        "date": "2018-09-18 10:18:39 -0400",
        "subject": "Restore bIgnoreMissing flag in backupFile() lost in storage refactor.",
        "body": "The test to make sure that some files (e.g. pg_control) do not get removed during the backup was lost during the storage refactor committed at de7fc37f.\n\nThis did not impact the integrity of the backups, but bring it back since it is a nice sanity check."
    },
    {
        "commit": "03003562d86f7fdbab21cad9f7a7ee56c3070f93",
        "date": "2018-09-17 11:45:41 -0400",
        "subject": "Merge all posix storage tests into a single unit.",
        "body": "As we add storage drivers it's important to keep the tests for each completely separate.  Rather than have three tests for each driver, standardize on having a single test unit for each driver."
    },
    {
        "commit": "e55d73304102145c46c32f25dbe103cd4c750d37",
        "date": "2018-09-17 11:38:10 -0400",
        "subject": "Add -ftree-coalesce-vars option to unit test compilation.",
        "body": "This is a workaround for inefficient handling of many setjmps in gcc >= 4.9.  Setjmp is used in all error handling, but in the unit tests each test macro contains an error handling block so they add up pretty quickly for large unit tests.\n\nEnabling -ftree-coalesce-vars in affected versions reduces build time and memory requirements by nearly an order of magnitude.  Even so, compiles are much slower than gcc <= 4.8.\n\nWe submitted a bug for this at: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=87316\nWhich was marked as a duplicate of: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63155"
    },
    {
        "commit": "b5f749b21cbf51e3ba9f3bc2129c337cb6ebec92",
        "date": "2018-09-16 18:41:30 -0400",
        "subject": "Add CIFS driver to storage helper for read-only repositories.",
        "body": "For read-only repositories the Posix and CIFS drivers behave exactly the same.  Since that's all we support in C right now it's valid to treat them as the same thing.  An assertion has been added to remind us to add the CIFS driver before allowing the repository to be writable.\n\nMostly we want to make sure that the C code does not blow up when the repository type is CIFS."
    },
    {
        "commit": "a6c346cb04d8977d37e52072488d89a7fb3a89b6",
        "date": "2018-09-16 17:26:04 -0400",
        "subject": "Clear test directory between test runs.",
        "body": "Previously it was the responsibility of the individual tests to clean up after themselves.  Now the test harness now does the cleanup automatically.\n\nThis means that some paths/files need to be recreated with each run but that doesn't happen very often.\n\nAn attempt has been made to remove all redundant cleanup code but it's hard to know if everything has been caught.  No issues will be caused by anything that was missed, but they will continue to chew up time in the tests."
    },
    {
        "commit": "4119ce208d1d6de2b096d0465721e93dcb981d3f",
        "date": "2018-09-16 15:58:46 -0400",
        "subject": "Move test expect log out of the regular test directory.",
        "body": "Storing the expect log (created by common/harnessLog) in the regular test directory was not ideal.  It showed up in tests and made it difficult to clear the test directory between each run.\n\nMove the expect log to a purpose-built directory one level up so it does not interfere with regular testing."
    },
    {
        "commit": "8852622fa241836b0a6c5c08d755f2c3d990427d",
        "date": "2018-09-16 15:53:19 -0400",
        "subject": "Fix missing test caused by a misplaced YAML tag."
    },
    {
        "commit": "c47fc28c8b9cba4fba60f206ec029773f60171af",
        "date": "2018-09-16 14:15:21 -0400",
        "subject": "Make comment blocks consistent across all tests."
    },
    {
        "commit": "84ab787b1a7f8ca42d9b2be72a730ace852667a1",
        "date": "2018-09-16 14:12:53 -0400",
        "subject": "Merge protocol storage helper into storage helper.",
        "body": "These are separated the same way in the Perl code where the remote storage driver is located in the Protocol module. However, in the C code the intention is to implement the remote storage driver as a regular driver in the storage layer rather than making a special case out of it.\n\nSo, merge the storage helpers. This also has the benefit of making the code a bit simpler.\n\nAlso separate storageSpool() and storageSpoolWrite() to make it clearer which operations require write access and to maintain consistency with the other storage helper functions."
    },
    {
        "commit": "3014b05dabaa66fbb3ccfba89c79cca49905a695",
        "date": "2018-09-16 13:41:49 -0400",
        "subject": "Fix buffer underrun in configuration test harness.",
        "body": "If the total bytes read from the expect log file was 0 then the last byte of whatever was in memory before harnessLogBuffer would be set to 0.\n\nOn 32-bit systems this expressed as the high order byte of a pointer being cleared and wackiness (in the form of segfaults) ensued."
    },
    {
        "commit": "0c02481d6e5cb7c85cd7caf770d06820137f27b4",
        "date": "2018-09-15 21:07:00 -0400",
        "subject": "Update all interfaces to use variable parameter constructors.",
        "body": "Fixed parameter constructors made adding new interface functions a burden, so we switched to using structs to define interfaces in the storage module at c49eaec7.\n\nWhile propagating this pattern to the IO interfaces it became obvious that the existing variable parameter function pattern (begun in the storage module) was more succinct and consistent with the existing code.\n\nSo, use variable parameter functions to define all interfaces. This assumes that the non-interface parameters will be fixed, which seems reasonable for low-level code."
    },
    {
        "commit": "f0ed89f21fe2ae6278e64395f4191519807e529b",
        "date": "2018-09-15 13:27:06 -0400",
        "subject": "Allow C or Perl coverage to run on more than one VM.",
        "body": "C or Perl coverage tests can now be run on any VM provided a recent enough version of Devel::Cover or lcov is available.\n\nFor now, leave u18 as the only VM to run coverage tests due to some issues with older versions of lcov."
    },
    {
        "commit": "31cdd9d20b114f5c71c585a6effc4e71fae0d9c2",
        "date": "2018-09-15 08:23:55 -0400",
        "subject": "Remove compiler warnings that are not valid for u16."
    },
    {
        "commit": "c49eaec776014806af194e7a2d9e88691f361f99",
        "date": "2018-09-14 16:08:33 -0400",
        "subject": "Full abstraction of storage driver interface.",
        "body": "The external storage interfaces (Storage, StorageFileRead, etc.) have been stable for a while, but internally they were calling the posix driver functions directly.\n\nCreate driver interfaces for storage, fileRead, and fileWrite and remove all references to the posix driver outside storage/driver/posix (with the exception of a direct call to pathRemove() in Perl LibC).\n\nPosix is still the only available driver so more adjustment may be needed, but this should represent the bulk of the changes."
    },
    {
        "commit": "aeb1fa3dfbf4a4b7384f8f2bc5a18a23e741396e",
        "date": "2018-09-13 19:12:40 -0400",
        "subject": "Don't perform valgrind when requested.",
        "body": "The --no-valgrind flag was not being honored.  It's not clear if this flag ever worked, but it does now."
    },
    {
        "commit": "fd14ceb3995fca731141f09f7c940819138c63a2",
        "date": "2018-09-13 18:58:22 -0400",
        "subject": "Rename posix driver files/functions for consistency.",
        "body": "The posix driver was developed over time and the naming is not very consistent.\n\nRename the files and functions to work well with other drivers and generally favor longer names since the driver functions are seldom (eventually never) used outside the driver itself."
    },
    {
        "commit": "ab1762663cdcc3564113c5524dc384991228c0a4",
        "date": "2018-09-13 17:53:48 -0400",
        "subject": "Don't use negations in objects below Storage.",
        "body": "The Storage object represents some some optional parameters as negated if the default is true.  This allows sensible defaults without having to specify most optional parameters.\n\nHowever, there's no need to propagate this down to functions that require all parameters to be passed -- it makes the code and logging more confusing.  Rename the parameters and update logic to remove negations."
    },
    {
        "commit": "1fb9fe7026f355f86c44fac375a370458c10fc99",
        "date": "2018-09-12 18:14:23 -0400",
        "subject": "Update comments missed in 5aa458ff."
    },
    {
        "commit": "5aa458ffaecc42cbf6ee37ee4f985d255e31443e",
        "date": "2018-09-11 18:32:56 -0400",
        "subject": "Simplify debug logging by allowing log functions to return String objects.",
        "body": "Previously, debug log functions had to handle NULLs and truncate output to the available buffer size.  This was verbose for both coding and testing.\n\nInstead, create a function/macro combination that allows log functions to return a simple String object.  The wrapper function takes care of the memory context, handles NULLs, and truncates the log string based on the available buffer size."
    },
    {
        "commit": "9b9396c7b7745cc4c765285e24ed131e7f72f343",
        "date": "2018-09-11 15:42:31 -0400",
        "subject": "Migrate local, unencrypted, non-S3 archive-get command to C.",
        "body": "The archive-get command will only be executed in C if the repository is local, unencrypted, and type posix or cifs.  Admittedly a limited use case, but this is just the first step in migrating the archive-get command entirely into C.\n\nThis is a direct migration from the Perl code (including messages) to integrate as seamlessly with the remaining Perl code as possible.  It should not be possible to determine if the C version is running unless debug-level logging is enabled."
    },
    {
        "commit": "787e7c295ff64b7f862693784fa901d8b046a3d4",
        "date": "2018-09-11 14:43:16 -0400",
        "subject": "Change locking around async process forking to be more test friendly.",
        "body": "The lock is now released before the fork and reacquired after the fork so the parent process no longer needs to worry about clearing the lock.\n\nThis is the same locking mechanism that will be used once archive-get-async is exec'd as a separate command, so introduce it now to simplify testing."
    },
    {
        "commit": "9e574a37dc4a5c03155a00673a944c2da0a51528",
        "date": "2018-09-11 12:30:48 -0400",
        "subject": "Make archive-get info messages consistent between C and Perl implementations.",
        "body": "The info messages were spread around and logged differently based on the execution path and in some cases logged nothing at all.\n\nTemporarily track the async server status with a flag so that info messages are not output in the async process.  The async process will be refactored as a separate command to be exec'd in a future commit."
    },
    {
        "commit": "6c1d48b0186f4df40787349d37b35d822e043289",
        "date": "2018-09-11 10:55:55 -0400",
        "subject": "Command-line help update missed in cabb3f857."
    },
    {
        "commit": "cabb3f8577d6de2a6fec7b6e78e68671fc39a65b",
        "date": "2018-09-10 13:33:39 -0400",
        "subject": "List allowable values for the buffer-size option in the configuration reference.",
        "body": "Contributed by Cynthia Shang.\nSuggested by Stéphane Schildknecht."
    },
    {
        "commit": "e351b8c67ca16f4210449c9d51916db1b3ad2416",
        "date": "2018-09-10 13:09:45 -0400",
        "subject": "Improve info command to display the stanza cipher type.",
        "body": "Contributed by Cynthia Shang.\nSuggested by Douglas J Hunley."
    },
    {
        "commit": "c688bc86276fcc43bf53747ebbf3259bb8d5a62b",
        "date": "2018-09-10 10:54:34 -0400",
        "subject": "Improve support for special characters in filenames.",
        "body": "% characters caused issues in backup/restore due to filenames being appended directly into a format string.\n\nReserved XML characters (<>&') caused issues in the S3 driver due to improper escaping.\n\nAdd a file with all common special characters to regression testing."
    },
    {
        "commit": "80ef6fce7529c5f9b8309ac0b8451ddce2a08e2b",
        "date": "2018-09-10 10:47:00 -0400",
        "subject": "Fix missing URI encoding in S3 driver.",
        "body": "File names with uncommon characters (e.g. @) caused authentication failures due to S3 encoding them correctly while the S3 driver did not."
    },
    {
        "commit": "f7fc8422f780d18d045f42124dc40aa0920fe416",
        "date": "2018-09-07 16:50:01 -0700",
        "subject": "Make Valgrind return an error even when a non-fatal issue is detected.",
        "body": "By default Valgrind does not exit with an error code when a non-fatal error is detected, e.g. unfreed memory.  Use the --error-exitcode option to enabled this behavior.\n\nUpdate some minor issues discovered in the tests as a result.  Luckily, no issues were missed in the core code."
    },
    {
        "commit": "faaa9a91fda78f8e38d0a479675f08a5b17a7302",
        "date": "2018-09-07 08:03:56 -0700",
        "subject": "Fix typo in unit test error messages, EXECTED => EXPECTED."
    },
    {
        "commit": "6e9b6fdca919b9f6fe2bfdb88447ee1f4f7abea7",
        "date": "2018-09-07 08:03:05 -0700",
        "subject": "Migrate control functions to detect stop files to C from Perl.",
        "body": "Basic functions to detect the presence of stanza or all stop files and error when they are present.\n\nThe functionality to detect stop files without error was not migrated. This functionality is only used by stanza-delete and will be migrated with that command."
    },
    {
        "commit": "5bdaa35fa5fea30bf7cdf10a5077cb3b661aa3db",
        "date": "2018-09-07 08:00:18 -0700",
        "subject": "Migrate walIsPartial(), walIsSegment(), and walSegmentFind() from Perl to C.",
        "body": "Also refactor regular expression defines to make them more reusable."
    },
    {
        "commit": "96600760930d1713645ffab211d98d2314818432",
        "date": "2018-09-07 07:58:08 -0700",
        "subject": "Add helper for repository storage.",
        "body": "Implement rules for generating paths within the archive part of the repository. Add a helper function, storageRepo(), to create the repository storage based on configuration settings.\n\nThe repository storage helper is located in the protocol module because it will support remote file systems in the future, just as the Perl version does.\n\nAlso, improve the existing helper functions a bit using string functions that were not available when they were written."
    },
    {
        "commit": "960ad73298fa9c3b9ea60b24428a10ede9a58828",
        "date": "2018-09-06 10:12:14 -0700",
        "subject": "Info objects now parse JSON and use specified storage.",
        "body": "Use JSON code now that it is available and remove temporary hacks used to get things working initially.\n\nUse passed storage objects rather than using storageLocal().  All storage objects in C are still local but this won't always be the case.\n\nAlso, move Postgres version conversion functions to postgres/info.c since they have no dependency on the info objects and will likely be useful elsewhere."
    },
    {
        "commit": "de1b74da0cf9c4f182e3a4cde52d0b5163111a44",
        "date": "2018-09-06 09:35:34 -0700",
        "subject": "Move encryption in mock/archive tests to remote tests.",
        "body": "The new archive-get C code can't run (yet) when encryption is enabled.  Therefore move the encryption tests so we can test the new C code.  We'll move it back when encryption is enabled in C.\n\nAlso, push one WAL segment with compression to test decompression in the C code."
    },
    {
        "commit": "6361a061812b20efeb89db110ebd592a0d52404f",
        "date": "2018-09-04 21:46:41 -0400",
        "subject": "Fix incorrectly reported error return in info logging.",
        "body": "A return code of 1 from the archive-get was being logged as an error message at info level but otherwise worked correctly.\n\nAlso improve info messages when an archive segment is or is not found."
    },
    {
        "commit": "800afeef70464da57af023614b1dfeecce5e112c",
        "date": "2018-09-04 17:47:23 -0400",
        "subject": "Posix file functions now differentiate between open and missing errors.",
        "body": "The Perl functions do so and the integration tests rely on checking for these errors.  This has been exposed as more functionality is moved into C.\n\nPassing the errors types is now a bit complicated so instead use a flag to determine which errors to throw."
    },
    {
        "commit": "375ff9f9d283842da3620f22c9c5bdb61249ae9e",
        "date": "2018-08-31 16:06:40 -0400",
        "subject": "Ignore all files in a linked tablespace directory except the subdirectory for the current version of PostgreSQL.",
        "body": "Previously an error would be generated if other files were present and not owned by the PostgreSQL user.  This hasn't been a big deal in practice but it could cause issues.\n\nAlso add tests to make sure the same logic applies with links to files, i.e. all other files in the directory should be ignored.  This was actually working correctly, but there were no tests for it before."
    },
    {
        "commit": "41746b53cd91c0d7203d855f9186c685ea59af47",
        "date": "2018-08-31 14:24:36 -0400",
        "subject": "Begin v2.06 development."
    },
    {
        "commit": "bc7462d86d3529712cf7c196a04f7d6f8dd8ee34",
        "date": "2018-08-31 13:19:43 -0400",
        "subject": "v2.05: Environment Variable Options and Exclude Temporary/Unlogged Relations"
    },
    {
        "commit": "d41570c37a2820380fa1708f31ed21c09e4065f8",
        "date": "2018-08-31 11:31:13 -0400",
        "subject": "Improve log file names for remote processes started by locals.",
        "body": "The log-subprocess feature added in 22765670 failed to take into account the naming for remote processes spawned by local processes.  Not only was the local command used for the naming of log files but the process id was not pass through.  This meant every remote log was named \"[stanza]-local-remote-000\" which is confusing and meant multiple processes were writing to the same log.\n\nInstead, pass the real command and process id to the remote.  This required a minor change in locking to ignore locks if process id is greater than 0 since remotes started by locals never lock."
    },
    {
        "commit": "c2d0a21d63a3c76bf513ac79c622e694ca9dfe1d",
        "date": "2018-08-30 18:44:40 -0400",
        "subject": "Allow secrets to be passed via environment variables.",
        "body": "When environment variables were added in d0b9f986 they were classified as cfgSourceParam, but one of the restrictions on this type is that they can't pass secrets because they might be exposed in the process list.\n\nThe solution is to reclassify environment variables as cfgSourceConfig.  This allows them to handle secrets because they will not pass values to subprocesses as parameters.  Instead, each subprocess is expected to check the environment directly during configuration parsing.\n\nIn passing, move the error about secrets being passed on the command-line up to command-line parsing and make the error more generic with respect to the configuration file now that multiple configuration files are allowed."
    },
    {
        "commit": "70514061fdca620ba99dd0e36bb99dccbca43e1d",
        "date": "2018-08-30 16:27:36 -0400",
        "subject": "Fix issue where relative links in $PGDATA could be stored in the backup with the wrong path.",
        "body": "Relative link paths were being combined with the paths of previous links (relative or absolute) due to the $strPath variable being modified in the current iteration rather than simply being passed to the next level of recursion.\n\nThis issue did not affect absolute links and relative tablespace links were caught by other checks, though the error was confusing."
    },
    {
        "commit": "1631f8b3cebbe761f5eb71c9b7203664f2ae5005",
        "date": "2018-08-29 16:45:58 -0500",
        "subject": "Embedded documentation update missed in c6384904."
    },
    {
        "commit": "c6384904512363baaa8c6dbec42799c0ddb1d4db",
        "date": "2018-08-28 16:49:29 -0400",
        "subject": "Documentation updates for exclude feature based on review.",
        "body": "Reviewed by Cynthia Shang."
    },
    {
        "commit": "14cde54b37bec6ac831a2ddc870531bd61b034dd",
        "date": "2018-08-28 16:27:10 -0400",
        "subject": "Limit manifest build recursion (i.e. links followed) to sixteen levels to detect link loops."
    },
    {
        "commit": "a6cecf7d5ef722bc962a1e6a3808dce3424ca710",
        "date": "2018-08-28 16:22:30 -0400",
        "subject": "Prevent manifest from being built more than once."
    },
    {
        "commit": "4498f726a59132421f8a1530783f8bb6cc8905c3",
        "date": "2018-08-28 16:04:53 -0400",
        "subject": "Improve asynchronous archive-get/archive-push performance by directly checking status files.",
        "body": "Prior to this commit, an expression was used to search the spool directory for ok/error files for a specific WAL segment. This involved setting up a regular expression and using opendir/readdir.\n\nInstead, directly probe for the status files, checking directly if a '.ok' or '.error' file exists, avoiding the regular expression and eliminating the directory scan.\n\nOnly the two files now probed for could have ever matched the regular expression which had been provided and it's unlikely that many more additional files will be added, so this is a good improvement, and optimization, with little downside."
    },
    {
        "commit": "bef58a79743d3273d14de221e26291a5d90409b3",
        "date": "2018-08-27 15:51:05 -0400",
        "subject": "Allow arbitrary directories and/or files to be excluded from a backup.",
        "body": "Misuse of this feature can lead to inconsistent backups so read the --exclude documentation carefully before using."
    },
    {
        "commit": "77dca5b96817d0e0d49e34fb7d8e0944e60f71a8",
        "date": "2018-08-24 19:31:45 -0400",
        "subject": "Allow command/option constants to autonumber in both C and Perl to reduce churn when a new command/option is added."
    },
    {
        "commit": "4c3cf435c036037ff32b7a76e53753e765358173",
        "date": "2018-08-24 17:08:00 -0400",
        "subject": "Add cvtZToUInt() to convert string to unsigned int."
    },
    {
        "commit": "eb30d88b6a6048353b269d590c43fad9e6233a25",
        "date": "2018-08-24 16:50:33 -0400",
        "subject": "Allow zero-size files in backup manifest to reference a prior manifest regardless of timestamp delta.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "0ed37ab9e73fb59a5558b39bb292e0eb4f331ec9",
        "date": "2018-08-24 12:13:10 -0400",
        "subject": "Update Archive::Info->archiveIdList() to return a valid error code instead of unknown."
    },
    {
        "commit": "22765670270067c5102a2ab9b3277d4cbc86c6af",
        "date": "2018-08-22 20:05:49 -0400",
        "subject": "Add log-subprocess option to allow file logging for local and remote subprocesses."
    },
    {
        "commit": "512da125ad7314d2d58931186316423f039c8c35",
        "date": "2018-08-22 19:03:13 -0400",
        "subject": "Improve error reporting for TEST_ASSIGN() and TEST_RESULT_VOID() macros."
    },
    {
        "commit": "ad989068d283a99a8aaf20be2eb0337a47bb8f73",
        "date": "2018-08-22 16:45:25 -0400",
        "subject": "Fix issue when a boolean option (e.g. delta) was specified more than once.",
        "body": "Reported by Yogesh Sharma."
    },
    {
        "commit": "8a8738308c08ec9ac7a12b08f2ab7358dc4aa3af",
        "date": "2018-08-22 14:48:37 -0400",
        "subject": "Enable -Wvla."
    },
    {
        "commit": "de5614db6b027900ef48f4ade456643cfecad79c",
        "date": "2018-08-15 14:05:39 -0400",
        "subject": "PostgreSQL 11 Beta 3 support."
    },
    {
        "commit": "d0b9f986a0eb30c550b2dc9031ad10dda941a26c",
        "date": "2018-08-15 10:52:53 -0400",
        "subject": "Allow any option to be set in an environment variable.",
        "body": "This includes options that previously could only be specified on the command line, e.g. stanza."
    },
    {
        "commit": "4a822d3032389543d2bb53018cff9062155cd3f9",
        "date": "2018-08-15 10:32:18 -0400",
        "subject": "Correct OptionInvalidError to OptionInvalidValueError in boolean option parsing."
    },
    {
        "commit": "238e5dae3c12ff37b3873e5db5a9c1cff3bed64f",
        "date": "2018-08-14 17:17:14 -0400",
        "subject": "Allow resolve array from cd5df357 to autosize to detect short arrays in testing."
    },
    {
        "commit": "cb4b715533c1a566add50cb3e245cd2a65fba5fa",
        "date": "2018-08-14 16:49:38 -0400",
        "subject": "Add strReplaceChr() to String object."
    },
    {
        "commit": "4a176681c3d7767c1f5cb98d1d5e46b7adb3f76b",
        "date": "2018-08-14 16:18:17 -0400",
        "subject": "Add cvtCharToZ() and macro for debugging char params."
    },
    {
        "commit": "9e3273fdf91e31d6f13ecd12658fa624dfbf4f3d",
        "date": "2018-08-14 16:08:58 -0400",
        "subject": "Define cipher magic size with sizeof() rather than using a constant."
    },
    {
        "commit": "6643afe9a86bf617d2e90687130248c4a6ee6c14",
        "date": "2018-08-14 14:56:59 -0400",
        "subject": "Add gzip compression/decompression filters for C."
    },
    {
        "commit": "e3ff6b209d9cf50f88f51a70ac7247949b63ac55",
        "date": "2018-08-14 14:21:53 -0400",
        "subject": "Filters can now produce output that differs from input.",
        "body": "This allows filters such as compression, encryption, etc. to be implemented."
    },
    {
        "commit": "a45d1b4a60545940a6a5eac37cf16473b97d2c41",
        "date": "2018-08-14 13:38:11 -0400",
        "subject": "Update to command-line docs missed in 40924e8f."
    },
    {
        "commit": "40924e8f5c84cfdac7eadde4b6cca092f3900430",
        "date": "2018-08-13 07:47:26 -0400",
        "subject": "Fix invalid log level in log-path option reference.",
        "body": "Reported by Camilo Aguilar."
    },
    {
        "commit": "343424009795014bce2474f46762d76cc9ec4ef7",
        "date": "2018-08-12 19:24:21 -0400",
        "subject": "Remove incompletely implemented online option from the check command.",
        "body": "Offline operation runs counter to the purpose of this command, which is to check if archiving and backups are working correctly."
    },
    {
        "commit": "cb6821e8533a9ff3c4e3727746bd1d259255d86a",
        "date": "2018-08-12 18:19:34 -0400",
        "subject": "Stop trying to arrange contributors in release.xml by last/first name.",
        "body": "Contributor names have always been presented in the release notes exactly as given, but we tried to assign internal IDs based on last/first name which can be hard to determine and ultimately doesn't make sense.\n\nInspired by Christophe Pettus' PostgresOpen 2017 talk, \"Human Beings Do Not Have a Primary Key\"."
    },
    {
        "commit": "cd5df3570b0fcd5011e2339b48a3359a1f2c54da",
        "date": "2018-08-11 12:55:33 -0400",
        "subject": "Validate configuration options in a single pass.",
        "body": "By pre-calculating and storing the option dependencies in parse.auto.c validation can be completed in a single pass, which is both simpler and faster."
    },
    {
        "commit": "f06bf9e8329fcb083271fab8d7aeccad1122a5b1",
        "date": "2018-08-11 09:47:07 -0400",
        "subject": "Improve error message when a command is missing the stanza option.",
        "body": "Suggested by Sarah Conway."
    },
    {
        "commit": "8ab2e72960de60557331fe7087015519a516f318",
        "date": "2018-08-09 08:57:21 -0400",
        "subject": "Migrate minimum set of code for reading archive.info files from Perl to C.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "7993f1a96620ac6c00ba961036ba5ff6abc58f22",
        "date": "2018-08-09 08:06:23 -0400",
        "subject": "Add basic C JSON parser."
    },
    {
        "commit": "31167d8f987cf171bd655c5ccb1bebebac9d7997",
        "date": "2018-08-05 08:35:18 -0400",
        "subject": "Enable -Wduplicated-branches, and -Wduplicated-cond."
    },
    {
        "commit": "14f21a8f6c0f1bec4c4af82af51235ddf8617beb",
        "date": "2018-08-04 19:37:28 -0400",
        "subject": "Enable -Wpointer-arith."
    },
    {
        "commit": "429a356e3323acf99f3d73a527baf7aaa55a3b5b",
        "date": "2018-08-03 19:19:14 -0400",
        "subject": "Enable -Wstrict-prototypes and update all void functions to conform."
    },
    {
        "commit": "bec4c176dc478d5eff855c18ba05d4a8301f0b22",
        "date": "2018-07-30 18:53:34 -0400",
        "subject": "Exclude temporary and unlogged relation (table/index) files from backup.",
        "body": "Implemented using the same logic as the patches adding this feature to PostgreSQL, 8694cc96 and 920a5e50. Temporary relation exclusion is enabled in PostgreSQL ≥ 9.0. Unlogged relation exclusion is enabled in PostgreSQL ≥ 9.1, where the feature was introduced."
    },
    {
        "commit": "ac16cb7ff16b58c9de4ba9c27d5322b69639594e",
        "date": "2018-07-28 09:39:52 -0400",
        "subject": "Add cvtBoolToConstZ() to simplify conversion of boolean to string."
    },
    {
        "commit": "7a00bbebfafc94f17b7897b2074cfd079e6882b6",
        "date": "2018-07-28 09:04:06 -0400",
        "subject": "Do nothing in memContextMove() when the context is already in the specified parent."
    },
    {
        "commit": "cb975a533095f863232843cac1b3831f24a8fe3c",
        "date": "2018-07-28 08:43:58 -0400",
        "subject": "Remove redundant lines from embedded Perl by combining blank lines."
    },
    {
        "commit": "666537cbdee986ebdc323f6c9d412edf2a5c7145",
        "date": "2018-07-28 08:13:30 -0400",
        "subject": "Update code count for new file types and exclusions."
    },
    {
        "commit": "01aea0c067c2e667c47346620c563218f4c0f568",
        "date": "2018-07-24 21:08:27 -0400",
        "subject": "Implement filters that do not modify the buffer.",
        "body": "Update cryptoHash to use the new interface."
    },
    {
        "commit": "8e1017c1622bed5ebddc910545cbcaf288dd2f2f",
        "date": "2018-07-23 07:59:24 -0400",
        "subject": "Move most host setup to containers defined in the documentation.",
        "body": "This includes PostgreSQL installation which had previously been included in the documentation. This way produces faster builds and there is no need for us to document PostgreSQL installation."
    },
    {
        "commit": "27238310322096a52f1babf478cd4fffb344d949",
        "date": "2018-07-23 07:49:15 -0400",
        "subject": "Allow containers to be defined in a document.",
        "body": "The defined containers are built before the document build begins which allows them to be reused."
    },
    {
        "commit": "ae72772e5b366f02f8a5026e3109cfd43aacb8f4",
        "date": "2018-07-23 07:17:24 -0400",
        "subject": "Fix typo in 18626306."
    },
    {
        "commit": "1862630629bdf435a76575a31ed722cc351def11",
        "date": "2018-07-21 17:02:42 -0400",
        "subject": "Use pre-built images from Docker Hub when the container definition has not changed.",
        "body": "Downloading an image is quite a bit faster than building a new image from scratch and saves minutes per test run in CI."
    },
    {
        "commit": "8568622a6f5941cbe9e0ef40ea9f605b62675838",
        "date": "2018-07-20 19:03:46 -0400",
        "subject": "Add --log-level-test option.",
        "body": "This allows setting the test log level independently from the general test harness setting, but current only works for the C tests. It is useful for seeing log output from functions on the console while a test is running."
    },
    {
        "commit": "58e9f1e50cfbc2df22af17293fe8a298cac5513a",
        "date": "2018-07-20 18:51:42 -0400",
        "subject": "Refactor the common/log tests to not depend on common/harnessLog.",
        "body": "common/harnessLog was not ideally suited for general testing and made all the tests quite awkward. Instead, move all code used to test the common/log module into the logTest module and repurpose common/harnessLog to do log expect testing for all other tests in a cleaner way.\n\nAdd a few exceptions for config testing since the log levels are reset by default in config/parse."
    },
    {
        "commit": "1359e2908c777ef7b8cb128f7d7ede3b53bc2018",
        "date": "2018-07-20 08:11:34 -0400",
        "subject": "Fix issue where errors raised in C were not logged when called from Perl.",
        "body": "pgBackRest properly terminated with the correct error code but lacked an error message to aid in debugging."
    },
    {
        "commit": "d3cfeebdf91a559a0af80bba5fc424f4d091b944",
        "date": "2018-07-20 08:03:44 -0400",
        "subject": "Rename error-handling variables in Main.pm to conform to standard."
    },
    {
        "commit": "fa53e2eddb95822553b6a860ef3e6d09fdb31f4a",
        "date": "2018-07-20 07:15:28 -0400",
        "subject": "Show exact log level required for stack trace param output instead of just \"debug\"."
    },
    {
        "commit": "0ac176b722fe93301ec9f4d706698f0f01125666",
        "date": "2018-07-19 16:04:20 -0400",
        "subject": "Abstract IO layer out of the storage layer.",
        "body": "This allows the routines to be used for IO objects that do not have a storage representation.\n\nImplement buffer read and write IO objects."
    },
    {
        "commit": "5dc8a2ec08ee7569063915c7a1b3399ac1f2d16c",
        "date": "2018-07-17 19:01:54 -0400",
        "subject": "storageFileRead() accepts a buffer for output rather than creating one.",
        "body": "This is more efficient overall and allows the caller to specify how many bytes will be read on each call. Reads are appended if the buffer already contains data but the buffer size will never increase.\n\nAllow Buffer object \"used size\" to be different than \"allocated size\". Add functions to manage used size and remaining size and update automatically when possible."
    },
    {
        "commit": "0acf70541601d99795f6da06ebca030eff69cd46",
        "date": "2018-07-16 17:25:15 -0400",
        "subject": "Require PostgreSQL catalog version when instantiating a Manifest object (and not loading it from disk).",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "4e38cbaea9fdfbc8618971c5148ffd0a7e7ef4ab",
        "date": "2018-07-12 15:28:46 -0400",
        "subject": "Add iniSectionList() to Ini object and remove dead code.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "0e6b927a172368a77473571d8c27265253894c0e",
        "date": "2018-07-12 15:23:18 -0400",
        "subject": "Add uint64 variant type and supporting conversion functions.",
        "body": "Contributed by Cynthia Shang.\nReviewed by Stephen Frost."
    },
    {
        "commit": "0e331b12ba0cf377e4292a89ae84de7bb74281d6",
        "date": "2018-07-12 15:15:32 -0400",
        "subject": "Improve performance of string to int conversion.",
        "body": "Use strtoll() instead of sprintf() for conversion. Also use available integer min/max constants rather than hard-coded values.\n\nReviewed by Stephen Frost.\nSuggested by Stephen Frost."
    },
    {
        "commit": "cf889790e60972adcacc6e21fa3853378676889a",
        "date": "2018-07-10 15:39:03 -0400",
        "subject": "Error if LibC build is performed outside the test environment.",
        "body": "LibC is no longer required for production builds."
    },
    {
        "commit": "b1bc53657d9e683f30bdfcce190da286a383328f",
        "date": "2018-07-09 08:15:16 -0400",
        "subject": "Begin v2.05 development."
    },
    {
        "commit": "a8143ec1253f3d9187c053def0b8c515d4f13fd5",
        "date": "2018-07-05 20:16:41 -0400",
        "subject": "v2.04: Critical Bug Fix for Backup Resume"
    },
    {
        "commit": "6f6dad6dd5fb0f2ba5824b1812e71abf047704a4",
        "date": "2018-07-05 16:49:46 -0400",
        "subject": "Remove call to lscpu which can vary widely by build host."
    },
    {
        "commit": "22adb395db804e03646fc53d84b6e7935c38c46e",
        "date": "2018-07-05 15:40:50 -0400",
        "subject": "Add zero-length file to mock/all test."
    },
    {
        "commit": "db17973cd0a8a5692e408621703fd83fbce40166",
        "date": "2018-07-03 14:01:57 -0400",
        "subject": "Fix critical bug in resume that resulted in inconsistent backups.",
        "body": "A regression in v0.82 removed the timestamp comparison when deciding which files from the aborted backup to keep on resume. All resumed backups should be considered inconsistent. A resumed backup can be identified by checking the log for the message \"aborted backup of same type exists, will be cleaned to remove invalid files and resumed\"."
    },
    {
        "commit": "3d07e01fe920bef0d4848ddd55560dc13e38ef85",
        "date": "2018-07-01 20:02:37 -0400",
        "subject": "Make ls ordering deterministic in mock/all test."
    },
    {
        "commit": "1bd98b61df7aeaec25b6d6b5baa71f8a458784ee",
        "date": "2018-07-01 08:17:27 -0400",
        "subject": "Fix non-compliant ISO-8601 timestamp format in S3 authorization headers.",
        "body": "AWS and some gateways were tolerant of space rather than zero-padded hours while others were not.\n\nFixed by Andrew Schwartz."
    },
    {
        "commit": "7e65ddad34db74a14e54aab125f0e62596268f6e",
        "date": "2018-06-30 14:55:25 -0400",
        "subject": "PostgreSQL 11 Beta 2 support."
    },
    {
        "commit": "7b0e65d48823e94a7a17ae377e54a898bb07d7fb",
        "date": "2018-06-26 17:27:22 -0400",
        "subject": "Improve the HTTP client to set content-length to 0 when not specified by the server.",
        "body": "S3 (and gateways) always set content-length or transfer-encoding but HTTP 1.1 does not require it and proxies (e.g. HAProxy) may not include either."
    },
    {
        "commit": "e8c68b9c6657d7fabfd70cbd8ad3778e123bcb41",
        "date": "2018-06-26 16:56:05 -0400",
        "subject": "Update parameters for VBoxService start."
    },
    {
        "commit": "ead70e16bbead338b7ba14b4a03014187bb80c23",
        "date": "2018-06-23 13:09:56 -0400",
        "subject": "Add sample S3 policy to restrict bucket privileges.",
        "body": "Suggested by Douglas J Hunley, Jason O'Donnell."
    },
    {
        "commit": "aa41e00c9cdbb966a6cda088a21fb16c443163d4",
        "date": "2018-06-21 11:39:37 -0400",
        "subject": "Set search_path = 'pg_catalog' on PostgreSQL connections.",
        "body": "Suggested by Stephen Frost."
    },
    {
        "commit": "7fee739710b052f41ff881b513ae376acb1e5c2a",
        "date": "2018-06-20 18:26:53 -0400",
        "subject": "Remove Debian package patch since it has been committed upstream."
    },
    {
        "commit": "6084e9be04dd958f8ab8906c1af8e3ed1fca4994",
        "date": "2018-06-16 13:07:01 -0400",
        "subject": "Fix default location of pgbackrest.conf in option reference."
    },
    {
        "commit": "1a0d56860059e7f9998e1faf5d384017ca1511ee",
        "date": "2018-06-14 19:05:35 -0400",
        "subject": "Preliminary documentation for PostgreSQL 11 unprivileged user backup."
    },
    {
        "commit": "3793ae1e4f0a4deeb156fa3d0ace4ddab0b85804",
        "date": "2018-06-14 17:59:10 -0400",
        "subject": "Convert the not very portable uint type to unsigned int.",
        "body": "Suggested by Devrim Gündüz."
    },
    {
        "commit": "4e7692b74d229538fdde123a6020258a9ff5f8f3",
        "date": "2018-06-14 17:44:44 -0400",
        "subject": "Fix error in selective restore when only one user database exists in the cluster.",
        "body": "Fixed by Cynthia Shang.\nReported by Nj Baliyan."
    },
    {
        "commit": "fbd1da05230bb4790f143443dd515453fada0bba",
        "date": "2018-06-13 13:43:17 -0400",
        "subject": "Create a new section to describe building pgBackRest and build on a separate host."
    },
    {
        "commit": "d55e609959547750116be2954f956e7e918013b5",
        "date": "2018-06-12 13:43:15 -0400",
        "subject": "Use a prebuilt s3 server container for documentation and tests."
    },
    {
        "commit": "350b30fa4977e23b205e05b787d707eaceb5a67f",
        "date": "2018-06-11 14:52:26 -0400",
        "subject": "Move cryptographic hash functions to C using OpenSSL."
    },
    {
        "commit": "064ec757e9da187ff4a6dad481dc32775454dee3",
        "date": "2018-06-11 10:53:16 -0400",
        "subject": "Rename cipher module to the more general crypto."
    },
    {
        "commit": "835396751f220be3f8e46f344d4eadfd7b7305b3",
        "date": "2018-06-10 14:13:56 -0400",
        "subject": "Document generator improvements.",
        "body": "* Build containers from scratch for more accurate testing.\n* Allow environment load to be skipped.\n* Allow bash wrapping to be skipped.\n* Allow forcing a command to run as a user without sudo."
    },
    {
        "commit": "5c0099781d170409a0121355fb8b4917ca06ac0a",
        "date": "2018-06-06 22:19:01 -0400",
        "subject": "Update Debian package to add debug symbols to pgBackRest executable."
    },
    {
        "commit": "a385cb520b02c8e216bde78de51e57c216534778",
        "date": "2018-06-06 15:52:28 -0400",
        "subject": "Update primary test environment (Vagrant and Docker) to Ubuntu 18.04."
    },
    {
        "commit": "d309a85b51d732cb983ea781b69a9a1d2d4a1831",
        "date": "2018-06-05 08:59:17 -0400",
        "subject": "PostgreSQL 11 Beta 1 support."
    },
    {
        "commit": "e57840d739e12aec86fb4772044e0d722f1d9dd6",
        "date": "2018-05-25 13:42:09 -0400",
        "subject": "Document generator improvements.",
        "body": "* Allow parameters to be passed when a container is created.\n* Allow /etc/hosts update to be skipped (for containers without bash)."
    },
    {
        "commit": "40093f160cf891c9bb522f4da1f0414aeacbc3e5",
        "date": "2018-05-24 14:01:24 -0400",
        "subject": "Improve efficiency of C library builds now that they are used only for testing."
    },
    {
        "commit": "915b09635a5300f1cb45506c5237c3b883b5a85a",
        "date": "2018-05-24 11:00:47 -0400",
        "subject": "Remove RHEL package patch since it has been committed upstream."
    },
    {
        "commit": "8eb9921c7ca3d3aaacf1894756be02cbe7d17e18",
        "date": "2018-05-23 14:57:08 -0400",
        "subject": "Auto-generate Makefile with dependencies."
    },
    {
        "commit": "2f6017511fda3c6aeb67c3daafcc6c1dc35b2dd4",
        "date": "2018-05-23 09:45:08 -0400",
        "subject": "Split log levels into separate header file.",
        "body": "Many modules that use debug.h do not need to do logging so this reduces dependencies for those modules."
    },
    {
        "commit": "dfa92b359deddb37b10db5e1bac47750d8d1011c",
        "date": "2018-05-23 09:10:14 -0400",
        "subject": "Begin v2.04 development."
    },
    {
        "commit": "f7123c1bbf239814b33ddc97e53b472cf0e69d16",
        "date": "2018-05-22 19:53:25 -0400",
        "subject": "v2.03: Single Executable to Deploy"
    },
    {
        "commit": "4c7408ea52af7f8faec5244c65a55440643616eb",
        "date": "2018-05-22 12:53:08 -0400",
        "subject": "Embed exported C functions and Perl modules directly into the pgBackRest executable."
    },
    {
        "commit": "ada5c5c0d96e63f9f13009b6b0818457b49c6591",
        "date": "2018-05-21 10:46:45 -0400",
        "subject": "Fix archive write lock being taken for the synchronous archive-get command.",
        "body": "Reported by Uspen."
    },
    {
        "commit": "e69d5fbf624bbab45dcc820798284244fecd18c3",
        "date": "2018-05-21 08:06:31 -0400",
        "subject": "Fix potential buffer overrun in error message handling.",
        "body": "Reported by Lætitia."
    },
    {
        "commit": "72a9684d4e9dc15f7252b259dafb35a310fe2cd6",
        "date": "2018-05-18 12:03:39 -0400",
        "subject": "Print total runtime in milliseconds at command end."
    },
    {
        "commit": "52bc07323407668f49282d011b710f85fc9b11b6",
        "date": "2018-05-18 11:57:32 -0400",
        "subject": "Add stack trace macros to all functions.",
        "body": "Low-level functions only include stack trace in test builds while higher-level functions ship with stack trace built-in. Stack traces include all parameters passed to the function but production builds only create the parameter list when the log level is set high enough, i.e. debug or trace depending on the function."
    },
    {
        "commit": "abb9651f4c58446bbcf3f2013d075157a20beed5",
        "date": "2018-05-18 06:45:14 -0400",
        "subject": "Test harness improvements.",
        "body": "* Allow more than one test to provide coverage for the same module.\n* Add option to disable valgrind.\n* Add option to disabled coverage.\n* Add option to disable debug build.\n* Add option to disable compiler optimization.\n* Add --dev-test mode."
    },
    {
        "commit": "bce3d0fe1c96c0204fffd38145e4ddd56362a837",
        "date": "2018-05-17 17:09:06 -0400",
        "subject": "Build libc using links rather than referencing the C files in src directly.",
        "body": "The C library builds with different options which should not be reused for the C binary or vice versa."
    },
    {
        "commit": "91be372e6ac1601249df05e334ee93ba5540633c",
        "date": "2018-05-11 11:24:38 -0400",
        "subject": "Set log-timestamp=n for integration tests.",
        "body": "This means less filtering of logs needs to be done and new timestamps can be added without adding new filters."
    },
    {
        "commit": "a1be8e16cdfd364591c3a7104b1cc30084b13a08",
        "date": "2018-05-11 10:39:36 -0400",
        "subject": "Update SSL error message test on CentOS 7."
    },
    {
        "commit": "4b4af1cbfc0859a3db2981229e864853a38722bb",
        "date": "2018-05-09 11:14:35 -0400",
        "subject": "Use time_t instead of __time_t for better portability.",
        "body": "Suggested by Nick Floersch."
    },
    {
        "commit": "a9069f3fd3236d020c589265117817d3fddc6a5d",
        "date": "2018-05-09 10:50:05 -0400",
        "subject": "Begin v2.03 development."
    },
    {
        "commit": "ee8aafb3cadd77682c97bcc74adb457e0723ebee",
        "date": "2018-05-06 19:53:42 -0400",
        "subject": "v2.02: Parallel Asynchronous Archive Get and Configuration Includes"
    },
    {
        "commit": "4d6a51ac47e168811531cb4d388f0dde2b89cbcd",
        "date": "2018-05-06 08:56:42 -0400",
        "subject": "Add HARNESS_FORK for tests that require fork().",
        "body": "A standard pattern for tests makes fork() easier to use and should help prevent some common mistakes."
    },
    {
        "commit": "790f7c73128a4b3f0f98600aa7475d88f774fd1b",
        "date": "2018-05-05 11:50:11 -0400",
        "subject": "Enforce full branch coverage in C code."
    },
    {
        "commit": "0a860e0b6049bd6922a1583ede6748b46cfb9d23",
        "date": "2018-05-05 09:38:09 -0400",
        "subject": "Full branch coverage for command/help/help, common/error, common/ini, and common/log modules."
    },
    {
        "commit": "90aadc6534be12e8a49d4da5ff231a1f439e378c",
        "date": "2018-05-04 12:49:25 -0400",
        "subject": "Full branch coverage for config module."
    },
    {
        "commit": "6c3b40152fa88e101564867ed55338bb63eff626",
        "date": "2018-05-04 09:21:32 -0400",
        "subject": "Improve module branch coverage.",
        "body": "Add full branch coverage for cipher/block, command/command, common/wait, and postgres/pageChecksum modules."
    },
    {
        "commit": "c3a8fbe706ed31e2414fa454d6090d0346f34f4a",
        "date": "2018-05-03 11:24:29 -0400",
        "subject": "Add _FMT variants for all THROW macros so format types are checked by the compiler."
    },
    {
        "commit": "6a40c916d4307c2de79de250ed444237d47e6b7a",
        "date": "2018-05-02 14:06:40 -0400",
        "subject": "Add repo-s3-token option to allow temporary credentials tokens to be configured.",
        "body": "pgBackRest currently has no way to request new credentials so the entire command (e.g. backup, restore) must complete before the credentials expire."
    },
    {
        "commit": "5e090ba30501b76717dcb034420aba06847955f2",
        "date": "2018-05-02 12:19:54 -0400",
        "subject": "Fix failure in manifest build when two or more files in PGDATA are linked to the same directory.",
        "body": "Reported by Vitaliy Kukharik."
    },
    {
        "commit": "6a01db2b3297fc103577b8bd25da011f09fc8a17",
        "date": "2018-05-02 12:06:12 -0400",
        "subject": "Fix delta restore failing when a linked file is missing."
    },
    {
        "commit": "9d9fad88a25b0f4bafcae1f2e9b1cf81d00b8d9e",
        "date": "2018-05-02 07:31:44 -0400",
        "subject": "Add example of command section usage to archiving configuration.",
        "body": "Suggested by Christophe Courtois."
    },
    {
        "commit": "fd1984239e5d60293b86419d77bcb1c990dbbc7e",
        "date": "2018-05-01 14:07:08 -0400",
        "subject": "Fix rendering of key/value and list options in help.",
        "body": "Reported by Clinton Adams."
    },
    {
        "commit": "1a1ed8d6b9973e069325b1dee7b54c9bbc2740d1",
        "date": "2018-05-01 13:20:48 -0400",
        "subject": "Update help test to use restore command to provide better coverage."
    },
    {
        "commit": "8dbbf2de929813d5ed2068c13b8cc5b3c3cfafc2",
        "date": "2018-05-01 12:37:06 -0400",
        "subject": "Fix archive-copy throwing \"path not found\" error for incr/diff backups.",
        "body": "Reported by yummyliu, Vitaliy Kukharik."
    },
    {
        "commit": "71ba08f579be228a8975c0a59bd485e5c11bebe5",
        "date": "2018-05-01 11:05:37 -0400",
        "subject": "Make backup/restore path sync more efficient.",
        "body": "Remove recursive path sync functionality since it is no longer used."
    },
    {
        "commit": "54dd6f3ed4fcfeabe0254fdb9d88f560efd5f8ca",
        "date": "2018-04-30 17:27:39 -0400",
        "subject": "Add asynchronous, parallel archive-get.",
        "body": "This feature maintains a queue of WAL segments to help reduce latency when PostgreSQL requests a WAL segment with restore_command."
    },
    {
        "commit": "c48b0a2a1e40764a33b42485a7edf21a544b0db1",
        "date": "2018-04-30 08:13:56 -0400",
        "subject": "Update docs with 32-bit support and caveats.",
        "body": "32-bit support was added in v1.26."
    },
    {
        "commit": "321a28f6b0c6c522b8b8120e9fccfec09de4c6f4",
        "date": "2018-04-29 11:47:50 -0400",
        "subject": "Add walSegmentNext() and walSegmentRange()."
    },
    {
        "commit": "be02c6750376e9a0312b7c707c5c96025eb1cfa6",
        "date": "2018-04-29 11:20:51 -0400",
        "subject": "Add pgControlInfo() to read pg_control and determine the PostgreSQL version."
    },
    {
        "commit": "8c6e2bdbc7ac2b0e887d9d30931a532141974821",
        "date": "2018-04-29 11:02:21 -0400",
        "subject": "Add storageInfo() and track size in read objects."
    },
    {
        "commit": "d74c167420b1c2eba74b29cf13b87f1143951b19",
        "date": "2018-04-29 10:41:05 -0400",
        "subject": "Add bufNewC() and only reallocate buffer when the size has changed."
    },
    {
        "commit": "d44848baa0cc6583208d1d5ddb2db8cf69b866f3",
        "date": "2018-04-29 10:32:46 -0400",
        "subject": "Add strLstExists(), strLstExistsZ(), strSub(), and strSubN() to String and StringList objects."
    },
    {
        "commit": "89d3476e325a94cb75457354e26b1ab4f5bcc8b0",
        "date": "2018-04-29 10:16:59 -0400",
        "subject": "Refactor archive common functions in preparation for parallel async archive-get."
    },
    {
        "commit": "721432f6ae55c2a06d645629703c5103f8d89190",
        "date": "2018-04-25 15:46:05 -0400",
        "subject": "Update the archive-push-queue-max, manifest-save-threshold, and buffer-size options to accept values in KB, MB, GB, TB, or PB where the multiplier is a power of 1024.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "8eabc52f3b5872c898cc14b2691a01a2559ad6bd",
        "date": "2018-04-25 15:16:42 -0400",
        "subject": "Add strUpper, strLower, strChr, and strTrunc to String object.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "88a633da17d53261e0131e2d77209f22403112d6",
        "date": "2018-04-24 09:12:25 -0400",
        "subject": "Divide tests into three types (unit, integration, performance).",
        "body": "Many options that were set per test can instead be inferred from the types, i.e. container, c, expect, and individual.\n\nAlso finish renaming Perl unit tests with the -perl suffix."
    },
    {
        "commit": "bb8c315cadc6329a03cd975a6c865b1ce29d751c",
        "date": "2018-04-23 17:26:27 -0400",
        "subject": "Storage object improvements.",
        "body": "* Add storageCopy(), storageMove(), and storagePathSync().\n* Separate StorageFile object into separate read and write objects.\n* Abstract out Posix file read/write objects."
    },
    {
        "commit": "02cc8ccbd45221ef03f30cd6b068fc7675011592",
        "date": "2018-04-23 10:24:04 -0400",
        "subject": "Add THROWP_* macro variants for error handling.",
        "body": "These macros allow an ErrorType pointer to be passed and are required for functions that may return different errors based on a parameter."
    },
    {
        "commit": "18882cb8822ab8af04ff57853c2bc35145cb7b65",
        "date": "2018-04-23 10:19:45 -0400",
        "subject": "Add bufEq and bufCat to Buffer object."
    },
    {
        "commit": "f146502eae44d7366d79f3d73f695209d3189040",
        "date": "2018-04-23 10:10:55 -0400",
        "subject": "Add TEST_ERROR_FMT macro to simplify testing of formatted error messages."
    },
    {
        "commit": "27aa5f756e32e8e1713588695b86451fde2e5b02",
        "date": "2018-04-19 11:09:39 -0400",
        "subject": "Add support for additional pgBackRest configuration files.",
        "body": "Configuration files are loaded from the directory specified by the --config-include-path option.\n\nAdd --config-path option for overriding the default base path of the --config and --config-include-path option."
    },
    {
        "commit": "79b7552940971ab73cc63676655c6614fd535e21",
        "date": "2018-04-18 19:37:35 -0400",
        "subject": "Rename archive-queue-max option to archive-push-queue-max.",
        "body": "This avoids confusion with the archive-get-queue-max option. The old option name will continue to be accepted."
    },
    {
        "commit": "ab26c765d454cd8f757ccc7ada593746dbddae0d",
        "date": "2018-04-18 18:57:45 -0400",
        "subject": "Don't copy CFGDEF_NAME_ALT or CFGDEF_INHERIT when processing config option inheritance."
    },
    {
        "commit": "ea4046a607cddef588b5eb061f1df1e602a497bf",
        "date": "2018-04-18 18:47:43 -0400",
        "subject": "Try tweaking time sync settings to prevent clock drift rather than restarting VBoxService on every test run."
    },
    {
        "commit": "b3e668421b03b2869c0dac1be6f22a9faf753341",
        "date": "2018-04-17 20:25:42 -0400",
        "subject": "Fix document update missed in e9790fd3."
    },
    {
        "commit": "0381945caa198f833adde7806af2368c2627678a",
        "date": "2018-04-17 18:47:14 -0400",
        "subject": "Show command parameters as well as command options in initial info log message."
    },
    {
        "commit": "e9790fd3b13f87a7f4726471019ead36d5b7b08d",
        "date": "2018-04-17 17:38:25 -0400",
        "subject": "Update out-of-date description for the spool-path option."
    },
    {
        "commit": "cf0ec44ededb357c4fe2783814a2575119a4c498",
        "date": "2018-04-17 12:03:03 -0400",
        "subject": "Rename Perl tests so they don't conflict with their C counterparts."
    },
    {
        "commit": "dce11ce3cf0473b127e56c21436dd4c4159d8646",
        "date": "2018-04-16 15:52:17 -0400",
        "subject": "Generate code counts for all source files.",
        "body": "The source files are also classified by type and purpose."
    },
    {
        "commit": "3e229774840f82e4488d0077b07ae80971f7c385",
        "date": "2018-04-16 15:25:50 -0400",
        "subject": "Use pip 9.03 in test VMs.",
        "body": "pip 10 drops support for Python 2.6 which is still used by the older test VMs."
    },
    {
        "commit": "2a4ff2f904b411f623239f02f54cdb2622017298",
        "date": "2018-04-13 16:05:52 -0400",
        "subject": "Split cfgLoad() into multiple functions to make testing easier.",
        "body": "Mainly this helps with unit tests that need to do log expect testing. Add harnessCfgLoad() test function, which allows a new config to be loaded for unit testing without resetting log functions, opening a log file, or taking locks."
    },
    {
        "commit": "49fc737cd0fc053339f26b4e3b01d2b598124bb4",
        "date": "2018-04-13 14:31:33 -0400",
        "subject": "Add monitoring examples using PostgreSQL and jq.",
        "body": "Suggested by Stephen Frost, Brian Faherty."
    },
    {
        "commit": "d924f3d50a1be296a65096b0b1014ade14c2dd59",
        "date": "2018-04-13 12:00:22 -0400",
        "subject": "Add logic to find the real oid of the test1 database during restore testing."
    },
    {
        "commit": "f0250dab4b7fba2eda57fc0a483352f7cd70d0ab",
        "date": "2018-04-12 20:42:26 -0400",
        "subject": "Move async forking and more error handling to C.",
        "body": "The Perl process was exiting directly when called but that interfered with proper locking for the forked async process. Now Perl returns results to the C process which handles all errors, including signals."
    },
    {
        "commit": "6fd0c3dcaa68e168b05364c699f6c1a6f87f1de0",
        "date": "2018-04-11 09:36:12 -0400",
        "subject": "Improved lock implementation written in C.",
        "body": "Now only two types of locks can be taken: archive and backup. Most commands use one or the other but the stanza-* commands acquire both locks. This provides better protection than the old command-based locking scheme."
    },
    {
        "commit": "4744eb93878da6b7aa2173be16928b081c865b1d",
        "date": "2018-04-11 08:21:09 -0400",
        "subject": "Add storagePathRemove() and use it in the Perl Posix driver.",
        "body": "This implementation should be faster because it does not stat each file.  It simply assumes that most directory entries are files so attempts an unlink() first.  If the entry is reported by error codes to be a directory then it attempts an rmdir()."
    },
    {
        "commit": "c9ce20d41a0c6edc3087511eaff5e0a80e95c8da",
        "date": "2018-04-09 16:46:36 -0400",
        "subject": "Skip version checks when testing in --dev mode."
    },
    {
        "commit": "3bcf637aeeebfeb135e693fb0191dbb2c70f9420",
        "date": "2018-04-08 12:57:02 -0400",
        "subject": "Move archive-stop and expire tests to the mock module.",
        "body": "These are mock integration tests so they should be grouped with the other mock integration tests."
    },
    {
        "commit": "3b661f4ad550cfce993afc5d767ed7f2ac4cea81",
        "date": "2018-04-08 12:16:32 -0400",
        "subject": "Move help/version integration tests to mock/all.",
        "body": "Help and version are covered by unit tests, so we really just to need to make sure there is output when called from the command line."
    },
    {
        "commit": "741acfd7799b7b1b2afe850ccf078cf84a421353",
        "date": "2018-04-08 10:19:24 -0400",
        "subject": "Move test definitions to test/define.yaml.",
        "body": "The location is better because it is no longer buried in the Perl test libs. Also, the data can be easily accessed from C."
    },
    {
        "commit": "b77b4250964ca47ac622c83ae72bfc9d453ea5d7",
        "date": "2018-04-07 19:44:00 -0400",
        "subject": "Allow -DDEBUG_UNIT to be suppressed to test how debug macros behave."
    },
    {
        "commit": "82751b3b511e9a55724d3836b2454df8c97d8a25",
        "date": "2018-04-07 13:12:35 -0400",
        "subject": "Split debug and assert code into separate headers.",
        "body": "Assert can be used earlier because it only depends on the error-handler and not logging."
    },
    {
        "commit": "e00f2dd4ad574c7680bce2126df4d320c9c8d6ac",
        "date": "2018-04-06 21:46:45 -0400",
        "subject": "More C type cleanup.",
        "body": "* Remove typec.h entirely.\n* Order all typdefs above local includes."
    },
    {
        "commit": "f3b56cf8f328dc68dc4c978f0d82d3f5efbbe939",
        "date": "2018-04-06 17:04:52 -0400",
        "subject": "Allow MemContext objects to be copied to a new parent.",
        "body": "This makes it easier to create objects and then copy them to another context when they are complete without having to worry about freeing them on error. Update List, StringList, and Buffer to allow moves. Update Ini and Storage to take advantage of moves."
    },
    {
        "commit": "b9f636cab470165ff0d69baa54efa5f8b2a79d43",
        "date": "2018-04-05 22:38:11 -0400",
        "subject": "Cleanup C types.",
        "body": "* Remove pgBackRest defined types included with the C types.\n* Remove redefinition of standard C types."
    },
    {
        "commit": "bd25248df02d4a21315e73c1a4dc28fe8458fe97",
        "date": "2018-04-05 14:48:16 -0400",
        "subject": "Abstract Posix storage driver code into a separate module."
    },
    {
        "commit": "348278bb68ea4cebc3140404729f12fc63d6071d",
        "date": "2018-04-03 21:30:15 -0400",
        "subject": "Make backup directory sync more efficient.",
        "body": "Scanning the entire backup directory can be very expensive if there are a lot of small tables. The backup manifest contains the backup directory list so use it to perform syncs instead of scanning the backup directory."
    },
    {
        "commit": "0dce8ba2fa096faafa3871517458bfe6d742350f",
        "date": "2018-04-03 20:54:18 -0400",
        "subject": "Make backup.history sync more efficient.",
        "body": "Only the backup.history/[year] directory was being synced, so check if the backup.history is newly created and sync it as well."
    },
    {
        "commit": "58902722477518d7daa202241772bf499ea136a3",
        "date": "2018-04-03 18:12:03 -0400",
        "subject": "Fix directory syncs running recursively when only the specified directory should be synced.",
        "body": "Reported by Craig A. James."
    },
    {
        "commit": "46b6be6d7269ae35ff633736c4c5ddcde313d0d2",
        "date": "2018-04-03 13:35:56 -0400",
        "subject": "Fix header exclusion defines that do not match the general pattern."
    },
    {
        "commit": "93fdb98d1500ca72a1d3355ed0c7ff23e27e074c",
        "date": "2018-04-03 12:25:21 -0400",
        "subject": "Storage object improvements.",
        "body": "* Convert all functions to variadic functions.\n* Enforce read-only storage.\n* Add storageLocalWrite() helper function. Add storageExists(), storagePathCreate(), storageRemove(), and storageStat().\n* Add StorageFile object and storageOpenRead()/storageOpenWrite()."
    },
    {
        "commit": "90f980fe91b8dff96523a8089613b31b4485b923",
        "date": "2018-03-30 21:33:30 -0400",
        "subject": "Remove documentation describing info --output=json as experimental."
    },
    {
        "commit": "635caff573315d5fe0dd267f968a4c40c98d524f",
        "date": "2018-03-30 19:10:34 -0400",
        "subject": "Add ASSERT() that is preserved in production builds."
    },
    {
        "commit": "a8721ffe118e0c6ae93f6bc45c6bb79aaf78b440",
        "date": "2018-03-27 22:48:22 -0400",
        "subject": "Improve logic for smart builds to include version changes."
    },
    {
        "commit": "5518a2ac51be91f71bfed0e27eba5e8bb6e465d2",
        "date": "2018-03-27 20:40:33 -0400",
        "subject": "Full branch coverage for storage/storage module."
    },
    {
        "commit": "c1ab7b3c98c0a21b2b1b78ef3e64dfd891f68a11",
        "date": "2018-03-25 11:39:24 -0400",
        "subject": "Start work on C handle io object and use it to output help."
    },
    {
        "commit": "9001b9b9576cb2d852984214e8bdd3b583dc552f",
        "date": "2018-03-24 14:11:29 -0400",
        "subject": "Replace THROW_ON_SYS_ERROR() with THROW_SYS_ERROR().",
        "body": "The former macro was hiding missing branch coverage for critical error handling."
    },
    {
        "commit": "c7a6e9d2f2b58ca7832c58c3e25c65c1d03079e3",
        "date": "2018-03-23 16:08:32 -0400",
        "subject": "Document build improvements.",
        "body": "* Perform apt-get update to ensure packages are up to date before installing.\n* Add -p to the repository mkdir so it won't fail if the directory already exists, handy for testing packages."
    },
    {
        "commit": "dabf727d91704dac6bfd59019d112857cbf963f3",
        "date": "2018-03-21 16:08:08 -0400",
        "subject": "Include VM type in gcov path to avoid conflicts between VMs with different architectures."
    },
    {
        "commit": "c6457b070f5bdf26bb9146004e5ba2116b161df7",
        "date": "2018-03-21 13:46:08 -0400",
        "subject": "Full branch coverage for config/parse module."
    },
    {
        "commit": "b234f43c9d8e6abde99947c64e0776e0054091c8",
        "date": "2018-03-21 09:18:48 -0400",
        "subject": "Refactor usec to msec in common/time.c.",
        "body": "The implementation provides usec resolution but this is not needed in practice and it makes the interface more complicated due to the extra zeros."
    },
    {
        "commit": "31830bdc55bd603e90a13b54b81b919526cf03a5",
        "date": "2018-03-20 16:08:52 -0400",
        "subject": "Full branch coverage for all common/type modules."
    },
    {
        "commit": "a2030da20048845c879c45279e839c9109a92418",
        "date": "2018-03-20 16:01:38 -0400",
        "subject": "Specify prefix for lcov output.",
        "body": "This prevents pages from moving around depending on the subtest."
    },
    {
        "commit": "f4ed36d128ba7bda602f0c6451325ce377f422b4",
        "date": "2018-03-20 10:17:53 -0400",
        "subject": "Add switch() to lcov branch exclusions.",
        "body": "lcov requires default to show complete coverage but --Wswitch-enum enforces all enum values be present so no default is needed.\n\nAdd documentation for each branch exclusion."
    },
    {
        "commit": "d34142dee82e41f983517a181f721d6009d70a81",
        "date": "2018-03-20 09:47:51 -0400",
        "subject": "Update lcov settings.",
        "body": "Mark any coverage less that 100% as yellow, less that 90% as red.\n\nAdd comments to config file and make genhtml use it as well as lcov."
    },
    {
        "commit": "07f38f584a6014e10888fe0f8016febab79ce67b",
        "date": "2018-03-19 23:33:28 -0400",
        "subject": "Use lcov for C unit test coverage reporting.",
        "body": "Switch from Devel::Cover because it would not report on branch coverage for reports converted from gcov.\n\nBranch coverage is not complete, so for the time being errors will only be generated when statement coverage is not complete. Coverage of unit tests is not displayed in the report unless they are incomplete for either statement or branch coverage."
    },
    {
        "commit": "2a3d6ecde8a86154cfaba067dfcbe459ef2aa8e1",
        "date": "2018-03-19 21:49:41 -0400",
        "subject": "v2.01: Minor Bug Fixes and Improvements"
    },
    {
        "commit": "45c6a0e864189a309ad3e5c0f643b46dd50fb303",
        "date": "2018-03-19 21:03:42 -0400",
        "subject": "Remove hard-coded release version from loadTest.c."
    },
    {
        "commit": "5b0748cf93d49d52bf74290e05c208fc88017a26",
        "date": "2018-03-19 20:25:55 -0400",
        "subject": "Always autogenerate code if --smart is not specified."
    },
    {
        "commit": "f0a4264f77a7d9cb1dc5434e3c76c8313c600c79",
        "date": "2018-03-19 19:54:03 -0400",
        "subject": "Fix manifest test in the check command when tablespaces are present.",
        "body": "Fixed by Cynthia Shang.\nReported by Thomas Flatley."
    },
    {
        "commit": "8e9e97728c5f58790ba91305f465b04d8a7a061a",
        "date": "2018-03-19 17:38:44 -0400",
        "subject": "Remove --smart from --expect tests.",
        "body": "This ensures that new binaries are built before running the tests."
    },
    {
        "commit": "2c1687721e57b1917dc3f3bed62aa01b59078f5c",
        "date": "2018-03-19 13:08:42 -0400",
        "subject": "Fix issue where specifying log-level-stderr > warn would cause a local/remote process to error on exit due to output found on stderr when none was expected.",
        "body": "The max value for a local/remote process is now error since there's no reason for these processes to emit warnings."
    },
    {
        "commit": "0c313713b1f40f09a970bee70e4e1ca3bcbbe082",
        "date": "2018-03-18 13:32:19 -0400",
        "subject": "Use clang for static code analysis.",
        "body": "Nothing found except for some functions that should have been marked __noreturn__."
    },
    {
        "commit": "f0451c1494d0886c8fc24734eb8f98d403ce91dc",
        "date": "2018-03-15 13:53:03 -0400",
        "subject": "Enable -Wformat=2 and -Wformat-nonliteral and silence new warnings."
    },
    {
        "commit": "8a1ce42c30e7e9ac79b1f7b66aa870d84c7419de",
        "date": "2018-03-15 12:02:09 -0400",
        "subject": "Immediately error when a secure option (e.g. repo1-s3-key) is passed on the command line.",
        "body": "Since pgBackRest would not pass secure options on to sub-processes an obscure error was thrown. The new error is much clearer and provides hints about how to fix the problem.\n\nUpdate command documentation to omit secure options that cannot be specified on the command-line."
    },
    {
        "commit": "dd3ce7081070aca3a5c915af2a7e642c3ebece4b",
        "date": "2018-03-15 11:09:46 -0400",
        "subject": "Config test code writes secure options to a file instead of passing on the command-line."
    },
    {
        "commit": "4fb75c9cc1c594d462adb31b8146e789ce639fb3",
        "date": "2018-03-15 11:03:28 -0400",
        "subject": "Improve conversion of C exceptions to Exception objects.",
        "body": "Colons in the message would prevent all of the message from being loaded into the Exception object."
    },
    {
        "commit": "599e291b366e0c0217c81fad44a3f7cdbd800d98",
        "date": "2018-03-14 14:34:06 -0400",
        "subject": "Check int size in common/type.h.",
        "body": "This ensures that integers are at least 32-bits without having to run the test suite."
    },
    {
        "commit": "e7fd94ee23f7b0b353f926c55086c9163f6f4881",
        "date": "2018-03-14 11:10:46 -0400",
        "subject": "Simplify table of contents on command page by only listing commands.",
        "body": "Suggested by Stephen Frost."
    },
    {
        "commit": "4b6cd92a4ca8de743ddf3d62e71e548ead06644b",
        "date": "2018-03-12 17:15:14 -0400",
        "subject": "Improve debugging.",
        "body": "* Replace remaining NDEBUG blocks with the more granular DEBUG_UNIT.\n* Remove some debug memset() calls in MemContext since valgrind is more useful for these checks."
    },
    {
        "commit": "cced6ec03aa212310a940e643cc8f2b484d95a8c",
        "date": "2018-03-12 14:31:22 -0400",
        "subject": "Add ASSERT_DEBUG() macro for debugging.",
        "body": "Replace all current assert() calls except in tests that can't use the debug code."
    },
    {
        "commit": "dd31ae832d6d5278079d5e84c471b0258f51940b",
        "date": "2018-03-12 11:25:20 -0400",
        "subject": "Port most of Config::Config::configLoad() from Perl to C.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "03f1082e86ac82477f09f212332e9c82946d28ad",
        "date": "2018-03-12 11:03:38 -0400",
        "subject": "Improve logging.",
        "body": "Move command begin to C except when it must be called after another command in Perl (e.g. expire after backup). Command begin logs correctly for complex data types like hash and list. Specify which commands will log to file immediately and set the default log level for log messages that are common to all commands. File logging is initiated from C."
    },
    {
        "commit": "94494a632f0d217810a0cd0da462529c6c60b032",
        "date": "2018-03-12 11:02:46 -0400",
        "subject": "Update pip before installing awscli."
    },
    {
        "commit": "f047cd0dfd3de01ff4ea678f394af8302e89e7c0",
        "date": "2018-03-09 23:00:20 -0500",
        "subject": "Improve code generation performance."
    },
    {
        "commit": "b987f05f3529654515e5cddee4057fe5f83cfd20",
        "date": "2018-03-09 21:24:30 -0500",
        "subject": "Improve bin and libc build performance."
    },
    {
        "commit": "c32ee346128182b9742417c27b0ae9c5bd768cb8",
        "date": "2018-03-09 18:28:34 -0500",
        "subject": "Build with -DNDEBUG by default but disable for testing."
    },
    {
        "commit": "fbe4c40386d9b8666514703996b5734d2719b652",
        "date": "2018-03-09 09:30:50 -0500",
        "subject": "Move logic for setting Perl configuration defaults to C."
    },
    {
        "commit": "919635b6f42eff1c1de0638626314caf4b0e2f2a",
        "date": "2018-03-08 16:24:16 -0500",
        "subject": "Set config before Main::main() call to avoid secrets being exposed in a stack trace."
    },
    {
        "commit": "34898ce471214e234e14d9532bbb34b8095381cc",
        "date": "2018-03-08 14:15:05 -0500",
        "subject": "Error when multiple arguments are set in the config file for an option that does not accept multiple arguments.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "e331564c9025077a0f3922408a90d5f8f18baed1",
        "date": "2018-03-08 12:36:55 -0500",
        "subject": "Add new test for Common::Io::Process.",
        "body": "Show that output on stderr will raise an exception on close() even if the exit code is 0."
    },
    {
        "commit": "62a9bdbd4c25b9801bcc6a4892d442f38e6d4da5",
        "date": "2018-03-08 10:43:09 -0500",
        "subject": "Fix issue passing --no-config to embedded Perl.",
        "body": "Reported by Ibrahim Edib Kokdemir."
    },
    {
        "commit": "5e0ce3e996db90c44eba835093549f9634525f21",
        "date": "2018-03-06 17:12:16 -0500",
        "subject": "Fix --target-action and --recovery-option options being reported as invalid when restoring with --type=immediate.",
        "body": "Reported by Brad Nicholson."
    },
    {
        "commit": "4c8ed3530c05e2a88a1515a1cdd31ac3871b4bc2",
        "date": "2018-03-06 14:20:12 -0500",
        "subject": "Show index in examples for indexed options, i.e. repo-*, pg-*.",
        "body": "Suggested by Stephen Frost."
    },
    {
        "commit": "45ffe37e4ff3fd955a10bad93c17f443793855b8",
        "date": "2018-03-05 18:51:48 -0500",
        "subject": "Add cfgOptionTest().",
        "body": "Update cfgOption() calls that are better implemented as cfgOptionTest()."
    },
    {
        "commit": "a50b1eb5be64c0ea68c468cbe0b793be93136c33",
        "date": "2018-03-05 10:03:10 -0500",
        "subject": "Remove references to the C library being optional."
    },
    {
        "commit": "c07aa2ae1940f2c6cf0f7a2e701b20e2d0c32ff9",
        "date": "2018-03-02 22:42:02 -0500",
        "subject": "Improve code documentation in config module."
    },
    {
        "commit": "406acf9cba16fc93fdcd7d6ee93483ef8ef5d073",
        "date": "2018-03-02 12:07:12 -0500",
        "subject": "Enable -Wconversion and silence new warnings."
    },
    {
        "commit": "6ca6424fb1b32fb43eafc481d179508e958e5e7e",
        "date": "2018-03-01 16:59:49 -0500",
        "subject": "Remove extraneous sudo commands from src/Makefile.",
        "body": "Contributed by Adrian Vondendriesch."
    },
    {
        "commit": "af805af044317265a786214bed4c506977e934b4",
        "date": "2018-03-01 16:59:13 -0500",
        "subject": "Remove Debian package patch now that it has been merged upstream."
    },
    {
        "commit": "5d1722b8ef7dd86ef717ce0425fb5b55d73f5f1d",
        "date": "2018-03-01 13:32:51 -0500",
        "subject": "Disable console display of coverage for C files.",
        "body": "Devel::Cover does not handle it well."
    },
    {
        "commit": "57d70a5649c2d4f0500c495d0fb065d1eda06e4b",
        "date": "2018-03-01 13:31:03 -0500",
        "subject": "Remove RHEL package patch since upstream has been updated."
    },
    {
        "commit": "5b491b3035502819a31e1200636c8d2757a78a18",
        "date": "2018-02-26 19:32:27 -0500",
        "subject": "Add CentOS/RHEL package builds."
    },
    {
        "commit": "f9c1a3b156a07ecfd4916fe0386f90022406d721",
        "date": "2018-02-26 10:43:49 -0500",
        "subject": "Enable -Wswitch-enum and silence new warnings."
    },
    {
        "commit": "c8df690931561c4b172d2ea48e68a0597e0a272b",
        "date": "2018-02-26 10:02:33 -0500",
        "subject": "Fix incorrect enum types in config.c that throw warnings under clang.",
        "body": "Found by Douglas J Hunley."
    },
    {
        "commit": "09223a733dd8a4b9fc3deeec72ee5a168a9c625d",
        "date": "2018-02-23 23:44:10 -0500",
        "subject": "Remove github CNAME file."
    },
    {
        "commit": "1f954b324ae8c2ae43af1da2a97090dde586fb8f",
        "date": "2018-02-23 23:42:29 -0500",
        "subject": "Update how versions are displayed in the documentation."
    },
    {
        "commit": "13cdb75ac56609c6a1d2f7cb3c31c0f0b29ecc3b",
        "date": "2018-02-23 22:38:45 -0500",
        "subject": "v2.00: Performance Improvements for Archive Push"
    },
    {
        "commit": "ed5876810d616a6dc59bddf722f74cccd9b8ddec",
        "date": "2018-02-23 14:16:20 -0500",
        "subject": "Fix missing variable replace for PDF code-block title.",
        "body": "Found by Jason O'Donnell."
    },
    {
        "commit": "2485fabbadf56aa51f821048e72550ddac026691",
        "date": "2018-02-22 09:31:53 -0500",
        "subject": "PDF rendering improvements.",
        "body": "* Fill is now the default for table columns.\n* Column width is specified as a percentage rather that using latex-specific notation."
    },
    {
        "commit": "d4418e7764bf6b3d3e8b6d2bc204cfd0e00bca13",
        "date": "2018-02-21 18:15:40 -0500",
        "subject": "Rename pg-primary and pg-standby variables to pg1 and pg2.",
        "body": "It would be better if the hostnames were also pg1 and pg2 to illustrate that primaries and standbys can change hosts, but at this time the configuration ends up being confusing since pg1, pg2, etc. are also used in the option naming.  So, for now leave the names as pg-primary and pg-standby to avoid confusion."
    },
    {
        "commit": "5eb682a569cdc4f33ea053e3619163c98aefcdd1",
        "date": "2018-02-21 18:10:53 -0500",
        "subject": "Add id param for hosts created with host-add.",
        "body": "The host-*-ip variable is created from the id param so the name param can be changed without affecting the host-*-ip variable. If id is not specified then it is copied from name."
    },
    {
        "commit": "246d4415079550f4f1391c09ad874c2cf4e3fa37",
        "date": "2018-02-21 15:30:35 -0500",
        "subject": "More flexible replacements for PDF titles and footers."
    },
    {
        "commit": "aed578a4bd201d16512b1adb87a327504a0c335c",
        "date": "2018-02-21 15:26:30 -0500",
        "subject": "Allow sections to be excluded from table of contents in PDF output."
    },
    {
        "commit": "64a7196cb64d90fe8801f7be6c4c634ba17bf32a",
        "date": "2018-02-19 15:07:24 -0500",
        "subject": "Rename retention-* options to repo-retention-*."
    },
    {
        "commit": "f75ba7db9426dd05dc868beb00528aae04ea3a4b",
        "date": "2018-02-19 13:17:58 -0500",
        "subject": "Update backup host to repository host in the documentation.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "435240777766afc7effb81cdb5e6cf03fea6e0fa",
        "date": "2018-02-19 10:12:51 -0500",
        "subject": "Option rename cleanup based on review.",
        "body": "* Remove --reset tags from v1 options.\n* Use constants for repo prefix.\n* Specify CFGDEF_INDEX_PG in option structure rather than adding in code.\n* Fix error message references to \"backup host\"."
    },
    {
        "commit": "f981283b8dea28214072ace05b67acc27989c76f",
        "date": "2018-02-18 15:45:32 -0500",
        "subject": "Remove exit() calls from main() to make it cleaner and more testable."
    },
    {
        "commit": "599e41a2514eda36c1cd7f2a69754a5f94c30dcd",
        "date": "2018-02-18 14:54:32 -0500",
        "subject": "Improve S3 delete performance.",
        "body": "The constant S3_BATCH_MAX had been replaced with a hard-coded value of 2, probably during testing."
    },
    {
        "commit": "90703257603f04446872b2b39eea26fec2c1b460",
        "date": "2018-02-18 14:53:27 -0500",
        "subject": "Improve performance of HTTPS client.",
        "body": "Buffering now takes the pending bytes on the socket into account (when present) rather than relying entirely on select(). In some instances the final bytes would not be flushed until the connection was closed."
    },
    {
        "commit": "27678f6188534d1233eeb9424a6fa590c79a5c9d",
        "date": "2018-02-18 10:44:58 -0500",
        "subject": "Clean up and document Makefile."
    },
    {
        "commit": "3eed4bbb4390ecf8d7f2b9ad349a568bfa06a9c8",
        "date": "2018-02-16 15:09:37 -0500",
        "subject": "PDF rendering improvements.",
        "body": "* Check both doc-path and bin-path for logo.\n* Allow PDF to be output to a location other than the output directory.\n* Use PDF-specific version variable for more flexible formatting."
    },
    {
        "commit": "0e27060952b49254574d017346beb8f834afee4f",
        "date": "2018-02-16 14:55:48 -0500",
        "subject": "Add table render for Markdown format.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "ca52a0485e23da55bd0c15299a52303c6de439bb",
        "date": "2018-02-16 14:46:02 -0500",
        "subject": "Allow code blocks to have a type.",
        "body": "Currently this is only rendered in Markdown."
    },
    {
        "commit": "2dc0737e95efc858bcc7e4318b3003b3bd57f5ee",
        "date": "2018-02-16 14:39:42 -0500",
        "subject": "Improve section source feature to not require a title or content.",
        "body": "The title will be pulled from the source document."
    },
    {
        "commit": "1f62237684f78b0d13268f7be59776a9cbd7f5d6",
        "date": "2018-02-14 19:52:46 -0500",
        "subject": "Clarify that S3 buckets must be created by the user.",
        "body": "Suggested by David Youatt."
    },
    {
        "commit": "72cbb9a9d47ec7a2066fbe12bd75619f9f43e4f7",
        "date": "2018-02-14 17:19:54 -0500",
        "subject": "Call Perl with built-in interpreter instead of execvp().",
        "body": "Exec'ing Perl worked fine but generated a very large command line in the process list and potentially exposed secrets."
    },
    {
        "commit": "81952c41f4592aec05ecd60f8097f4f1fcb83437",
        "date": "2018-02-14 17:13:18 -0500",
        "subject": "Report coverage errors via the console.",
        "body": "This helps with debugging coverage issues on remote services like Travis."
    },
    {
        "commit": "5f2884cb296a2c71dd9d6432c2c387efc96ceeef",
        "date": "2018-02-14 16:46:52 -0500",
        "subject": "Suppress coverage failures for Archive/Push/Async on Travis.",
        "body": "The coverage report shows some code as never being run -- but that makes no sense because the tests pass.  This may be due to trying to combine the C and Perl coverage reports and overwriting some runs.\n\nSuppress for now with a plan to implement LCOV for the C unit tests."
    },
    {
        "commit": "a907fd7d2d21f01714427d0c769e3973a99f1a45",
        "date": "2018-02-14 10:33:21 -0500",
        "subject": "Build C binary/library for C unit tests that require Perl."
    },
    {
        "commit": "fda62dfc485d435b4996137844f029464e87222c",
        "date": "2018-02-14 09:49:01 -0500",
        "subject": "Move Perl option JSON generation to a new module.",
        "body": "Linking exec.c into LibC will not be an option once the perl exec loads the Perl interpreter."
    },
    {
        "commit": "68a83ea2dcdc168aedefc856acc2c261889613fa",
        "date": "2018-02-14 09:21:55 -0500",
        "subject": "Add missing const to strLstAdd()."
    },
    {
        "commit": "5242e8eec59b0cb91437fad95289dcc8b5dc61a7",
        "date": "2018-02-14 09:18:27 -0500",
        "subject": "Generate suppressions when running Valgrind.",
        "body": "This makes it easier to suppress errors that are only occurring on Travis."
    },
    {
        "commit": "00e9aca872745d2552aa1b562c0dc034fe867356",
        "date": "2018-02-13 15:58:14 -0500",
        "subject": "Fixed issue where --reset-* was not passing the default value to Perl.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "213724907b5eb3acd5af158601d74913f30af67f",
        "date": "2018-02-09 22:27:21 -0500",
        "subject": "Add contributor."
    },
    {
        "commit": "a3b80768bdaf627a2fa71c561ebc8c1962196580",
        "date": "2018-02-09 15:56:22 -0500",
        "subject": "Merge 1.28 release notes."
    },
    {
        "commit": "ea296372d4c920bdcfde85e138719f20d881f16c",
        "date": "2018-02-09 15:42:11 -0500",
        "subject": "Add allow range to int/float options that did not already have one."
    },
    {
        "commit": "7c58fe7451666778b71d3b934d35dc1550a36387",
        "date": "2018-02-09 13:54:33 -0500",
        "subject": "Use 64-bit integers for config options.",
        "body": "In particular, archive-queue-max requires a greater range than is provided by a 32-bit integer."
    },
    {
        "commit": "305a3e176185edaedec68be5824c950121297213",
        "date": "2018-02-09 13:52:02 -0500",
        "subject": "Add int64 variant type."
    },
    {
        "commit": "1659598cfe957f06e74f1584591337674cb19e81",
        "date": "2018-02-08 16:11:47 -0500",
        "subject": "Create a master list of errors in build/error.yaml.",
        "body": "The C and Perl errors lists are created automatically by Build.pm so they stay up to date."
    },
    {
        "commit": "eba31fbfe5e58c66b776c2c09a6a53a533819c20",
        "date": "2018-02-08 14:49:35 -0500",
        "subject": "Update URL for Debian package repository."
    },
    {
        "commit": "7d13087c4b0bf2f5e3ca08065edc04a83c37f1b4",
        "date": "2018-02-06 11:26:06 -0500",
        "subject": "Rename -no to -reset for non-boolean options."
    },
    {
        "commit": "808b6000eb4434a66d1073d8b903b1236a082445",
        "date": "2018-02-05 15:48:26 -0500",
        "subject": "Fix some bugs in C config code:",
        "body": "1) Error when the same option is defined multiple times in a section using alternate names.\n2) Fix logging of invalid command error.\n3) Warn when a stanza-only option is in a global section.\n\nAlso, make a note to add validation of section names to the check command.\n\nPer review by Cynthia Shang."
    },
    {
        "commit": "d35757c05f1b4b30c57997c6221d888660a4ee52",
        "date": "2018-02-05 15:19:28 -0500",
        "subject": "Fix missing log-level-stderr option for stanza-* commands."
    },
    {
        "commit": "2074e6fbf9a4c0b7b5a8759e9dd9be2a9bd46b41",
        "date": "2018-02-05 12:41:42 -0500",
        "subject": "Move log option update to after fork() in archive-push.",
        "body": "The log-level-console option should not be changed in the parent process. Even though it is harmless at the moment, that may not always be true.\n\nPer review by Cynthia Shang."
    },
    {
        "commit": "c3f47bf240cc2eaf4c6fa441c0c2d95979477379",
        "date": "2018-02-05 12:32:30 -0500",
        "subject": "Move config parsing out of Perl tests.",
        "body": "cfgParseTest() is provided in the C library for parsing configs in unit tests."
    },
    {
        "commit": "db21b7a360fdc3aea4a22480c634b8d6f2ee52eb",
        "date": "2018-02-05 11:50:09 -0500",
        "subject": "Cleanup usage of internal options.",
        "body": "Apply internal to options that need to be read to determine locality but should not appear in the help."
    },
    {
        "commit": "be900281003f67c549630186482242cc40f0685b",
        "date": "2018-02-03 18:27:38 -0500",
        "subject": "Rename db-* options to pg-* and backup-* options to repo-* to improve consistency.",
        "body": "* repo-* options are now indexed although only one is allowed.\n* List deprecated option names in documentation and command-line help."
    },
    {
        "commit": "dc73abdb6e9612f7af8e38408639be53daba0575",
        "date": "2018-02-01 14:12:03 -0500",
        "subject": "Improve stanza-create command so that it does not error when the stanza already exists.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "298b33988c34ac5777c8174435e20a863dd6f730",
        "date": "2018-01-31 18:22:25 -0500",
        "subject": "Fix non-compliant formatting for function declarations.",
        "body": "Per review by Cynthia Shang."
    },
    {
        "commit": "b4d434b41c8302e48cf2f2dcec8a465378507b73",
        "date": "2018-01-31 17:34:27 -0500",
        "subject": "Update stanza-create --force documentation to urge caution when using.",
        "body": "Suggested by Jason O'Donnell."
    },
    {
        "commit": "bacc08792dae400de652ce2f769aeeda73f0ef8e",
        "date": "2018-01-30 16:49:47 -0500",
        "subject": "Ensure latest db-id is selected on when matching archive.info to backup.info.",
        "body": "This provides correct matching in the event there are system-id and db-version duplicates (e.g. after reverting a pg_upgrade).\n\nFixed by Cynthia Shang.\nReported by Adam K. Sumner."
    },
    {
        "commit": "00f58ec8c0349e6941ae6fd0957f2c1196ce0cad",
        "date": "2018-01-30 16:13:54 -0500",
        "subject": "Fixed inability to restore a single database contained in a tablespace using --db-include.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "a91a648019bc8871c9e74868c59a933d74c3dc5c",
        "date": "2018-01-28 21:37:09 -0500",
        "subject": "Config parsing no longer implemented in Perl.",
        "body": "Options are passed to Perl as JSON from the C process."
    },
    {
        "commit": "f0ef1dee05266f7be1acd8943a3bcda11f0d2e59",
        "date": "2018-01-26 16:41:17 -0500",
        "subject": "Improve speed of C unit tests.",
        "body": "Preserve object files between tests and use a Makefile to avoid rebuilding object files."
    },
    {
        "commit": "b58a45e0676f9bc5b7e2e136cd338db572a6a604",
        "date": "2018-01-23 13:34:24 -0500",
        "subject": "Implement help command in C."
    },
    {
        "commit": "404ec30d039866a83d7c0707aaab838ccffe433f",
        "date": "2018-01-23 12:58:35 -0500",
        "subject": "Move Perl help test to real module."
    },
    {
        "commit": "3dd882a79eb26b443f74aa8c34328add10baf976",
        "date": "2018-01-23 12:49:04 -0500",
        "subject": "Add internal flag to config definition."
    },
    {
        "commit": "41bd5e8148b307e8285fa855dc715b889d5a0617",
        "date": "2018-01-23 12:40:02 -0500",
        "subject": "Improve KeyValue object.",
        "body": "Add kvGetList() to get a value as a list (of 1) even if it is a scalar."
    },
    {
        "commit": "2afb73da1cac6447c01a042fe7105e9910f3b20e",
        "date": "2018-01-23 12:17:30 -0500",
        "subject": "Improve String, StringList, and List objects.",
        "body": "* Add strCmp*() and strFirst*() to String.\n* Add strLstSort() and strLstNewSplitSize() to StringList.\n* Add strLstNewSplitZ() to StringList a update calls to strLstNewSplit() as needed.\n* Add lstSort to List."
    },
    {
        "commit": "47c048b42a0cbf45d97da701521b8ddaeccfd2cf",
        "date": "2018-01-18 08:56:03 -0500",
        "subject": "Update LICENSE.txt for 2018."
    },
    {
        "commit": "2cc9b2287bf4bf7bc0a4b98f274bb737e0d5e961",
        "date": "2018-01-17 15:52:00 -0500",
        "subject": "The archive-push command is now partially coded in C.",
        "body": "This allows the PostgreSQL archive_command to run significantly faster when processing status messages from the asynchronous archive process."
    },
    {
        "commit": "a4c058d070dfc6f6098fad051a14893ef449eae6",
        "date": "2018-01-17 15:03:55 -0500",
        "subject": "Add 30 second wait loop to lockAcquire() when fail on no lock enabled.",
        "body": "This should help prevent processes that are shutting down from interfering with processes that are starting up."
    },
    {
        "commit": "1f39a34abc65c43a0635403b246168acdef4dbbe",
        "date": "2018-01-17 10:31:21 -0500",
        "subject": "Move lock release later in exitSafe().",
        "body": "This reduce the chance of a new process starting and acquiring a lock before the old process has exited."
    },
    {
        "commit": "7c73f4f6c981e8a2806bbca3c035d7ba1e6c7713",
        "date": "2018-01-17 09:15:51 -0500",
        "subject": "Add command and exit modules."
    },
    {
        "commit": "39cb971afb79b1368b9f1dd9185ad49fbb0de9c5",
        "date": "2018-01-16 13:52:20 -0500",
        "subject": "Add log module."
    },
    {
        "commit": "eb452c8addb345c02246b8c97e088cca6c66c6d1",
        "date": "2018-01-16 13:38:37 -0500",
        "subject": "Improvements to Storage object.",
        "body": "* storagePath() and storageList() commands\n* Helper functions for local and spool storag"
    },
    {
        "commit": "8f81620b9f5a8de4f2d2ebb0a5ecc2fe49d26435",
        "date": "2018-01-16 13:29:27 -0500",
        "subject": "Improve error module.",
        "body": "Add functions to convert error codes to C errors and handle system errors."
    },
    {
        "commit": "bffc6c49b31a98fc5a6ae68b80db0251da6e9441",
        "date": "2018-01-16 13:23:08 -0500",
        "subject": "Add perl-bin option to specify the Perl binary location when /usr/bin/env perl won't work."
    },
    {
        "commit": "d633417e5db447e3689097c1d31ad1356eb94745",
        "date": "2018-01-16 13:05:00 -0500",
        "subject": "Add Wait object and time module."
    },
    {
        "commit": "721d1127a03b9fbd3fab04554c92f949954cf514",
        "date": "2018-01-16 12:57:23 -0500",
        "subject": "Add RegExp object."
    },
    {
        "commit": "05c731692b93d171ffdd0e0e297c2274998bfc16",
        "date": "2018-01-16 12:54:06 -0500",
        "subject": "Add varStrForce() to Variant object."
    },
    {
        "commit": "83ddd75d824fca293d88bb53f7349cf637926458",
        "date": "2018-01-16 12:47:08 -0500",
        "subject": "Improvements to String object.",
        "body": "* Add strBeginsWith(), strEndsWith(), strEq(), and strBase().\n* Enable compiler type checking for strNewFmt() and strCatFmt().\n* Rename strNewSzN() to strNewN()."
    },
    {
        "commit": "d992851456f4aef9a0218be0411f1d6815fb9be0",
        "date": "2018-01-16 12:36:22 -0500",
        "subject": "Rename Perl tests so they don't conflict with their C counterparts."
    },
    {
        "commit": "0e9ba98a50159fc1f26792f9032603fae0aed24c",
        "date": "2018-01-03 12:23:33 -0500",
        "subject": "Add stanza-delete command to cleanup unused stanzas.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "526acca5bd7d86a7d8b34a1eb37ec3e49e042073",
        "date": "2017-12-22 23:27:49 -0500",
        "subject": "Config parsing implemented in C."
    },
    {
        "commit": "d8c575801daf6d17e6cbf2daeb2d265c75199032",
        "date": "2017-12-22 22:55:17 -0500",
        "subject": "Add Ini object."
    },
    {
        "commit": "69488ca8ff11f8256b89828e97f62c8b7039bd4f",
        "date": "2017-12-22 22:36:01 -0500",
        "subject": "Add Storage object."
    },
    {
        "commit": "b2a64b1f43be7045ba904b156225496bc6dd405e",
        "date": "2017-12-22 22:05:37 -0500",
        "subject": "Add KeyValue object."
    },
    {
        "commit": "2add6cef95beba05e9c2539d8831273a5b675163",
        "date": "2017-12-22 21:50:27 -0500",
        "subject": "Add Variant and VariantList objects."
    },
    {
        "commit": "c4b30af64598579f87b0556d974264a9248e5e82",
        "date": "2017-12-22 19:56:01 -0500",
        "subject": "Add Buffer object."
    },
    {
        "commit": "f89b027decd35c87ee9b531db1a2d0bf5c671802",
        "date": "2017-12-22 19:30:15 -0500",
        "subject": "Improve String and StringList modules."
    },
    {
        "commit": "5667932063454d0a8851aa1f43b07933307de655",
        "date": "2017-12-22 18:54:39 -0500",
        "subject": "Improve MemContext module.",
        "body": "Add temporary context blocks and refactor allocation arrays to include allocation size."
    },
    {
        "commit": "5ea1263d8e4541405722a0064a133f71be8fedaf",
        "date": "2017-12-22 18:36:36 -0500",
        "subject": "Run valgrind on all C unit tests.",
        "body": "Also refactor code to make valgrind happy."
    },
    {
        "commit": "b00c6d86b3020bb2babdd6d1c77c7ffd61594862",
        "date": "2017-12-19 20:27:31 -0500",
        "subject": "Merge 1.27 release notes."
    },
    {
        "commit": "70e38a2bd6cad0697128a637f471ec39f1d50c1b",
        "date": "2017-12-19 19:14:16 -0500",
        "subject": "Deploy historical documentation to prior rather than the root directory."
    },
    {
        "commit": "9fe265d24c55caa4cc7f67cc65e3ee36cf35bd7d",
        "date": "2017-12-19 17:03:17 -0500",
        "subject": "No longer run master branch through CI.",
        "body": "The integration branch will be run through CI and then pushed to master with github status checks."
    },
    {
        "commit": "c34a76690fbceb8f7289c23206a9c9fcbe874c17",
        "date": "2017-12-19 15:39:39 -0500",
        "subject": "Fixed info command to eliminate \"db (prior)\" output if no backups or archives exist for a prior version of the cluster.",
        "body": "Fixed by Cynthia Shang.\nReported by Stephen Frost."
    },
    {
        "commit": "717a14754202b8662fbec5356ce825fd293bb6c8",
        "date": "2017-12-18 18:55:15 -0500",
        "subject": "Update command-line help from commits 58b08930 and 0bfda1a9."
    },
    {
        "commit": "ef3ef85c33ac871a4910267b34757e8fcbb7e59c",
        "date": "2017-12-18 18:51:19 -0500",
        "subject": "Fixed an issue where WAL was not expired on PostgreSQL 10.",
        "body": "This was caused by a faulty regex that expected all PostgreSQL major versions to be X.X."
    },
    {
        "commit": "3cc367185e1a9bec69954895ecb6ae9d54c8d71f",
        "date": "2017-12-15 11:12:37 -0500",
        "subject": "Add documentation for command-line negation."
    },
    {
        "commit": "41f5b2cec2e065b8a9ed9245c5338772ad7e77d8",
        "date": "2017-12-14 15:44:06 -0500",
        "subject": "All clusters in the documentation are initialized with checksums."
    },
    {
        "commit": "e5511d0f82839cd8a13d938e4035ffada872067a",
        "date": "2017-12-13 11:16:27 -0500",
        "subject": "Improve check command to verify that the backup manifest can be built.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "0bfda1a908edd1ca4990a330ba2dcec7260ccd02",
        "date": "2017-12-11 07:48:30 -0500",
        "subject": "Document the relationship between the archive-copy and archive-check options.",
        "body": "Suggested by Markus Nullmeier."
    },
    {
        "commit": "58b0893067fe33fbeb1e23eb96e080c2d5a9b8ba",
        "date": "2017-12-11 07:31:30 -0500",
        "subject": "Improve archive-copy reference documentation."
    },
    {
        "commit": "99a072163192e7546632119df89511a173d9048e",
        "date": "2017-12-05 15:23:32 -0500",
        "subject": "Allow any non-boolean, non-command-line option to be negated.",
        "body": "This allows specific options in pgbackrest.conf to be ignored (and set to default) which reduces the need to write new configuration files for specific needs.\n\nNote that boolean, non-command-line options are already negatable."
    },
    {
        "commit": "c5fc88d34097ba03cd4fce3fbfce1f4c337b83e6",
        "date": "2017-12-05 14:59:09 -0500",
        "subject": "Fixed an issue that suppressed locality errors for backup and restore.",
        "body": "When a backup host is present, backups should only be allowed on the backup host and restores should only be allowed on the database host unless an alternate configuration is created that ignores the remote host."
    },
    {
        "commit": "5eb5d94d65ee159605273b57e504652c980c9cc7",
        "date": "2017-12-05 14:46:52 -0500",
        "subject": "Allow internal options that do not show up in the documentation.",
        "body": "Used for test options initially but other use cases are on the horizon."
    },
    {
        "commit": "8d4674031e63d7a3c0bfc07f2524551dcf1474de",
        "date": "2017-12-05 10:09:07 -0500",
        "subject": "More config parsing in C in preparation for all config parsing in C."
    },
    {
        "commit": "4f1725dc3684233b444d6d0c0efe6bce6468a623",
        "date": "2017-12-05 09:45:51 -0500",
        "subject": "Replace cfgCommandTotal()/cfgOptionTotal() functions with constants.",
        "body": "The constants are applicable in more cases and allow the compiler to optimize certain loops more efficiently."
    },
    {
        "commit": "59fd92fdd5c39f0c48897513a2d01205efa278e4",
        "date": "2017-12-03 17:08:49 -0500",
        "subject": "Move restore test infrastructure to HostBackup.pm.",
        "body": "Required to test restores on the backup server, a fairly common scenario.\n\nImprove the restore function to accept optional parameters rather than a long list of parameters. In passing, clean up extraneous use of strType and strComment variables."
    },
    {
        "commit": "915ae5662abc9a0e31e03d56bf27b739ed8b263b",
        "date": "2017-11-28 21:44:05 -0500",
        "subject": "Implement version command in C."
    },
    {
        "commit": "bd74711ceb1d3faf49f0349d4dbef4f4cd8434ba",
        "date": "2017-11-28 11:44:24 -0500",
        "subject": "Add unit tests for the Manifest module.",
        "body": "Also minor changes to Manifest module, mostly for test reproducibility."
    },
    {
        "commit": "4a0eb6863d3517151fdec6b450bac2fa2c7ddfb4",
        "date": "2017-11-27 22:16:24 -0500",
        "subject": "Sync time to prevent build failures when running on VirtualBox."
    },
    {
        "commit": "332861c6c95966b38b457b785c2a8db39d205648",
        "date": "2017-11-27 21:19:59 -0500",
        "subject": "Only build C binary/library for Perl unit/integration tests."
    },
    {
        "commit": "2ed426a70b5659cbf1628eb4aaf8c7994580ea63",
        "date": "2017-11-27 20:43:44 -0500",
        "subject": "Remove deprecated archive-max-mb option."
    },
    {
        "commit": "c5ea53bcf9a07cd07bb077a5764b3cc164e8424b",
        "date": "2017-11-27 16:02:49 -0500",
        "subject": "Add coding standards document."
    },
    {
        "commit": "74d6398ad2a893b1413c8202814c6284846087da",
        "date": "2017-11-26 18:43:51 -0500",
        "subject": "The pgbackrest executable is now a C binary instead of Perl.",
        "body": "This allows certain time-critical commands (like async archive-push) to run more quickly."
    },
    {
        "commit": "4d8ad4ac18498835107a26f1a442429ac9dcf50c",
        "date": "2017-11-26 18:23:11 -0500",
        "subject": "Add List and StringList objects to simplify list handling."
    },
    {
        "commit": "1b3e8e0a5bd8a343a78ecfb51f78d22b405b9a9f",
        "date": "2017-11-26 17:49:10 -0500",
        "subject": "Add String object to simplify string handling."
    },
    {
        "commit": "7cf955425ef998ba198f9668f69c2052c089dcd8",
        "date": "2017-11-26 17:45:00 -0500",
        "subject": "The C library is now required.",
        "body": "This eliminates conditional loading and eases development of new library features."
    },
    {
        "commit": "c164fc5fb906d73fcc4d5dcfd960d62caa57effb",
        "date": "2017-11-26 12:22:50 -0500",
        "subject": "Add memGrowRaw() to memory context module."
    },
    {
        "commit": "c360ca5a08ecd812610a0a26414e650da6b4b50e",
        "date": "2017-11-25 20:32:35 -0500",
        "subject": "Split \"refactor\" sections into \"improvements\" and \"development\" in the release notes.",
        "body": "Many development notes are not relevant to users and simply clutter the release notes, so they are no longer shown on the website."
    },
    {
        "commit": "13893a97313757162e061b855bbd494abdbec8ce",
        "date": "2017-11-21 19:52:56 -0500",
        "subject": "Relax permissions set by release.pl."
    },
    {
        "commit": "ba6b49ecb7226e5dab0990403afa6f8878048e35",
        "date": "2017-11-21 18:31:54 -0500",
        "subject": "v1.26: Repository Encryption"
    },
    {
        "commit": "033dbcdc208657e3569c0197ec98e9ff1a052ff1",
        "date": "2017-11-21 17:59:30 -0500",
        "subject": "Update release.pl to push data to site repository."
    },
    {
        "commit": "ac54aac448e1ed84f6d083fcf95158619d729be3",
        "date": "2017-11-21 13:17:44 -0500",
        "subject": "Fixed an issue passing parameters to remotes.",
        "body": "When more than one db was specified the path, port, and socket path would for db1 were passed no matter which db was actually being addressed."
    },
    {
        "commit": "c77fc1fa61582e1983324e7caa5b573fc0eae5e8",
        "date": "2017-11-21 12:57:00 -0500",
        "subject": "Refactor protocol param generation into a new function.",
        "body": "This allows the code to be tested more precisely and doesn't require executing a remote process."
    },
    {
        "commit": "062e714307de357ae49bcac8c48e397b1debfa0f",
        "date": "2017-11-21 09:31:15 -0500",
        "subject": "Disable gzip filter when --compress-level-network=0.",
        "body": "The filter was used with compress level set to 0 which added overhead without any benefit."
    },
    {
        "commit": "1da63aff07de90cd7734b5afd2674b1452c59cf3",
        "date": "2017-11-20 12:46:35 -0500",
        "subject": "Fixed an issue with invalid backup groups being set correctly on restore.",
        "body": "If the backup cannot map a group to a name it stores the group in the manifest as false then uses either the owner of $PGDATA to set the group during restore or failing that the group of the current user. This logic was not working correctly because the selected group was overwriting the user on restore leaving the group undefined and the user incorrectly set to the group. (Reported by Jeff McCormick.)"
    },
    {
        "commit": "8ccfaa9ad366802525cbf1053af2226f2789b493",
        "date": "2017-11-20 09:05:55 -0500",
        "subject": "Designate a single distro (Ubuntu 16.04) for C coverage testing",
        "body": "Enable optimizations on the distros that don't do coverage testing."
    },
    {
        "commit": "deae0b8cd7ec102babf584698b15e73a7822283c",
        "date": "2017-11-20 08:58:47 -0500",
        "subject": "Refactor C page checksum unit test to compile with -Wstrict-aliasing."
    },
    {
        "commit": "5d741ea9a9993397bd7aa6602ff8562302d82c8e",
        "date": "2017-11-19 16:46:31 -0500",
        "subject": "Refactor C unit test macros so they compile with -Wstrict-aliasing."
    },
    {
        "commit": "3b43047e0d40ea7e00049df77d20f26498c89be1",
        "date": "2017-11-19 16:44:33 -0500",
        "subject": "Disable -Wclobber compiler warning.",
        "body": "...because it is mostly useless but keep the rest of of -Wextra."
    },
    {
        "commit": "dc1a5c18acfef55f8d4cdfa21e9543975070b373",
        "date": "2017-11-19 16:30:23 -0500",
        "subject": "Wrap try in a do...while loop to make sure that no random else is attached to the main if block."
    },
    {
        "commit": "9395ad7043d4d7ef8a687e0baa5d25e98d553112",
        "date": "2017-11-18 22:49:43 -0500",
        "subject": "Improve base64 implementation.",
        "body": "Different encoded strings could be generated based on compiler optimizations. Even though decoding was still successful the encoded strings did not match the standard."
    },
    {
        "commit": "500d6b4b66fab197ae39db2d3f79a3e7ef29f66c",
        "date": "2017-11-18 20:14:14 -0500",
        "subject": "Automated tests for 32-bit i386/i686 architecture."
    },
    {
        "commit": "8a3425ec04fea8c0876df0420d5dd3e318812c4e",
        "date": "2017-11-18 20:02:54 -0500",
        "subject": "Automate generation of WAL and pg_control test files.",
        "body": "The existing static files would not work with 32-bit or big-endian systems so create functions to generate these files dynamically rather than creating a bunch of new static files."
    },
    {
        "commit": "b701cd5a5f43ffd5b39df5298bd66ea886dedbdd",
        "date": "2017-11-18 19:53:41 -0500",
        "subject": "Designate a single distro (Ubuntu 16.04) for Perl coverage testing.",
        "body": "Running coverage testing on multiple distros takes time but doesn't add significant value. Also ensure that the distro designated to run coverage tests is one of the default test distros."
    },
    {
        "commit": "6ef2167e972039e67668d7f7700aab505d0ea595",
        "date": "2017-11-16 17:18:51 -0500",
        "subject": "Fixed an issue retrieving WAL for old database versions.",
        "body": "After a stanza-upgrade it should still be possible to restore backups from the previous version and perform recovery with archive-get. However, archive-get only checked the most recent db version/id and failed.\n\nAlso clean up some issues when the same db version/id appears multiple times in the history.\n\nFixed by Cynthia Shang.\nReported by Clinton Adams."
    },
    {
        "commit": "550d4fb9c591a269253a675f6f3585a777ea9b33",
        "date": "2017-11-16 16:53:49 -0500",
        "subject": "Fix incorrect WAL offset for 32-bit architectures.",
        "body": "Fixed by Javier Wilson."
    },
    {
        "commit": "1cb11a582de59480af3a5f656dbb0ec3da14e854",
        "date": "2017-11-15 13:17:57 -0500",
        "subject": "Fix flapping protocol timeout test.",
        "body": "It only matters that the correct error code is returned, so disable logging to prevent message ordering from failing the expect test."
    },
    {
        "commit": "bc8543494a07ef126b0d223e7a90da22a26389e8",
        "date": "2017-11-15 11:59:27 -0500",
        "subject": "Add template to improve initial information gathered for issue submissions.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "22fe684b1fe213df6c9a74a7c0bec4aa6eed3837",
        "date": "2017-11-14 17:16:39 -0500",
        "subject": "Only check expect logs on CentOS 7.",
        "body": "Variations in distros cause false negatives in tests but don't add much value."
    },
    {
        "commit": "3ee269c0998ea3bbf96ccbcc04857ba6b9789146",
        "date": "2017-11-14 17:07:22 -0500",
        "subject": "Add encryption to features list."
    },
    {
        "commit": "b8746f368dbd76eee19e4c3fecc6853696be1908",
        "date": "2017-11-14 15:12:31 -0500",
        "subject": "Inflate performance improvement for gzip filter and full unit test coverage."
    },
    {
        "commit": "04e55fe71bea32b2666df59a9891362ea6717964",
        "date": "2017-11-14 14:48:44 -0500",
        "subject": "Fixed an issue that could cause copying large manifests to fail during restore.",
        "body": "Reported by Craig A. James."
    },
    {
        "commit": "cf7da546a3b7c1395faf2958f45572f82fe0127a",
        "date": "2017-11-13 21:22:13 -0500",
        "subject": "Simplify try..catch..finally names."
    },
    {
        "commit": "bcdfc7d0b52dc92ae22aef1c93bbfda7e6fa24f3",
        "date": "2017-11-06 22:55:34 -0500",
        "subject": "Enable additional warnings for C builds."
    },
    {
        "commit": "b03c26968a2817df33b60c8240cbe2c037281783",
        "date": "2017-11-06 12:51:12 -0500",
        "subject": "Repository encryption support.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "f07d2a3d0dbfa7ea510e41a9ea66265b46db1158",
        "date": "2017-11-06 12:40:54 -0500",
        "subject": "Add eof to S3 file driver (required for encryption support)."
    },
    {
        "commit": "8d6a08a32b1221db5b6eae0db615731d19754bc8",
        "date": "2017-11-03 13:57:58 -0400",
        "subject": "Library code for repository encryption support."
    },
    {
        "commit": "ac542788da8264e39b3f3d817535df918f65a342",
        "date": "2017-11-02 08:14:13 -0400",
        "subject": "Convert configuration definitions from auto-generated functions to auto-generated data structures."
    },
    {
        "commit": "2be93036f1c8de73414650fd6c6710e2f2b9fc73",
        "date": "2017-10-30 14:18:05 -0400",
        "subject": "Clarify usage of the archive-timeout option.",
        "body": "Also describe how it is distinct from the PostgreSQL archive_timeout setting."
    },
    {
        "commit": "55f68ef0136362be1ee8dbe3dabd1b3132e485d1",
        "date": "2017-10-30 10:58:04 -0400",
        "subject": "Remove configurable option hints.",
        "body": "db-path was the only option with a hint so the feature seemed wasteful. All missing stanza options now output the same hint without needing configuration."
    },
    {
        "commit": "1ef27ec8c2273fce99685c9354a6778d14a54792",
        "date": "2017-10-30 10:50:35 -0400",
        "subject": "Add list type for options.",
        "body": "The hash type was being used for lists with an additional flag (`value-hash`) to indicate that it was not really a hash."
    },
    {
        "commit": "f57e376c4489cba94b5dba443e6421b085ef9ea4",
        "date": "2017-10-30 09:29:46 -0400",
        "subject": "Update Debian/Ubuntu containers to download lastest version of pip."
    },
    {
        "commit": "85b35f30a4a4ea07e92ad5ded6ce73bc2937f0ef",
        "date": "2017-10-24 17:36:21 -0400",
        "subject": "v1.25: S3 Performance Improvements"
    },
    {
        "commit": "8674a4f7aea3bea2db7e92be599c034170b81706",
        "date": "2017-10-24 12:35:36 -0400",
        "subject": "Allow functions with sensitive options to be logged at debug level with redactions.",
        "body": "Previously, functions with sensitive options had to be logged at trace level to avoid exposing them. Trace level logging may still expose secrets so use with caution."
    },
    {
        "commit": "b2cc65d886a5c1fe4845f655c53b0c809beefb72",
        "date": "2017-10-24 10:35:42 -0400",
        "subject": "Improve performance of test code.",
        "body": "Wait when all tests have been assigned to reduce CPU load."
    },
    {
        "commit": "d989cf8ac21e0978174cc94747965743f252a45d",
        "date": "2017-10-22 19:07:17 -0400",
        "subject": "Replace dynamically built class hierarchies in I/O layer with fixed parent() calls."
    },
    {
        "commit": "d82fe88031a3c9ca88bd70652bc4f9fc0e12d4bf",
        "date": "2017-10-22 18:05:46 -0400",
        "subject": "Fix custom settings for compress-level option being ignored.",
        "body": "Reported by Jens Wilke."
    },
    {
        "commit": "3553ccae449b7b9ad71290234e55c57d9c9455a5",
        "date": "2017-10-22 13:27:47 -0400",
        "subject": "Add I/O performance tests."
    },
    {
        "commit": "9b98c2e7d6492b626267ffa0c50c67922dd43bda",
        "date": "2017-10-22 13:11:03 -0400",
        "subject": "Run all tests on tempfs rather than local disk."
    },
    {
        "commit": "e1cb9ae86a596d0c1e833ba60730e65805c4ef4f",
        "date": "2017-10-21 14:40:14 -0400",
        "subject": "Improve labeling for errors in helper processes."
    },
    {
        "commit": "44c7c0475ad30873075751ea23083861fe53278a",
        "date": "2017-10-21 14:11:33 -0400",
        "subject": "Improve protocol error handling.",
        "body": "In particular, \"stop\" errors are no longer reported as \"unexpected\"."
    },
    {
        "commit": "1f120f3fce1f8f30739a0cc178e8eea2053fd2f2",
        "date": "2017-10-20 14:10:16 -0400",
        "subject": "Improve performance of list requests on S3.",
        "body": "Any beginning literal portion of a filter expression is used to generate a search prefix which often helps keep the request small enough to avoid rate limiting."
    },
    {
        "commit": "f4524aeaa92baf2cdae2125c87661036e2bdc0a0",
        "date": "2017-10-18 11:14:26 -0400",
        "subject": "Add base64 encode/decode."
    },
    {
        "commit": "2d56de00fcb04f2f949c1855f68cbeee25cdee6f",
        "date": "2017-10-18 08:42:32 -0400",
        "subject": "Fix instances where database-id was not rendered as an integer in JSON info output.",
        "body": "Fixed by Cynthia Shang.\nReported by Jason O'Donnell."
    },
    {
        "commit": "b1efd598cfe82c02db1a5943cd900dfc4be28e05",
        "date": "2017-10-16 18:21:47 -0400",
        "subject": "Add PostgreSQL versions to Debian VMs for testing."
    },
    {
        "commit": "c94e52f697cdae67c35fe8cb0f95088029231b95",
        "date": "2017-10-16 14:34:44 -0400",
        "subject": "Remove error when overlapping timelines are detected.",
        "body": "Overlapping timelines are valid in many Point-in-Time-Recovery (PITR) scenarios."
    },
    {
        "commit": "583a76f605cd49d03fe2fe4a756e7de08966a62d",
        "date": "2017-10-16 11:25:49 -0400",
        "subject": "Add C memory contexts."
    },
    {
        "commit": "6f5186f9e620693815133dc1444c0b627a3ab6a1",
        "date": "2017-10-16 11:13:51 -0400",
        "subject": "Convert config tests into C unit tests."
    },
    {
        "commit": "9d78948a14b20813201b5bf7f21e3525577aa7dc",
        "date": "2017-10-16 11:03:06 -0400",
        "subject": "Improvements to page checksum module and tests:",
        "body": "* Page checksum module uses new C error handler.\n* Convert page checksum tests into C unit tests."
    },
    {
        "commit": "80758f002311dd58497f95a5fd9a8f9de92920e8",
        "date": "2017-10-16 10:54:35 -0400",
        "subject": "Add test macros for C results and errors."
    },
    {
        "commit": "904b83747cd8140aa64a0eb2ac598cc8c1cf310b",
        "date": "2017-10-16 10:47:31 -0400",
        "subject": "Perl error handler recognizes errors thrown from the C library."
    },
    {
        "commit": "f1e739b4aa85f4b57613b8191e29c2abd303ed8e",
        "date": "2017-10-16 10:09:56 -0400",
        "subject": "Add C error handler.",
        "body": "Basic try ... catch ... finally pattern to simplify error handling in C."
    },
    {
        "commit": "10dfbd90b5c3af6ebb6c651760d2d62ced738b84",
        "date": "2017-10-12 12:55:48 -0400",
        "subject": "Add C unit test infrastructure."
    },
    {
        "commit": "08d6f14603e7248dd7cc865129527963d9e3df49",
        "date": "2017-10-10 18:21:44 -0400",
        "subject": "Add LibC.template.pm to simplify LibC module generation."
    },
    {
        "commit": "abea4d1fd5f8cd2a8e0c8625dbb3d700b5317cc7",
        "date": "2017-10-05 12:33:13 -0400",
        "subject": "Remove Debian test repo after PostgreSQL 10 release."
    },
    {
        "commit": "d89b7d5862201051732274f622742888dbf09315",
        "date": "2017-09-30 10:48:25 -0400",
        "subject": "Warnings in C builds treated as errors."
    },
    {
        "commit": "8efcc38304dae4e224ae1ac0211ed03691ae5c8a",
        "date": "2017-09-30 10:44:03 -0400",
        "subject": "Improvements in C codebase:",
        "body": "* Update C naming conventions.\n* Use int datatype wherever possible.\n* Better separation of C source from Perl interface."
    },
    {
        "commit": "d0bf946857d73dcca2ce2a7bf0b78fd8aee2a19b",
        "date": "2017-09-28 19:06:41 -0400",
        "subject": "v1.24: New Backup Exclusions"
    },
    {
        "commit": "40a85e34f1b12620b5520f620779396b7ead525a",
        "date": "2017-09-20 19:57:05 -0400",
        "subject": "Improve C library smart build.",
        "body": "Ignore changes outside of /lib/pgBackRest/Config."
    },
    {
        "commit": "4d6c56b4d76572f5a45a45ca8f55ddc269d2d6d1",
        "date": "2017-09-20 08:08:36 -0400",
        "subject": "Open log file after async process is completely separated from the main process.",
        "body": "This prevents the main process from also logging to the file."
    },
    {
        "commit": "266c9ddcc12c377dd2b3d90b79468eaa6c22f101",
        "date": "2017-09-19 10:14:18 -0400",
        "subject": "Fixed an issue where some db-* options (e.g. db-port) were not being passed to remotes."
    },
    {
        "commit": "c857015a38edd6db641987f8084930f59cfb9309",
        "date": "2017-09-19 10:03:53 -0400",
        "subject": "Fixed an issue where warnings were being emitted in place of lower priority log messages during backup from standby initialization."
    },
    {
        "commit": "d36c52271f994fc6332c40c9a101f9451ccb7266",
        "date": "2017-09-17 15:52:19 -0400",
        "subject": "Break up LibC.xs into separate module files."
    },
    {
        "commit": "20af8ecf505f3b8b490dfb76969d5e39dabf0362",
        "date": "2017-09-17 14:49:23 -0400",
        "subject": "Dynamically generate list of files for C library build."
    },
    {
        "commit": "7c95a2f4de43905bc7b22afbc8d70432156bc033",
        "date": "2017-09-08 21:50:00 -0700",
        "subject": "Updates to installation documentation.",
        "body": "* Add trusted SSH configuration.\n* Add full installation where required and remove doc containers that included parts of the installation."
    },
    {
        "commit": "4bcef7020ee25104b687580a7089a06d4b597cf8",
        "date": "2017-09-07 10:59:40 -0700",
        "subject": "Rename master to primary in documentation to align with PostgreSQL convention."
    },
    {
        "commit": "6343fdd5846ef05d9f4883d8ffd09e0b47f744ce",
        "date": "2017-09-04 08:26:57 -0400",
        "subject": "Additional backup exclusions.",
        "body": "* Exclude contents of pg_snapshots, pg_serial, pg_notify, and pg_dynshmem from backup since they are rebuilt on startup.\n* Exclude pg_internal.init files from backup since they are rebuilt on startup."
    },
    {
        "commit": "df1ec0aaeb02fb1359f5f893dad8af06c2e05eeb",
        "date": "2017-09-03 17:42:00 -0400",
        "subject": "v1.23: Multiple Standbys and PostgreSQL 10 Support"
    },
    {
        "commit": "eea2ccc3ab52ee588d6f894d291931bd9aa52147",
        "date": "2017-09-03 16:48:41 -0400",
        "subject": "Add HTTP retries to harden against transient S3 network errors."
    },
    {
        "commit": "80e5e8db01b97ad7878817152d2a9a933d59d415",
        "date": "2017-09-01 19:16:57 -0400",
        "subject": "Increase HTTP timeout for S3."
    },
    {
        "commit": "75511d24813266b87a7b65e25141f2fd6b1dd78a",
        "date": "2017-09-01 15:07:20 -0400",
        "subject": "Allow content-length (in addition to chunked encoding) when reading XML data to improve compatibility with third-party S3 gateways.",
        "body": "Suggested by Victor Gdalevich."
    },
    {
        "commit": "fcb7c6fd1d0f37ed371079537b95899eaac44812",
        "date": "2017-09-01 12:29:34 -0400",
        "subject": "PostgreSQL 10 support."
    },
    {
        "commit": "36e576b4839d5d9323597014d6f478def7308d9e",
        "date": "2017-08-31 19:15:44 -0400",
        "subject": "Up to seven standbys can be configured for backup from standby.`",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "206415d4c754053275666bfcc0eb138f39884c21",
        "date": "2017-08-30 16:34:05 -0400",
        "subject": "Fixed an issue that could cause compression to abort on growing files.",
        "body": "Reported by Jesper St John, Aleksandr Rogozin."
    },
    {
        "commit": "81ffd094455fb006993a3b9e65c801c127454dc7",
        "date": "2017-08-30 08:41:46 -0400",
        "subject": "Fixed an issue with keep-alives not being sent to the remote from the local process.",
        "body": "Reported by William Cox."
    },
    {
        "commit": "1e0ed074555df7d9079fdf52c4b6b5b049b6d155",
        "date": "2017-08-25 16:47:47 -0400",
        "subject": "Configuration rules are now pulled from the C library when present."
    },
    {
        "commit": "8d3436bce775845d45eaf8b55e526ad784e54e0f",
        "date": "2017-08-19 09:02:24 -0400",
        "subject": "Merge release 2 container build changes."
    },
    {
        "commit": "7dab459cacd9e1b5934294176e5929a86f7b48de",
        "date": "2017-08-19 08:48:13 -0400",
        "subject": "Simplified smart logic for C Library and package builds."
    },
    {
        "commit": "1be69d5ac71db241f0c41bf28c4c36c5cc0b32c4",
        "date": "2017-08-16 16:54:35 -0400",
        "subject": "Fixed document generation to include section summaries on the Configuration page.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "1d2b08ce94d31e2d0a19cb7f489d73e2e04700d2",
        "date": "2017-08-11 18:43:21 -0400",
        "subject": "Move contributor list to the end of release.xml for convenience."
    },
    {
        "commit": "4c2c612b6f68001b2cf0ccd29b02648f0f11ae8c",
        "date": "2017-08-11 18:38:40 -0400",
        "subject": "Ignore auto-generated C code created by release 2."
    },
    {
        "commit": "4331e09376a124e597c4a0e8e4c9641239f8f64e",
        "date": "2017-08-11 18:31:25 -0400",
        "subject": "Drain stderr during test process execution as well as termination to prevent lockups if there is a lot of output."
    },
    {
        "commit": "f8de73674c5e97bd7103a4892ce4d17cc12d1173",
        "date": "2017-08-10 20:52:29 -0400",
        "subject": "Updated Docker build in Vagrantfile."
    },
    {
        "commit": "ac1574448e8b6e2a6b6c3690f3998aac35e4d40d",
        "date": "2017-08-10 18:11:29 -0400",
        "subject": "Changed log test order to ignore unimportant log errors while shutting down PostgreSQL."
    },
    {
        "commit": "84caca0f341982d7d61d1c310faf5c6a3a601a48",
        "date": "2017-08-09 11:50:02 -0400",
        "subject": "v1.22: Fixed S3 Retry"
    },
    {
        "commit": "61c38f58085ebe5ad769bf5937c41793deafc884",
        "date": "2017-08-09 11:27:09 -0400",
        "subject": "Fixed authentication issue in S3 retry."
    },
    {
        "commit": "cbc026418cdc03bbe645a3c44ccf9e40435c62ca",
        "date": "2017-08-08 18:09:07 -0400",
        "subject": "v1.21: Improved Info Output and SSH Port Option"
    },
    {
        "commit": "038d47bcc05d3de5b377c330576bcc76648ccb8b",
        "date": "2017-08-08 17:15:01 -0400",
        "subject": "Retry when S3 returns an internal error (500)."
    },
    {
        "commit": "961f7033d1f82f279e02500506a255c58064fe55",
        "date": "2017-08-08 16:26:44 -0400",
        "subject": "Generate global fake cert in containers for testing."
    },
    {
        "commit": "b6da509c9f909bcbd1c76b6b920b78e5945b9d1e",
        "date": "2017-08-04 16:10:51 -0400",
        "subject": "Consolidate stanza-create and stanza-upgrade tests into new stanza test.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "f9bdc092bac8cdfe1c7145c0adf1123ae2ea6dd1",
        "date": "2017-08-04 16:03:55 -0400",
        "subject": "Fixed an issue that could cause the empty archive directory for an old PostgreSQL version to be left behind after a stanza-upgrade.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "ce2b18c5b84c506606861010331965ad503af48a",
        "date": "2017-08-01 10:34:53 -0400",
        "subject": "Added --backup-ssh-port and --db-ssh-port options to support non-default SSH ports.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "fa992433da396f8fe3a3c49dfd539d4dd6c54ae1",
        "date": "2017-07-27 11:31:42 -0400",
        "subject": "Update CI code to prevent deprecated VM from being rewritten."
    },
    {
        "commit": "cf3110b0d896c75db775f6b2296c704a54d61142",
        "date": "2017-07-26 19:22:54 -0400",
        "subject": "Use new Travis Trusty image."
    },
    {
        "commit": "14d6974d1b54977ab678d0967c6fa8275b0959c7",
        "date": "2017-07-26 13:40:09 -0400",
        "subject": "Use Google DNS in test environment for consistency."
    },
    {
        "commit": "97c4d9ec1874fa2acbb33d6442d62089be07786b",
        "date": "2017-07-26 10:22:22 -0400",
        "subject": "Reduce log verbosity in doc.pl.",
        "body": "Reduce verbosity by only logging sections that contain an execute list directly or in a child section."
    },
    {
        "commit": "df7d63368396c1030e178621136f0b304f970987",
        "date": "2017-07-26 09:33:10 -0400",
        "subject": "Improvements to command/command-line help:",
        "body": "* Move repository options into a separate section in command/command-line help. (Suggested by Stephen Frost.)\n* Fix description of --online based on the command context.\n* Remove vestigial repository options from backup command."
    },
    {
        "commit": "156fd4d54d2387767d298dd295518f847788f845",
        "date": "2017-07-25 12:44:38 -0400",
        "subject": "Add bIgnoreMissing parameter to Local->manifest()."
    },
    {
        "commit": "49449feab3d13fa6aedd5271d60e55f3720e8f08",
        "date": "2017-07-24 21:14:42 -0400",
        "subject": "Add creation of /etc/pgbackrest.conf to manual installation instructions."
    },
    {
        "commit": "cbb749e12a6c752d9172d7038f3f683c84d50d03",
        "date": "2017-07-24 21:12:05 -0400",
        "subject": "Debian/Ubuntu documentation now builds on Ubuntu 16."
    },
    {
        "commit": "d5c1f02c7289284cb0cd7bd5c79e9e6a2dc8fb69",
        "date": "2017-07-24 07:57:47 -0400",
        "subject": "Include archive_status directory in online backups.",
        "body": "The archive_status directory is now recreated on restore to support PostgreSQL 8.3 which does not recreate it automatically like more recent versions do.\n\nAlso fixed log checking after PostgreSQL shuts down to include FATAL messages and disallow immediate shutdowns which can throw FATAL errors in the log."
    },
    {
        "commit": "cda3b9821b83b3cc96ad13b63483499ff5a52e42",
        "date": "2017-07-21 17:32:41 -0400",
        "subject": "Improved WAL data returned by info command.",
        "body": "Modified the info command (both text and JSON output) to display the archive ID and minimum/maximum WAL currently present in the archive for the current and prior, if any, database cluster version."
    },
    {
        "commit": "33d769e14786098b6fa02e666c624531dc7d5bea",
        "date": "2017-06-27 22:42:31 -0400",
        "subject": "v1.20: Critical 8.3/8.4 Bug Fix"
    },
    {
        "commit": "884413b251935aa7c1f82758a34c37664c200b82",
        "date": "2017-06-27 22:27:48 -0400",
        "subject": "Remove mount and user from host cache-key because it can vary by system."
    },
    {
        "commit": "7759a94fa2ac0af8ef037c466808685b091c2cc2",
        "date": "2017-06-27 18:29:48 -0400",
        "subject": "Add Debian 9 to test suite."
    },
    {
        "commit": "9e9286ee205e7202bed7fc0d688e43949c3a687c",
        "date": "2017-06-27 18:00:39 -0400",
        "subject": "Add performance module and basic performance test for archive-push."
    },
    {
        "commit": "9e248a66279eab87c18040917f5bdcd94075e6c2",
        "date": "2017-06-27 17:54:30 -0400",
        "subject": "Minor optimizations to package loads and ordering for archive-get and archive-push commands."
    },
    {
        "commit": "f3b62d2d671592881f5e646b100604020fa52e70",
        "date": "2017-06-27 17:07:12 -0400",
        "subject": "Fixed misleading error message when a file was opened for write in a missing directory."
    },
    {
        "commit": "2310e423e98259838826ccc8093e43668fab061a",
        "date": "2017-06-27 16:47:40 -0400",
        "subject": "Fixed an issue that prevented tablespaces from being backed up on PostgreSQL ≤ 8.4.",
        "body": "The integration tests that were supposed to prevent this regression did not work as intended.  They verified the contents of a table in the (supposedly) restored tablespace, deleted the table, and then deleted the tablespace.  All of this was deemed sufficient to prove that the tablespace had been restored correctly and was valid.\n\nHowever, PostgreSQL will happily recreate a tablespace on the basis of a single full-page write, at least in the affected versions.  Since writes to the test table were replayed from WAL with each recovery, all the tests passed even though the tablespace was missing after the restore.\n\nThe tests have been updated to include direct comparisons against the file system and a new table that is not replayed after a restore because it is created before the backup and never modified again.\n\nVersions ≥ 9.0 were not affected due to numerous synthetic integration tests that verify backups and restores file by file."
    },
    {
        "commit": "fdabf33604cdc5f253187d559b3d4be52c2d843d",
        "date": "2017-06-27 15:58:02 -0400",
        "subject": "Revert removal of Ubuntu 12.04 and PostgreSQL 8.3."
    },
    {
        "commit": "001cff9eb990cf246df42c7d06f5e377da313299",
        "date": "2017-06-27 15:48:34 -0400",
        "subject": "Automatically check that all supported PostgreSQL versions are being tested on a single default VM."
    },
    {
        "commit": "7a1385cc2716de93b7f0388ea2017dfa1a8734a4",
        "date": "2017-06-24 18:04:02 -0400",
        "subject": "Add documentation builds to CI."
    },
    {
        "commit": "7a9b1f69937f5866ab0bc888d700527fda460d47",
        "date": "2017-06-24 10:59:00 -0400",
        "subject": "Container build improvements:",
        "body": "* More optimized container suite that greatly improves build time.\n* Added static Debian packages for Devel::Cover to reduce build time.\n* Add deprecated state for containers. Deprecated containers may only be used to build packages.\n* Remove Debian 8 from CI because it does not provide additional coverage over Ubuntu 14.04 and Ubuntu 16.04."
    },
    {
        "commit": "53184a7b30c7b3000a4be8af90c9419b22fae3e2",
        "date": "2017-06-23 10:30:22 -0400",
        "subject": "Update CentOS 6 documentation to build on PostgreSQL 9.5."
    },
    {
        "commit": "3d224ad8fa54f007032a5a2c6077c004c4d7c395",
        "date": "2017-06-23 10:10:48 -0400",
        "subject": "Improve S3 server implementation in documentation."
    },
    {
        "commit": "eb4325fa9ac8b6e3da6344d561a861651a4b23f9",
        "date": "2017-06-22 19:04:52 -0400",
        "subject": "Remove exhaustive version list from Stable Releases TOC."
    },
    {
        "commit": "a10a22127d025367655037c1ca9fee0dde248e3c",
        "date": "2017-06-22 18:51:39 -0400",
        "subject": "Consolidate archive-get test into new archive test."
    },
    {
        "commit": "918c1c6f490d3097c46e27fa0226c3fa3b08ec9b",
        "date": "2017-06-22 18:22:49 -0400",
        "subject": "Add s3-repo-ca-path and s3-repo-ca-file options.",
        "body": "The options accommodate systems where CAs are not automatically found by IO::Socket::SSL, i.e. RHEL7, or to load custom CAs."
    },
    {
        "commit": "6327799c9ae828a56f7f8686d3e35da2441a6e15",
        "date": "2017-06-22 18:13:59 -0400",
        "subject": "Use old trusty image until new image works with RHEL6."
    },
    {
        "commit": "a1a5d18aa436d50f3dff4e845bad51855168071b",
        "date": "2017-06-22 14:44:21 -0400",
        "subject": "Balance database versions between VMs to minimize test duration."
    },
    {
        "commit": "d3054d919b6efc831c9a5a596496e0be80309bc7",
        "date": "2017-06-22 12:57:10 -0400",
        "subject": "Fixed missing flag in C library build.",
        "body": "The missing flag resulted in a mismatched binary on 32-bit systems."
    },
    {
        "commit": "f8849d735937c16211b0cc905de22088ae467ec6",
        "date": "2017-06-22 12:37:21 -0400",
        "subject": "Remove patch directory before Debian package builds.",
        "body": "Patches should be merged into master before trying a new build after a release with patches."
    },
    {
        "commit": "f596702c5badb5dbd3b15b6c4ee0e54444ab6e8c",
        "date": "2017-06-21 20:46:49 -0400",
        "subject": "Improve S3 error reporting."
    },
    {
        "commit": "8b9965abcb30421157e11ecc5969bcffbbed93a5",
        "date": "2017-06-21 19:21:16 -0400",
        "subject": "Remove process-max option.",
        "body": "Parallelism is now tested in a more targeted manner and the high level option is no longer needed."
    },
    {
        "commit": "234869338913ab411baa33b58f28e8d460c74335",
        "date": "2017-06-21 18:47:25 -0400",
        "subject": "Reduce process redundancy in mock tests."
    },
    {
        "commit": "cc0e3f843e0bf3c4982af6423d07f527cc8fd617",
        "date": "2017-06-21 17:24:36 -0400",
        "subject": "Remove support for PostgreSQL 8.3."
    },
    {
        "commit": "73274fc608d7aa4c93af645a85bcbceb3f276847",
        "date": "2017-06-21 17:02:01 -0400",
        "subject": "Remove Ubuntu 12.04 from CI now that it is EOL (it can still be run manually)."
    },
    {
        "commit": "c69baa2de1ed4d00a87f90634c347e730f3babc3",
        "date": "2017-06-21 16:51:41 -0400",
        "subject": "Install sudo in base containers rather than on demand."
    },
    {
        "commit": "64ec7eb49077421f28dbd3cf889e68fc226a4f3d",
        "date": "2017-06-21 16:07:13 -0400",
        "subject": "Eliminate redundancy in real tests."
    },
    {
        "commit": "edada218660a67bd4e87e8450e2491eb2bb47a5c",
        "date": "2017-06-21 08:45:58 -0400",
        "subject": "Rename archive-push unit test.",
        "body": "This is part of the archive consolidation but is committed separately so that git will follow the rename."
    },
    {
        "commit": "2337be863690c73fc2e141191a3167d959c35263",
        "date": "2017-06-21 08:38:53 -0400",
        "subject": "Consolidate archive-push tests into new archive test."
    },
    {
        "commit": "11ee528e0e11a849612c67dcb297c35c29995c11",
        "date": "2017-06-21 08:02:21 -0400",
        "subject": "Rename Archive modules to remove redundancy."
    },
    {
        "commit": "692b1e274adb9f1f23e3d29d127af521a53a27e9",
        "date": "2017-06-19 18:55:00 -0400",
        "subject": "Split full module into mock and real to allow better test combinations and save time in CI."
    },
    {
        "commit": "f6d4457d58b3f752dadd14c9e341ff86910f72b3",
        "date": "2017-06-15 15:32:10 -0400",
        "subject": "Full/Synthetic test refactor.",
        "body": "* Combine hardlink and non/compressed in synthetic tests to reduce test time and improve coverage.\n* Change log level of hardlink logging to detail.\n* Cast size in S3 manifest to integer."
    },
    {
        "commit": "269ae4556d00da463d43ef95aaa461821e77f4f3",
        "date": "2017-06-15 15:20:02 -0400",
        "subject": "Fix timeouts in ExecuteTest to speed multi-process testing."
    },
    {
        "commit": "6e29f616b347b66c62c36adf019a7a4d42e4bdac",
        "date": "2017-06-15 15:12:28 -0400",
        "subject": "Harden protocol handshake to handle race conditions."
    },
    {
        "commit": "c10c5bb0ef1de519371e1bdae0b9da7cf8670c95",
        "date": "2017-06-12 11:36:00 -0400",
        "subject": "v1.19: S3 Support"
    },
    {
        "commit": "051c961151e75114c59980e9feb883a8d58dc7b0",
        "date": "2017-06-12 10:52:32 -0400",
        "subject": "S3 repository support."
    },
    {
        "commit": "de7fc37f88f670a1b4b4f95ff354384f37d983b1",
        "date": "2017-06-09 17:51:41 -0400",
        "subject": "Storage and IO layer refactor:",
        "body": "Refactor storage layer to allow for new repository filesystems using drivers. (Reviewed by Cynthia Shang.)\nRefactor IO layer to allow for new compression formats, checksum types, and other capabilities using filters. (Reviewed by Cynthia Shang.)"
    },
    {
        "commit": "7e982f05f564e560b6ca23f61365fc7f11a5da36",
        "date": "2017-05-16 11:28:51 -0400",
        "subject": "Fixed config warnings raised from a remote process causing errors in the master process.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "74053ed842a4f3c37ce3fa2c9b6e32b4f5aa36e6",
        "date": "2017-05-16 11:15:31 -0400",
        "subject": "Fixed missing sudo in installation section.",
        "body": "Fixed by Lætitia."
    },
    {
        "commit": "529674727148a7ec6d04ef6bd3ec86f69575f6f2",
        "date": "2017-05-15 16:01:00 -0400",
        "subject": "Move backup modules into Backup directory."
    },
    {
        "commit": "2a23157bf2912bbcdbfe5350ca40ca398cc1001e",
        "date": "2017-05-15 11:12:14 -0400",
        "subject": "Move modules in Protocol directory in subdirectories."
    },
    {
        "commit": "33c87b2a1ccbaf43f56765285ac4918f4b1cdf1c",
        "date": "2017-05-15 10:24:46 -0400",
        "subject": "Remove flapping protocol timeout test that will be replaced in the upcoming storage patch."
    },
    {
        "commit": "c31da3f961b9494cb8f8f351d8a4cf7f22557062",
        "date": "2017-05-12 16:43:04 -0400",
        "subject": "Moved test and env modules to new directories to avoid namespace conflicts with common tests."
    },
    {
        "commit": "4049d59c9e1c4abaa0d96ce0fc307139d1b32a64",
        "date": "2017-05-12 16:27:06 -0400",
        "subject": "Fixed issue with --dry-run requiring --vm-out to work properly."
    },
    {
        "commit": "7d0c50fcd6dd6d7800b53ae2a1abf35f923ec7da",
        "date": "2017-05-12 16:05:44 -0400",
        "subject": "Fixed the backup command so the backup-standby option is reset (and the backup proceeds on the master) if the standby is not configured and/or reachable.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "5bf4f52e3d1ddb3cacb6821080b59e378baf4cb1",
        "date": "2017-05-12 15:49:14 -0400",
        "subject": "Fixed the info command so the WAL archive min/max displayed is for the current database version.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "64be6400fe1f6614c2788e7237e9f75e465fd95f",
        "date": "2017-04-17 06:39:29 -0400",
        "subject": "Changed invalid max-archive-mb option in configuration reference to archive-queue-max."
    },
    {
        "commit": "979610a07d5c201e4e7f93f0540be2b19e4b33a5",
        "date": "2017-04-13 20:10:28 -0400",
        "subject": "Fixed an undefined variable when a module had no uncoverable code exceptions."
    },
    {
        "commit": "77ef4fde20327a6615daaf096930de711fdb4ddf",
        "date": "2017-04-13 07:42:45 -0400",
        "subject": "Set --vm-max=2 for CI."
    },
    {
        "commit": "76161bd8451e581a8f9aa11c1f37d14863585d29",
        "date": "2017-04-12 19:17:39 -0400",
        "subject": "v1.18: Stanza Upgrade, Refactoring, and Locking Improvements"
    },
    {
        "commit": "5c635e0f0a1f5dc8ab8ef8c65204e81d3495afcb",
        "date": "2017-04-12 18:36:33 -0400",
        "subject": "Go back to using static user for documentation.",
        "body": "Making this dynamic in commit 5d2e792 broke doc builds from cache.  The long-term solution is to create a special user for doc builds but that’s beyond the scope of this release."
    },
    {
        "commit": "f207dc71238097a0fded50cc87bb7ef2afb006de",
        "date": "2017-04-12 12:41:34 -0400",
        "subject": "Renumber return codes between 25 and 125 to avoid PostgreSQL interpreting some as fatal signal exceptions.",
        "body": "Suggested by Yogesh Sharma."
    },
    {
        "commit": "f5f8d51366faae6ac31f355d021eaff67bef8f7f",
        "date": "2017-04-12 09:53:07 -0400",
        "subject": "Improved error message when the restore command detects the presence of postmaster.pid.",
        "body": "Suggested by Yogesh Sharma."
    },
    {
        "commit": "b0119914d4633431b208a5a327a3758a06258087",
        "date": "2017-04-12 09:22:51 -0400",
        "subject": "Do not set timestamps of files in the backup directories to match timestamps in the cluster directory.",
        "body": "This was originally done to enable backup resume, but that process is now implemented with checksums."
    },
    {
        "commit": "fe02b40293fec08c819c5f41110203b8919fbae4",
        "date": "2017-04-12 09:05:57 -0400",
        "subject": "Backup and restore commands no longer copy via temp files.",
        "body": "In both cases the files are checksummed on resume so there's no danger of partial copies."
    },
    {
        "commit": "21a000d002bae2fa87cd09952740cbe14770aada",
        "date": "2017-04-10 17:23:39 -0400",
        "subject": "Silence some perl critic warnings.",
        "body": "* Variables::RequireNegativeIndice\n* Variables::ProhibitUnusedVariables\n* Variables::ProhibitAugmentedAssignmentInDeclaration\n* Modules::ProhibitConditionalUseStatements"
    },
    {
        "commit": "8546571461215eb65ffcff649c6baa17bc57d605",
        "date": "2017-04-10 17:20:21 -0400",
        "subject": "Ignore clock skew in container libc/package builds using make.",
        "body": "It is common for containers to have clock skew so the build process takes care of this issue independently."
    },
    {
        "commit": "b63ede5614fed0dce32449f1450b7a5627eeeb3d",
        "date": "2017-04-10 13:53:19 -0400",
        "subject": "Added ability to test warning messages.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "3d84f2ce5e02c5bd7f9bdcbb3b4579b146bf7ccf",
        "date": "2017-04-10 13:24:45 -0400",
        "subject": "Improvements to Ini.pm.",
        "body": "* Refactor Ini.pm to facilitate testing.\n* Complete statement/branch coverage for Ini.pm.\n* Improved functions used to test/munge manifest and info files."
    },
    {
        "commit": "367e06f4be9133f399d4b7380ace8c5ca087c4b6",
        "date": "2017-04-10 12:31:30 -0400",
        "subject": "Coverage testing always enabled on Debian-based containers.",
        "body": "* Full coverage is verified when specified.\n* Modules marked with partial coverage will error if they are actually fully covered.\n* Simplified test representation is DefineTest.\n* Added new representation for queries in DefineTest and added API functions.\n* Update modules using DefineTest to use new API."
    },
    {
        "commit": "eb4918d01881c20448e37da4d931d6e8a19f659a",
        "date": "2017-04-07 10:31:49 -0400",
        "subject": "Fixed locking bug and refactoring.",
        "body": "* Fixed an issue where read-only operations that used local worker processes (i.e. restore) were creating write locks that could interfere with parallel archive-push. (Reported by Jens Wilke.)\n* Simplify locking scheme. Now, only the master process will hold write locks (archive-push, backup) and not all the local and remote worker processes as before."
    },
    {
        "commit": "edfb0962b678a5ebb3021d37d487fafb843dbf2a",
        "date": "2017-04-06 21:47:43 -0400",
        "subject": "Update wording for release note sections."
    },
    {
        "commit": "b620e6b282d3fc0bd1354b9490fbd84ee8d22d6e",
        "date": "2017-04-06 19:36:37 -0400",
        "subject": "Improvements and additional tests for stanza-upgrade.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "0da216c034d484927fa8ad0845e08f25c5227b5a",
        "date": "2017-04-05 10:50:32 -0400",
        "subject": "Require description in every call to testResult() and make iWaitSeconds optional."
    },
    {
        "commit": "c7b61a200258b2f10d1c62f2aedc7441e27bb6b1",
        "date": "2017-04-05 10:16:16 -0400",
        "subject": "Refactor backupLabel() and add unit tests."
    },
    {
        "commit": "b2f43b56014f3d43404a17531887a09a78eb0db1",
        "date": "2017-04-04 21:17:19 -0400",
        "subject": "Allow functions to accept optional parameters as a hash.",
        "body": "Refactor File->list() and fileList() to accept optional parameters."
    },
    {
        "commit": "9eae36a7028a7c08869ec2e7c2f31f0aa49ecb4c",
        "date": "2017-04-04 21:15:22 -0400",
        "subject": "Fixed flapping archive stop tests."
    },
    {
        "commit": "beead043ac1f988e3757dc8689638ee5d443d9f9",
        "date": "2017-04-03 10:42:55 -0400",
        "subject": "Added stanza-upgrade command.",
        "body": "The stanza-upgrade command provides a mechanism for upgrading a stanza after upgrading to a new major version of PostgreSQL."
    },
    {
        "commit": "af7e4f4b4b6070e566865872e5240b824a14983f",
        "date": "2017-03-22 19:03:28 -0400",
        "subject": "Added validation of pgbackrest.conf to display warnings if options are not valid or are not in the correct section.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "5d2e79242da79854ee922c1a84dec0e67d52f090",
        "date": "2017-03-16 19:50:59 -0400",
        "subject": "Fixed user change in docs missed in vagrant upgrade."
    },
    {
        "commit": "cbd879a9830d2585b3df3209f59c4a9581a3c166",
        "date": "2017-03-14 22:05:17 -0400",
        "subject": "Updated vagrant to new version and image."
    },
    {
        "commit": "cc9f8fc4b6cb9a2da5bd7419630c4f3eb1c71186",
        "date": "2017-03-13 16:54:51 -0400",
        "subject": "v1.17: Page Checksum Bug Fix"
    },
    {
        "commit": "b0947fdaa8af9c434c85ff33b1140d8ca6d98cbb",
        "date": "2017-03-13 15:50:13 -0400",
        "subject": "Fixed an issue where newly initialized (but unused) pages would cause page checksum warnings.",
        "body": "Reported by Stephen Frost."
    },
    {
        "commit": "3cec6702e85e901ff3894e047cf5a461562b7b67",
        "date": "2017-03-02 20:15:14 -0500",
        "subject": "v1.16: Page Checksum Improvements, CI, and Package Testing"
    },
    {
        "commit": "02730526fc1a157231293ae532882847f7015a46",
        "date": "2017-03-02 13:50:29 -0500",
        "subject": "Fixed an issue where databases created with a non-default tablespace would raise bogus warnings about pg_filenode.map and pg_internal.init not being page aligned.",
        "body": "Reported by blogh."
    },
    {
        "commit": "5957f8566f1f8cd90964423321660e457fab57b7",
        "date": "2017-03-02 11:47:23 -0500",
        "subject": "Archive test improvements:",
        "body": "* Fixed flapping archive-stop test with testResult() retries.\n* Added final test of archive contents to archive-push test."
    },
    {
        "commit": "5eb585c9bae50e02ac5d53d3e20d0b5083283ac9",
        "date": "2017-03-01 14:38:05 -0500",
        "subject": "Improved truncation when outputting errors logs in the ExecuteTest module."
    },
    {
        "commit": "c2666cc7f365fbd294b36dbcf5b11676bbcbf0d1",
        "date": "2017-03-01 14:15:46 -0500",
        "subject": "Fixed an issue where tables over 1GB would report page checksum errors after the first segment.",
        "body": "Reported by Stephen Frost."
    },
    {
        "commit": "774b243719675a27e0d4f02369df7cb0bdac6524",
        "date": "2017-03-01 12:22:47 -0500",
        "subject": "Fixed dev version string in Debian changelog."
    },
    {
        "commit": "2c48cf8d0d4a4049ffcb8e01549f080bccfcc037",
        "date": "2017-03-01 09:36:33 -0500",
        "subject": "Fixed Vagrantfile to match user/group changes made for Travis CI."
    },
    {
        "commit": "8161ab1c505f811b8aeb8ca33a57133411c4b755",
        "date": "2017-02-26 12:58:48 -0500",
        "subject": "Temporarily disable flapping keep-alive test."
    },
    {
        "commit": "abe0935ea51a78f182549a82b62ca3e1964fe877",
        "date": "2017-02-26 12:53:41 -0500",
        "subject": "Disable CI config writing with —no-ci-config."
    },
    {
        "commit": "ac485cc3552f3b1e35baebaa0140236bf550c6a8",
        "date": "2017-02-22 18:43:10 -0500",
        "subject": "Change —retry default to 0."
    },
    {
        "commit": "31d2d790bd070e2b58a192cb56f6b04cdd307a6f",
        "date": "2017-02-21 22:10:02 -0500",
        "subject": "Added --retry option."
    },
    {
        "commit": "023578c008dec24000c268f29cda25dc2948a86a",
        "date": "2017-02-21 14:22:03 -0500",
        "subject": "Make package tests work with dev builds."
    },
    {
        "commit": "0e9bc513c986140f9bc239dc4b1d3f54c46444a5",
        "date": "2017-02-21 12:54:27 -0500",
        "subject": "Suppress lint on all but the first test."
    },
    {
        "commit": "14ca4dac6fe9ab594c0915486f88ff27f4a5dc7d",
        "date": "2017-02-21 11:56:55 -0500",
        "subject": "Improved the code and tests for fileManifest().",
        "body": "Done to prevent a possible race condition when files are removed by the database while the manifest is being built."
    },
    {
        "commit": "01312f6260e4f36541d90b5f62be1cbbe6847d13",
        "date": "2017-02-21 11:47:45 -0500",
        "subject": "Improved formatting of testResult() output."
    },
    {
        "commit": "86fee3da18e2646705fdac8853ae4153689d6484",
        "date": "2017-02-21 08:59:23 -0500",
        "subject": "Continuous integration using travis-ci."
    },
    {
        "commit": "56543f7a9916b554204572fb015a24a33c0f74f0",
        "date": "2017-02-17 22:31:16 -0500",
        "subject": "Added package builds to test suite and other improvements:",
        "body": "* Automated builds of Debian packages for all supported distributions.\n* Added --dev option to aggregate commonly used dev options.\n* Added --no-package option to skip package builds.\n* C library and packages are built by default, added -smart option to rebuild only when file changes are detected.\n* The --libc-only option has been changed to --build-only now that packages builds have been added."
    },
    {
        "commit": "ac7ff755b3533181f7f26a7140cbdefa1cb68442",
        "date": "2017-02-16 17:18:48 -0500",
        "subject": "Container executions now load the user's environment."
    },
    {
        "commit": "2d7d9626bb60640a77ac71559f2a714a1aac8b94",
        "date": "2017-02-13 20:00:30 -0500",
        "subject": "v1.15: Refactoring and Bug Fixes"
    },
    {
        "commit": "e2ac7e1ea624a1dd0e4c5ac214d3dfc1cdc266ab",
        "date": "2017-02-13 19:59:14 -0500",
        "subject": "Fixed a regression introduced in v1.13 that could cause backups to fail.",
        "body": "This happened if files were removed (e.g. tables dropped) while the manifest was being built."
    },
    {
        "commit": "845c6112bf592fb54b61156b47bbf2ebc5985f29",
        "date": "2017-02-13 10:07:04 -0500",
        "subject": "v1.14: Bug Fixes"
    },
    {
        "commit": "a54018d573926d5d5718727a9f169ad7751577f4",
        "date": "2017-02-13 10:03:02 -0500",
        "subject": "Improved performance of wal archive min/max provided by the info command.",
        "body": "Suggested by Jens Wilke."
    },
    {
        "commit": "adcc7cb9543714b420d429512f259d14ea265acf",
        "date": "2017-02-13 09:58:50 -0500",
        "subject": "Fixed a race condition in parallel archiving.",
        "body": "Creation of new paths generated an error when multiple processes attempted to do so at the same time."
    },
    {
        "commit": "bc2bb040c5bf75cb56ec3fa7a00a993d33371a99",
        "date": "2017-02-13 09:57:10 -0500",
        "subject": "Fixed an issue where an archive-push error would not be retried.",
        "body": "It would instead return errors to PostgreSQL indefinitely (unless the .error file was manually deleted)."
    },
    {
        "commit": "12041f73e2a4f4c91c068b7f43f7ff52f24c72f5",
        "date": "2017-02-12 21:09:34 -0500",
        "subject": "Fixed syntax from d68b48d that was not backwards compatible to Perl 5.10."
    },
    {
        "commit": "d68b48d19b53727bafd55e97cde41db309763daa",
        "date": "2017-02-11 10:26:54 -0500",
        "subject": "Improved support for --require option and section depends now default to the previous section."
    },
    {
        "commit": "498f52da094832d5ffe84ea0eed121acf46f360c",
        "date": "2017-02-10 10:22:05 -0500",
        "subject": "Improvements to documentation engine:",
        "body": "* Documentation can now be built with reusable blocks to reduce duplication.\n* Added ability to pass options to containers within the documentation.\n* Add proper tag to slightly emphasize proper nouns."
    },
    {
        "commit": "aab763d558b586f0ce4f77a8cc67c2c7e9db07eb",
        "date": "2017-02-08 09:37:17 -0500",
        "subject": "Additional notes on the async spool directory."
    },
    {
        "commit": "b813bfaff68fa9d2e1271b3f6fcf61955e24de3e",
        "date": "2017-02-08 08:41:43 -0500",
        "subject": "Updated async archiving documentation.",
        "body": "More accurately describe how the new method works and how it differs from the old method."
    },
    {
        "commit": "41eba95155b1fab4c5f98dab3327c1563968fcab",
        "date": "2017-02-05 20:23:03 -0500",
        "subject": "v1.13: Parallel Archiving, Stanza Create, Improved Info and Check"
    },
    {
        "commit": "0daeace1cd2e2ef55c3df3e43b4b622418fe625b",
        "date": "2017-02-05 19:58:52 -0500",
        "subject": "Fixed alignment issues with multiline logging."
    },
    {
        "commit": "cded35791d160a6fc2f99daaaaabf0db21c9bb38",
        "date": "2017-02-05 10:59:49 -0500",
        "subject": "Added --log-timestamp option.",
        "body": "Allow timestamps to be suppressed in logging. This is primarily used to avoid filters in the automated documentation."
    },
    {
        "commit": "55feae645e92eda928ad0eb5be74431807f3c604",
        "date": "2017-02-05 10:37:54 -0500",
        "subject": "Log file banner is not output until the first log entry is written.",
        "body": "Suggested by Jens Wilke."
    },
    {
        "commit": "2237c3fc1bafd620f5cafda4d38acbfc7b490aa5",
        "date": "2017-02-05 10:35:53 -0500",
        "subject": "Added documentation for parallel archive-push."
    },
    {
        "commit": "8b5f37c2a87b221fe40f1883f6583ee31ad977d7",
        "date": "2017-02-05 10:31:29 -0500",
        "subject": "Added archive and backup WAL ranges to the info command."
    },
    {
        "commit": "1666ee177f059c3566e531fa697cb229eb68c0c4",
        "date": "2017-02-02 20:44:42 -0500",
        "subject": "Fixed --no-online tests to suppress expected errors."
    },
    {
        "commit": "efdf64506ae075cadc24de0805c8238478dfd28f",
        "date": "2017-02-02 20:42:45 -0500",
        "subject": "Remove remote lock requirements for the archive-get, restore, info, and check commands since they are read-only operations.",
        "body": "Suggested by Michael Vitale."
    },
    {
        "commit": "3e54aad88f473db619dc7546cf144c3987224943",
        "date": "2017-01-31 10:38:45 -0500",
        "subject": "Removed --lock option.",
        "body": "This option was introduced before the lock directory could be located outside the repository and is now obsolete."
    },
    {
        "commit": "7418559a6751959727836e462002a14c41461198",
        "date": "2017-01-31 10:36:59 -0500",
        "subject": "Fixed a spurious archive-get log message that indicated an exit code of 1 was an abnormal termination."
    },
    {
        "commit": "9b92edddbe506c3ebaa6f970e62270facdcc5a27",
        "date": "2017-01-30 17:06:35 -0500",
        "subject": "Remove Intel-specific optimization from C library build flags.",
        "body": "Contributed by Adrian Vondendriesch."
    },
    {
        "commit": "eb1a1e53080375d947b94e58f917bc2816528264",
        "date": "2017-01-30 16:22:12 -0500",
        "subject": "Missed expect logs from commit 455c604."
    },
    {
        "commit": "34e4cfaeec473ba1c90f8c203f82b1146510deee",
        "date": "2017-01-30 15:48:10 -0500",
        "subject": "Fixed minor typos."
    },
    {
        "commit": "455c6048ee4794a2d334067e4651460b3ad2b416",
        "date": "2017-01-30 14:00:40 -0500",
        "subject": "C Library builds immune to clock differences between VM and host."
    },
    {
        "commit": "6b99d770b5203680ac53813d9c3c73f476d895bb",
        "date": "2017-01-30 13:59:00 -0500",
        "subject": "Reduced the likelihood of torn pages causing a false positive in page checksums by filtering on start backup LSN."
    },
    {
        "commit": "43ada9fb33b51479b959ea6a93fcb53fa0803e25",
        "date": "2017-01-27 11:02:27 -0500",
        "subject": "Improved, multi-process implementation of asynchronous archiving."
    },
    {
        "commit": "2a9ba877e1dbce234f1b44d8f3163ce38f9c1781",
        "date": "2017-01-27 10:06:16 -0500",
        "subject": "Refactor process IO and process master/minion code out from the common protocol code."
    },
    {
        "commit": "0163d3b3e02f22179f9854246e6f5009e8ff4e40",
        "date": "2017-01-27 10:04:41 -0500",
        "subject": "Allow empty files to be created with FileCommon::fileStringWrite() and use temp files to avoid partial reads."
    },
    {
        "commit": "2553c7a9982f630226923ec14b0f56350607db44",
        "date": "2017-01-27 10:02:00 -0500",
        "subject": "Represent .gz extension with a constant."
    },
    {
        "commit": "f3ccf3b897e9bab58e2ab1f15dabf54fef9b34db",
        "date": "2017-01-27 09:56:26 -0500",
        "subject": "Added Exception::exceptionCode() and Exception::exceptionMessage() to simplify error handling logic."
    },
    {
        "commit": "6620594b7724f5950b20c1c103a2b0fee194e816",
        "date": "2017-01-27 09:53:46 -0500",
        "subject": "Various improvements in Lock.pm:",
        "body": "* Allow for locks to be taken more than once in the same process without error.\n* Lock directories can be created when more than one directory level is required.\n* Clean up optionValid()/optionTest() logic in Lock.pm."
    },
    {
        "commit": "18db178ac3a03540bcaf4bd5c23f6a34ab419f55",
        "date": "2017-01-27 09:42:30 -0500",
        "subject": "Various improvements to the test suite:",
        "body": "* Allow logging to be suppressed via logDisable() and logEnable().\n* Added more flexibility in initializing and cleaning up after modules and tests.\n* testResult() suppresses logging and reports exceptions.\n* testException() allows messages to be matched with regular expressions.\n* Refactor name/locations of common modules that setup test environments."
    },
    {
        "commit": "e876a222fcb68fb4a95455113d3378d5e6b81c7a",
        "date": "2017-01-24 14:58:55 -0500",
        "subject": "Fixed an issue where protocol mismatch errors did not output the expected value."
    },
    {
        "commit": "b6fa146f9b1b9e622f456d73585423538c04ad17",
        "date": "2017-01-22 19:29:56 -0500",
        "subject": "Added warning to update pg_tablespace.spclocation when remapping tablespaces in PostgreSQL < 9.2.",
        "body": "Contributed by blogh."
    },
    {
        "commit": "7d1347cdec4f4c563d5a6fa0a1d66297a2742f0f",
        "date": "2017-01-10 19:59:32 -0500",
        "subject": "Split the archive-get and archive-push commands into separate modules."
    },
    {
        "commit": "155c8081632d1081da8b7e94ebd3a7d422f0f280",
        "date": "2017-01-10 19:54:51 -0500",
        "subject": "Split the check command out of the Archive.pm module."
    },
    {
        "commit": "b58045f5757b03a1e15e1955402917b9003c5692",
        "date": "2017-01-10 19:51:20 -0500",
        "subject": "Moved the Archive modules to the Archive directory."
    },
    {
        "commit": "2ab63f27b23b8932e9685c5179284fddbb6cf49c",
        "date": "2017-01-10 13:12:53 -0500",
        "subject": "C Library builds only run when C library has actually changed."
    },
    {
        "commit": "0b4055e588331ec70d789ced6e5685f54def197b",
        "date": "2017-01-10 13:08:03 -0500",
        "subject": "Moved File->manifest() into the FileCommon.pm module."
    },
    {
        "commit": "0e4f51c27110f2d3eb6f3d1d15dc3f8ac4675e34",
        "date": "2017-01-09 20:49:04 -0500",
        "subject": "Added integration for testing coverage with Devel::Cover."
    },
    {
        "commit": "39744a4f1dbbe4e593bebaa37a6be93dae0da214",
        "date": "2017-01-05 15:19:56 -0500",
        "subject": "Fixed an issue where a missing user/group on restore could cause an \"uninitialized value\" error in File->owner().",
        "body": "Reported by Leonardo Avellar."
    },
    {
        "commit": "4ff2714bf00063534ddf90d4995f9f1abcb60c99",
        "date": "2017-01-04 18:39:50 -0500",
        "subject": "Return proper error code when unable to convert a relative path to an absolute path.",
        "body": "Suggested by Yogesh Sharma."
    },
    {
        "commit": "c8dfc673b87bc04f87e7e3c01f5e227a71f415d8",
        "date": "2017-01-04 18:31:16 -0500",
        "subject": "Moved tests into new modules to better reflect actual usage."
    },
    {
        "commit": "e3d63c0252bfbd0cccb746d405c7e3cdeb8f75c1",
        "date": "2017-01-04 18:29:13 -0500",
        "subject": "Allow multiple --module, --test, and --run options to be used for test.pl."
    },
    {
        "commit": "be337c951aee0121dc3d1a251bdb5218d72769a0",
        "date": "2017-01-04 10:12:29 -0500",
        "subject": "Improvements to stanza-create:",
        "body": "* Force only required when a change is needed for backup.info or archive.info.\n* Identical files are not overwritten."
    },
    {
        "commit": "b91ca113298104a3c718db93a1dad0fa7336c8c6",
        "date": "2017-01-04 10:09:21 -0500",
        "subject": "Added expect log expression to replace year subdirectories in backup.history."
    },
    {
        "commit": "314ef2c8b317c7d56ae2770231e49748183fdd96",
        "date": "2017-01-04 10:05:43 -0500",
        "subject": "Update LICENSE.txt for 2017."
    },
    {
        "commit": "d5ee7d3535ea3961db2cb73120ee94632463e737",
        "date": "2016-12-23 16:50:02 -0500",
        "subject": "Added documentation to the User Guide for the process-max option.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "83beab7ec368ffebb5d8526e06eb65a9abd568c2",
        "date": "2016-12-23 11:43:26 -0500",
        "subject": "Refactor File module to improve test coverage.",
        "body": "Added unit tests for low-level functions in the BackupCommon module."
    },
    {
        "commit": "5d3473b52dfe1f67d557d434a9ee373b6317dcfc",
        "date": "2016-12-23 08:30:34 -0500",
        "subject": "Refactor File module to improve test coverage."
    },
    {
        "commit": "6b2666a9d7ee179e237a4ad34117024f2ed62f7f",
        "date": "2016-12-23 08:22:59 -0500",
        "subject": "Split test modules into separate files.",
        "body": "Makes the code more maintainable. Tests are dynamically loaded by name rather than requiring an if-else block."
    },
    {
        "commit": "56144c99c0570daf7f1dba85968b79cbc3a84b15",
        "date": "2016-12-21 14:35:20 -0500",
        "subject": "Improved check command to run on a standby.",
        "body": "Only basic checks are done because pg_switch_xlog() cannot be executed on a replica."
    },
    {
        "commit": "974a02dbe41372d28d2c234ebea8a8ac6352865a",
        "date": "2016-12-20 16:52:20 -0500",
        "subject": "Improved stanza-create command so that it can repair broken repositories in most cases and is robust enough to be made mandatory.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "aecc0f737e40dfb7304753e37612b11402e4c51c",
        "date": "2016-12-19 14:40:22 -0500",
        "subject": "Fixed a few directory syncs that were missed for the --repo-sync option."
    },
    {
        "commit": "4e1b74688df11f31e2d5caf76bf7c1d53623ae45",
        "date": "2016-12-13 08:22:36 -0500",
        "subject": "Fixed const assignment giving compiler warning in C library.",
        "body": "Fixed by Adrian Vondendriesch."
    },
    {
        "commit": "8e3464da805fc0975b6cf25ecb9ba16146b45c9e",
        "date": "2016-12-12 19:18:27 -0500",
        "subject": "v1.12: Page Checksums, Configuration, and Bug Fixes"
    },
    {
        "commit": "36a5349b1c6b6bcd513464029733b62fe4200759",
        "date": "2016-12-12 18:54:07 -0500",
        "subject": "Added the --checksum-page option.",
        "body": "This option allows pgBackRest to validate page checksums in data files when checksums are enabled on PostgreSQL >= 9.3. Note that this functionality requires a C library which may not initially be available in OS packages. The option will automatically be enabled when the library is present and checksums are enabled on the cluster."
    },
    {
        "commit": "6dd0829033fb600e0aa5d9c60d3315e65a6bb289",
        "date": "2016-12-12 18:47:17 -0500",
        "subject": "File copy protocol now accepts a function that can do additional processing on the copy buffers and return a result to the calling process."
    },
    {
        "commit": "b4884e5a0bdb572aeb766f6d5f1be8b159de5ea7",
        "date": "2016-12-10 14:05:28 -0500",
        "subject": "Fixed an issue where the db-port option specified on the backup server would not be properly passed to the remote unless it was from the first configured database.",
        "body": "Reported by Michael Vitale."
    },
    {
        "commit": "1a5fa920e6baec14fc092d202839ab16d403b7fb",
        "date": "2016-12-10 09:15:20 -0500",
        "subject": "Improved parameter/result logging in debug/trace functions."
    },
    {
        "commit": "e61ef6ebce004ebacf95796acae835845b25758e",
        "date": "2016-12-10 09:13:55 -0500",
        "subject": "Add more realistic data files to synthetic backup and restore tests."
    },
    {
        "commit": "eff7b46eb1abb0d80de01730e6834f39f450f890",
        "date": "2016-12-10 09:11:12 -0500",
        "subject": "Various improvements to validation of backup and restore."
    },
    {
        "commit": "b45e0d81898f21f8d65f029e382c3d202a3b0e7a",
        "date": "2016-12-10 09:09:16 -0500",
        "subject": "Fixed issues in the protocol layer when additional message fields were added."
    },
    {
        "commit": "f818901c0e619b50afa50412d246d0b1771fac11",
        "date": "2016-12-10 09:06:45 -0500",
        "subject": "Added the --repo-sync option to allow directory syncs in the repository to be disabled.",
        "body": "This is for file systems that do not support them, e.g. NTFS"
    },
    {
        "commit": "36378c47bd3058b3986bf2913539724965c39e56",
        "date": "2016-12-04 18:11:23 -0500",
        "subject": "Added Retention to QuickStart section."
    },
    {
        "commit": "896984848bf46f85893d4f05cf06534b4fe49327",
        "date": "2016-12-04 17:51:00 -0500",
        "subject": "Improved errors returned from child processes by removing redundant error level and code."
    },
    {
        "commit": "817592837ce08d412dc97e3cfeb543590a83d04f",
        "date": "2016-12-04 14:44:53 -0500",
        "subject": "Added a predictable log entry to signal that a command has completed successfully.",
        "body": "For example a backup ends successfully with: INFO: backup command end: completed successfully."
    },
    {
        "commit": "f823a25ac20fac867038a4797d96c26e27f8388b",
        "date": "2016-12-04 09:25:40 -0500",
        "subject": "Fixed an issue where options that were invalid for the specified command could be provided on the command-line without generating an error.",
        "body": "* The options were ignored and did not cause any change in behavior, but it did lead to some confusion. Invalid options will now generate an error.\n* Removed erroneous --no-config option in help test module.\n* Changed the --no-fork test option to --fork with negation to match all other boolean parameters."
    },
    {
        "commit": "d18cd7ad0faa80c4ceacd708d0ae1e964f170a7a",
        "date": "2016-12-03 18:01:17 -0500",
        "subject": "Fixed an issue that prevented errors from being output to the console before the logging system was initialized.",
        "body": "That is, while parsing options. Error codes were still being returned accurately so this would not have made a process look like it succeeded when it did not."
    },
    {
        "commit": "2e01e6b9e1a9c598715f7ad86177930fb3963e56",
        "date": "2016-12-03 17:34:51 -0500",
        "subject": "Improved consistency and flexibility of the protocol layer by using JSON for all messages."
    },
    {
        "commit": "b7f17382002046b7f52fdd874025428a649713a6",
        "date": "2016-12-03 10:28:08 -0500",
        "subject": "Code cleanup in preparation for improved stanza-create command.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "005fc08795c0bd299f999eff665b4eb4e789b2d2",
        "date": "2016-12-03 10:23:26 -0500",
        "subject": "Added the --repo-link option.",
        "body": "Allow internal symlinks to be suppressed when the repository is located on a filesystem that does not support symlinks. This does not affect any pgBackRest functionality, but the convenience link latest will not be created and neither will internal tablespace symlinks, which will affect the ability to bring up clusters in-place manually using filesystem snapshots."
    },
    {
        "commit": "6ae4d7de81cfdb8982f3bde0e920fb2a76250208",
        "date": "2016-12-03 09:56:05 -0500",
        "subject": "Fixed a bug where internal symlinks were not being created for tablespaces in the repository.",
        "body": "This issue was only apparent when trying to bring up clusters in-place with filesystem snapshots and did not affect normal backup and restore."
    },
    {
        "commit": "22cd29771fc87d98bc7269aad1e30b7c3d7de425",
        "date": "2016-12-01 09:33:14 -0500",
        "subject": "Update control and wal test files to 9.4 with matching system identifiers.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "a850335015207c95a05b4219997d025bcc854e1f",
        "date": "2016-11-30 14:36:39 -0500",
        "subject": "Simplified the result hash of File->manifest(), Db->tablespaceMapGet(), and Db->databaseMapGet()."
    },
    {
        "commit": "09df07efb7496db9ac426da243acc636a628d2bb",
        "date": "2016-11-30 14:23:05 -0500",
        "subject": "For simplicity, the pg_control file is now copied with the rest of the files instead of by itself of at the end of the process.",
        "body": "The backup command does not require this behavior and the restore copies to a temporary file which is renamed at the end of the restore."
    },
    {
        "commit": "4e9f8da9a6c85b8f486d4207d637f9d0b14b3049",
        "date": "2016-11-30 14:18:12 -0500",
        "subject": "Improved IO->bufferRead to always return requested number of bytes until EOF."
    },
    {
        "commit": "e951c4f9c267a7a860c22b29fc1208c3d96f7c89",
        "date": "2016-11-30 14:15:11 -0500",
        "subject": "Abstracted code to determine which database cluster is the master and which are standbys.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "d101e9c84e1e9bc7339a3d52a57964faf3aac51e",
        "date": "2016-11-30 14:03:58 -0500",
        "subject": "Improved exception handling in file unit tests."
    },
    {
        "commit": "4df3eabf6d5acda7e7095933ea7f85ce9c618151",
        "date": "2016-11-22 17:31:27 -0500",
        "subject": "Builds in release.pl now remove all docker containers to get consistent IP address assignments."
    },
    {
        "commit": "dbd16d25b97ba2d2cd86bcfb35e1ca41a2323c33",
        "date": "2016-11-22 17:29:24 -0500",
        "subject": "Fixed regression in section links introduced in v1.10.",
        "body": "This was introduced in an effort to make the html output XHTML 1.0 STRICT compliant because the standard does not allow / characters in anchors.\n\nHowever, the / characters were changed to . in the anchors but not in the links.  For now revert the anchors to / so further though can be given to this issue."
    },
    {
        "commit": "c9b49b0d7e1f0cc612511c1691dcde89ec0cee92",
        "date": "2016-11-17 16:35:11 -0500",
        "subject": "Doc engine improvements.",
        "body": "Bug Fixes:\n\n* Fixed and issue that suppressed exceptions in PDF builds.\n\nFeatures:\n\n* Allow a source to be included as a section so large documents can be broken up.\n* Added section link support to Markdown output.\n* Added list support to PDF output.\n* Added include option to explicitly build sources (complements the exclude option though both cannot be used in the same invocation).\n* Added keyword-add option to add keywords without overriding the default keyword.\n* Added debug option to doc.pl to easily add the debug keyword to documentation builds.\n* Added pre option to doc.pl to easily add the pre keyword to documentation builds.\n\nRefactoring:\n\n* Improvements to markdown rendering.\n* Remove code dependency on project variable, instead use title param."
    },
    {
        "commit": "54b1a784b55fdee915b550e5151f20dabea4e67c",
        "date": "2016-11-17 09:57:59 -0500",
        "subject": "v1.11: Bug Fix for Asynchronous Archiving Efficiency"
    },
    {
        "commit": "dbb9d80dab5a69130b34d1949a4aec889a49b758",
        "date": "2016-11-17 09:39:21 -0500",
        "subject": "Fixed an issue where asynchronous archiving was transferring one file per execution instead of transferring files in batches.",
        "body": "This regression was introduced in v1.09 and affected efficiency only, all WAL segments were correctly archived in asynchronous mode."
    },
    {
        "commit": "06cac30c33733d3894a3143a6866a9dbd3972199",
        "date": "2016-11-08 10:47:47 +0000",
        "subject": "v1.10: Stanza Creation and Minor Bug Fixes"
    },
    {
        "commit": "9d9c438f59461e17383cd55dd067a467132ba2de",
        "date": "2016-11-07 17:06:35 +0200",
        "subject": "Doc engine improvements.",
        "body": "Bug Fixes:\n\n* Fixed missing variable replacements.\n* Removed hard-coded host names from configuration file paths.\n\nDocumentation Features:\n\n* Allow command-line length to be configured using cmd-line-len param.\n* Added compact param to allow CSS to be embedded in HTML file.\n* Added pretty param to produce HTML with proper indenting.\n* Only generate HTML menu when required and don't require index page.\n* Assign numbers to sections by default.\n* VM mount points are now optional."
    },
    {
        "commit": "dd621081b95e5dcf737807053346b7c89e9f962d",
        "date": "2016-11-07 16:37:16 +0200",
        "subject": "Fixed an issue where tablespace paths with the same prefix would cause an invalid link error.",
        "body": "Reported by Nikhilchandra Kulkarni."
    },
    {
        "commit": "21ca4127026e80f93664d78fcf1e81d8dda0d25d",
        "date": "2016-11-05 19:22:30 +0200",
        "subject": "Fixed an issue where a backup could error if no changes were made to a database between backups and only pg_control changed."
    },
    {
        "commit": "f43e5bc52d31b6f1efe3b92b44752aa49ab1645a",
        "date": "2016-11-04 13:56:26 +0200",
        "subject": "Removed extraneous use lib directives from Perl modules.",
        "body": "Suggested by Devrim Gündüz."
    },
    {
        "commit": "171c5835bbed34e118e554a291849baa36ecfce0",
        "date": "2016-11-03 17:48:59 +0200",
        "subject": "Another expect log update for stanza-create feature."
    },
    {
        "commit": "26f76762b5ca80bb2ff6c7c5c8e2da11f825420d",
        "date": "2016-10-17 10:03:42 +0100",
        "subject": "Expect log updates for stanza-create feature."
    },
    {
        "commit": "8d1880ca4a15567778b1c295451b3bb62886cc7b",
        "date": "2016-10-14 12:21:47 +0100",
        "subject": "Added the stanza-create command to formalize creation of stanzas in the repository.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "1e0ca3056a84abb07214b54ea2945fcdacd65000",
        "date": "2016-10-10 17:35:58 -0400",
        "subject": "v1.09: 9.6 Support, Configurability, and Bug Fixes"
    },
    {
        "commit": "49a5e8a3f59716cf8f73b458f4cd0c5e47175e48",
        "date": "2016-10-07 08:51:10 -0400",
        "subject": "Fixed a remote timeout.",
        "body": "The timeout occurred when a local process generated checksums (during resume or restore) but did not copy files, allowing the remote to go idle."
    },
    {
        "commit": "41669a826ee48c7bbcd7a6c2ef849093d3287b6a",
        "date": "2016-10-05 21:22:42 -0400",
        "subject": "Added --dev option to doc.pl to easily add dev keyword to documentation builds."
    },
    {
        "commit": "16d0e767ef40f22d83166c88bc7177ff01e7fb3c",
        "date": "2016-10-05 21:15:10 -0400",
        "subject": "Set application_name to \"pgBackRest [command]\" for database connections.",
        "body": "Suggested by Jens Wilke."
    },
    {
        "commit": "0a4099fff87458265a5a14006967c48c3cf912bf",
        "date": "2016-10-05 21:13:29 -0400",
        "subject": "Clarified error message when unable to acquire pgBackRest advisory lock to make it clear that it is not a PostgreSQL backup lock.",
        "body": "Suggested by Jens Wilke."
    },
    {
        "commit": "5dc801d59db9c8ce2f0872deb13b532b32af80ee",
        "date": "2016-10-05 09:47:34 -0400",
        "subject": "Fixed an issue where the async archiver would not be started if archive-push did not have enough space to queue a new WAL segment.",
        "body": "This meant that the queue would never be cleared without manual intervention (such as calling archive-push directly). PostgreSQL now receives errors when there is not enough space to store new WAL segments but the async process will still be started so that space is eventually freed."
    },
    {
        "commit": "2a18674111d8ee01e15960dd1fcd0da3282bb38c",
        "date": "2016-10-05 09:09:30 -0400",
        "subject": "Added the log-level-stderr option.",
        "body": "Controls whether console log messages are sent to stderr or stdout. By default this is set to warn which represents a change in behavior from previous versions, even though it may be more intuitive. Setting log-level-stderr=off will preserve the old behavior."
    },
    {
        "commit": "d81198e65e2cca8272d52cc586dcc76016b91f2d",
        "date": "2016-10-05 08:55:54 -0400",
        "subject": "Added the cmd-ssh to allow the ssh client to be specified.",
        "body": "Suggested by Jens Wilke."
    },
    {
        "commit": "6f34fbc6957f16719749372d78c014abe9b8a5f7",
        "date": "2016-10-03 09:15:29 -0400",
        "subject": "Vagrant build improvements:",
        "body": "* Minimize TeXLive package list to save time during VM builds.\n* General cleanup and added timestamps.\n* Pin to specific box version."
    },
    {
        "commit": "07898d33e332aa892e406d2df729c5d900110d41",
        "date": "2016-10-03 07:28:44 -0400",
        "subject": "Fixes for archive checks added in 5d033d0:",
        "body": "* Don't execute pg_is_in_recovery() on PostreSQL < 9.0.\n* Don't check archive_mode or archive_command on the standby."
    },
    {
        "commit": "1491862716aeff6c3a9434b207dcdaf7962ce387",
        "date": "2016-10-01 13:39:44 -0400",
        "subject": "Regression tests can now be run as any properly-configured user, not just vagrant."
    },
    {
        "commit": "198e498b41e85dfcd3698bfb5a79907f41ca5656",
        "date": "2016-09-29 19:09:19 -0400",
        "subject": "Non-exclusive backups will automatically be used on PostgreSQL 9.6.",
        "body": "This feature carries over from 1.08 but has now been tested with the official 9.6 release."
    },
    {
        "commit": "156859c5d519b5bb757412a805208b78a46d3832",
        "date": "2016-09-29 19:07:46 -0400",
        "subject": "Update CentOS/Debian package definitions."
    },
    {
        "commit": "3e4ca153cea6750a3efbf1b1a319623afcfee86a",
        "date": "2016-09-29 18:26:32 -0400",
        "subject": "Fixed broken vm-max option in test.pl."
    },
    {
        "commit": "5d033d028c54142c872ca4ce8cef6ac05e9ec55a",
        "date": "2016-09-28 19:45:33 -0400",
        "subject": "Archive validation improvements:",
        "body": "* Fixed error message to properly display the archive command when an invalid archive command is detected.\n* Check that archive_mode is enabled when archive-check option enabled."
    },
    {
        "commit": "48f968b344138f6309f1203f26ecce7198d453b0",
        "date": "2016-09-28 12:29:29 -0400",
        "subject": "Added archive-timeout option documentation to the user guide.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "76673a8e62636a1cbcd364b4252130b6b5a83bd0",
        "date": "2016-09-27 18:01:38 -0400",
        "subject": "Fixed the check command to prevent an error message from being logged if the backup directory does not exist.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "25f40f9b15f987989b8286da47c631d6e6246abf",
        "date": "2016-09-17 11:53:28 -0400",
        "subject": "Log improvements:",
        "body": "* pgBackRest version number included in command start INFO log output.\n* Process ID logged for local process start/stop INFO log output.\n* Fixed missing expect output for help module."
    },
    {
        "commit": "d98df8c8cff41970a5549328722d90cbc7f8f19d",
        "date": "2016-09-14 17:36:43 -0500",
        "subject": "v1.08: Bug Fixes and Log Improvements"
    },
    {
        "commit": "69c6afb1dfa3c494f3fd8c3c5d98a8ab5e10a1e2",
        "date": "2016-09-14 16:40:13 -0500",
        "subject": "Cache file log output until the file is created to create a more complete log."
    },
    {
        "commit": "f54145c0ccd4676eebd7184edee4746c02981bfe",
        "date": "2016-09-14 16:37:07 -0500",
        "subject": "Fixed timeout issues.",
        "body": "* Fixed an issue where local processes were not disconnecting when complete and could later timeout. (Reported by Todd Vernick.)\n* Fixed an issue where the protocol layer could timeout while waiting for WAL segments to arrive in the archive. (Reported by Todd Vernick.)"
    },
    {
        "commit": "e08b56a4e33436d8fdff11020897fc8f73bbaa57",
        "date": "2016-09-14 16:30:57 -0500",
        "subject": "Show Process ID in log output instead of filtering it out with the timestamp."
    },
    {
        "commit": "f253a4d85ce47d5706123ce15c460e068e983595",
        "date": "2016-09-08 17:29:26 -0400",
        "subject": "Suppress \"dpkg-reconfigure: unable to re-open stdin: No file or directory\" warning in Vagrant VM build.",
        "body": "Contributed by John Harvey."
    },
    {
        "commit": "a8590c9aded9a6603eb0ed64ac1a5792f700e22e",
        "date": "2016-09-07 08:29:21 -0400",
        "subject": "v1.07: Thread to Process Conversion and Bug Fixes"
    },
    {
        "commit": "d2add293c7959d8b1919520f98202f07a0c1cba0",
        "date": "2016-09-07 08:07:37 -0400",
        "subject": "Archive retention improvements:",
        "body": "* Fixed an issue where retention-archive was not automatically being set when retention-archive-type=diff, resulting in a less aggressive than intended expiration of archive.\n* Additional warnings when archive retention settings may not have the intended effect or would allow indefinite retention.\n* Closed #235: \"Retention policy question\" by adding documentation for archive retention."
    },
    {
        "commit": "0d5a1eaf9efc3e051221cc32b373139cc1a274a6",
        "date": "2016-09-07 07:20:07 -0400",
        "subject": "The archive-start and archive-stop settings are now filled in backup.manifest."
    },
    {
        "commit": "cc9c8819eee1257b08f44eaf43597f5e97833932",
        "date": "2016-09-06 14:01:39 -0400",
        "subject": "Make uid/gid selection for containers dynamic."
    },
    {
        "commit": "cedfcbd4be9be7c37d211731f1b10f5e0d50e25a",
        "date": "2016-09-06 11:02:01 -0400",
        "subject": "Update Vagrantfile:",
        "body": "* Change box provider to bento (hoping for better stability with Docker).\n* Install texlive from Debian packages."
    },
    {
        "commit": "dd8d7812170c4312654dd12d2c742c1963653a92",
        "date": "2016-09-06 09:44:50 -0400",
        "subject": "Safely check eval blocks and convert $@ to $EVAL_ERROR."
    },
    {
        "commit": "a701309453a7df8f8808f6739e06e357ec0bf63f",
        "date": "2016-09-06 09:35:02 -0400",
        "subject": "Converted Perl threads to processes."
    },
    {
        "commit": "4026ad649d4383c500bd40717e2fb177d01a7692",
        "date": "2016-09-06 09:15:22 -0400",
        "subject": "Refactor of protocol minions in preparation for the new local minion."
    },
    {
        "commit": "f71073c11f413f99f35b3c253f35a0aaed34edfb",
        "date": "2016-09-04 19:29:30 -0400",
        "subject": "Improved temp file handling for archiving."
    },
    {
        "commit": "56ee666e69302b291ec5cc7d04caa25c651d7bfb",
        "date": "2016-09-04 09:27:56 -0400",
        "subject": "Suppress TOC for unsupported versions of pgBackRest.",
        "body": "The intent is to tidy the releases page and nobody should care much about the old, unsupported releases,"
    },
    {
        "commit": "8f61473955e212b605088cfe387c625b40c9863c",
        "date": "2016-09-04 09:25:20 -0400",
        "subject": "Improve ASSERT error handling."
    },
    {
        "commit": "f986e6ae33a5c87da7a8a5f5e5a11b8d4637a172",
        "date": "2016-09-04 09:22:53 -0400",
        "subject": "File module improvements.",
        "body": "* Remove obsolete thread index variable from File() module.\n* Changed temporary file names to consistently use .pgbackrest.tmp."
    },
    {
        "commit": "bcdb5cdac80372536539c46e12b3d1a5d244f5a9",
        "date": "2016-09-04 09:19:44 -0400",
        "subject": "Fixed a issue where tablespaces were copied from the master during standby backup."
    },
    {
        "commit": "2feaaf225e2200fd92ad7d12a1281080cbb5603f",
        "date": "2016-09-04 09:13:13 -0400",
        "subject": "Exclude contents of $PGDATA/pg_replslot directory."
    },
    {
        "commit": "316da4421ec0780963ab8a32d2fee141ff50122d",
        "date": "2016-09-03 18:34:38 -0400",
        "subject": "Experimental support for non-exclusive backups in PostgreSQL 9.6 rc1."
    },
    {
        "commit": "634f5c6829ce0d4ece466ac2d4c29215b13d6f89",
        "date": "2016-08-29 14:09:37 -0400",
        "subject": "Closed #250: Fixed the check command so backup info is checked remotely and not just locally.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "f6c24039e1d360b9be9b39ed77488212167570b2",
        "date": "2016-08-29 09:43:22 -0400",
        "subject": "Fixed minor documentation reproducibility issues related to binary paths."
    },
    {
        "commit": "be77136eaeca4d0943bd00280afcbe3f5a53a096",
        "date": "2016-08-25 11:49:09 -0400",
        "subject": "v1.06: Backup from Standby and Bug Fixes"
    },
    {
        "commit": "c9bdf6a9ae2f2657ba06eb97a7fbaba38251ef1c",
        "date": "2016-08-25 11:27:00 -0400",
        "subject": "Fixed timeout issue.",
        "body": "The protocol-timeout option was not automatically increased when the db-timeout option was increased."
    },
    {
        "commit": "5ada189a92813a57b9050dec54ba3ddf69f68bf0",
        "date": "2016-08-25 11:25:46 -0400",
        "subject": "Backup from a standby cluster.",
        "body": "A connection to the primary cluster is still required to start/stop the backup and copy files that are not replicated, but the vast majority of files are copied from the standby in order to reduce load on the master."
    },
    {
        "commit": "ecf827579edc9dc620a27985c0bd75a1d8cb3d23",
        "date": "2016-08-25 10:04:46 -0400",
        "subject": "Improve host tag rendering."
    },
    {
        "commit": "d0b6f78b20cb7c74b43717a97242fce7160d2604",
        "date": "2016-08-24 12:39:27 -0400",
        "subject": "More flexible configuration for databases",
        "body": "Master and standby can both be configured on the backup server and pgBackRest will automatically determine which is the master. This means no configuration changes for backup are required after failing over from a master to standby when a separate backup server is used."
    },
    {
        "commit": "cd6278e5af22119cb0c4e3714dc2a66d3cd219c0",
        "date": "2016-08-24 12:27:48 -0400",
        "subject": "Revert some backup exclusions until they have been tested more thoroughly."
    },
    {
        "commit": "9c13ca1d091e38dddcd38656fc8af748e8c19675",
        "date": "2016-08-24 12:01:08 -0400",
        "subject": "mprove backup log messages to indicated which host the files are being copied from."
    },
    {
        "commit": "f1412baccf9ab4b5015d839ae0b598d92dd32586",
        "date": "2016-08-16 09:35:16 -0400",
        "subject": "Exclude directories during backup that are cleaned, recreated, or zeroed by PostgreSQL at startup.",
        "body": "These include (depending on the version where they were introduced): pgsql_tmp, pg_dynshmem, pg_notify, pg_replslot, pg_serial, pg_snapshots, pg_stat_tmp, pg_subtrans. The postgresql.auto.conf.tmp file is now excluded in addition to files that were already excluded: backup_label.old, postmaster.opts, postmaster.pid, recovery.conf, recovery.done."
    },
    {
        "commit": "332055971e29beb031276d7ce32ad4827dabf6d2",
        "date": "2016-08-15 20:54:17 -0400",
        "subject": "Added hints to error message when relative paths are detected in archive-push or archive-get."
    },
    {
        "commit": "b25f10949a016cc4dc6d2e3ca1c8a63f764059c9",
        "date": "2016-08-15 20:15:17 -0400",
        "subject": "Fixed #229: Check fails on target db host.",
        "body": "Options that should not allow multiple values could be specified multiple times in pgbackrest.conf without an error being raised."
    },
    {
        "commit": "88d9bd3d37475c907a4fffdbf907deafc0b44bc3",
        "date": "2016-08-15 17:44:51 -0400",
        "subject": "Improvements in Db module.",
        "body": "* Separated out connect() function.\n* Allow executeSql() calls that do not return data.\n* Improve error handling."
    },
    {
        "commit": "1e0f15f4253319ff141455a46d597d2f387c8ff1",
        "date": "2016-08-15 17:23:37 -0400",
        "subject": "Improve error message for links that reference links in manifest build."
    },
    {
        "commit": "f9fa1270b24e2511717d4b4a3ddbee861bb32760",
        "date": "2016-08-15 17:11:45 -0400",
        "subject": "Fixed #236: Recursive user tablespace symlink.",
        "body": "A tablespace link that referenced another link would not produce an error, but instead skip the tablespace entirely."
    },
    {
        "commit": "35931305d71186935534b26d0b08c25946decd58",
        "date": "2016-08-15 16:48:24 -0400",
        "subject": "Update control version for PostgreSQL beta4."
    },
    {
        "commit": "17b79d62799ac82876b71d79a57d5e5259a2431d",
        "date": "2016-08-11 22:35:24 -0400",
        "subject": "Database version refactoring.",
        "body": "* Refactor db version constants into a separate module.\n* Update synthetic backup tests to PostgreSQL 9.4."
    },
    {
        "commit": "bff262ac4791fae834f13ee4c422da8a4e7cdb1d",
        "date": "2016-08-11 17:32:28 -0400",
        "subject": "Removed all OP_* function constants that were used only for debugging, not in the protocol, and replaced with __PACKAGE__."
    },
    {
        "commit": "9f19e13095628bf1b654db08ea3eec883c2cc5cd",
        "date": "2016-08-09 10:06:21 -0400",
        "subject": "v1.05: Bug Fix for Tablespace Link Checking"
    },
    {
        "commit": "34afe5e85b682803dec846bfe480c82d3b3ca05c",
        "date": "2016-08-09 09:05:27 -0400",
        "subject": "Fixed issue with tablespace link checking.",
        "body": "* Tablespace paths that had $PGDATA as a substring would be identified as a subdirectories of $PGDATA even when they were not.\n* Also hardened relative path checking a bit."
    },
    {
        "commit": "af790be34f8cc58c39100f125cff6f539aa47946",
        "date": "2016-08-02 12:55:09 -0400",
        "subject": "Added documentation for scheduling backups with cron.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "730262678a2f250076c1b772cdc4a457dd6708f4",
        "date": "2016-08-02 12:49:39 -0400",
        "subject": "Improved rendering of spaces in code blocks."
    },
    {
        "commit": "f0c97289215174cb95d3b4df89cbf9e13ca03243",
        "date": "2016-08-02 11:38:12 -0400",
        "subject": "Moved the backlog from the pgBackRest website to the GitHub repository wiki.",
        "body": "Contributed by Cynthia Shang."
    },
    {
        "commit": "277934447b0f4602260978ecb12d2e3d580632df",
        "date": "2016-07-30 09:42:35 -0400",
        "subject": "v1.04: Various Bug Fixes"
    },
    {
        "commit": "f2b3dda647c9abc487a099876fa0b03f7cd4fa53",
        "date": "2016-07-30 08:49:26 -0400",
        "subject": "Fixed an issue where a remote could try to start its own remote.",
        "body": "This is a better approach than 93320b8 (reverted in this commit) because it ensures that the remote type will be none so any functions that utilize optionRemoteTypeTest will work correctly.\n\nThis bug was only an issue when backup-host was not properly configured on the database host."
    },
    {
        "commit": "94a4cb4123c9a300d66e1f34b666bba84f4d727b",
        "date": "2016-07-30 08:43:38 -0400",
        "subject": "Disable control master for older OS versions where it is less stable."
    },
    {
        "commit": "1b6b26956ab2d0ee7957d48b148b080376c0a3fe",
        "date": "2016-07-29 18:46:19 -0400",
        "subject": "Reduce the frequency that certain tests are run to save time in regression."
    },
    {
        "commit": "ac23716d26aaa14470f1ff8307dfe6010e0c3c05",
        "date": "2016-07-29 18:46:19 -0400",
        "subject": "Enhancements to the protocol layer for improved reliability and error handling."
    },
    {
        "commit": "b44786321889a2f7599c505c9f7b1b3726810dff",
        "date": "2016-07-29 18:46:19 -0400",
        "subject": "Exceptions are now passed back from threads as messages when possible rather than raised directly."
    },
    {
        "commit": "93320b865e891701dea7383166f8bca6117d5efc",
        "date": "2016-07-29 18:45:37 -0400",
        "subject": "Fixed a issue where a remote could try to start its own remote."
    },
    {
        "commit": "af5965a6ef9ebe76a1b5ff5c6a82fdaa5f4d3658",
        "date": "2016-07-29 18:45:23 -0400",
        "subject": "Fixed an invalid log call in lock routines."
    },
    {
        "commit": "a3b8808f94cb8ca6931517002cf30c8b3987357b",
        "date": "2016-07-29 18:44:53 -0400",
        "subject": "Fixed an issue where the contents of pg_xlog were being copied if the directory was symlinked."
    },
    {
        "commit": "ef33febfb73f449085d6f3da9b0bd6157560e52f",
        "date": "2016-07-29 18:43:59 -0400",
        "subject": "Temp files created during backup are now placed in the same directory as the target file."
    },
    {
        "commit": "95bbc8ad544cac4a95a90f94de2ca8856811dc37",
        "date": "2016-07-29 18:02:16 -0400",
        "subject": "Fixed an issue where multi-threaded tests were not being run when requested."
    },
    {
        "commit": "6e9d5f5bd31c835bf6aa7058c3c00a160d56b6c8",
        "date": "2016-07-29 14:02:11 -0400",
        "subject": "Fixed check command to throw an error when database version/id does not match that of the archive.",
        "body": "Fixed by Cynthia Shang."
    },
    {
        "commit": "f95d4af64a9e7cee15e190704fa9b4522f08e31e",
        "date": "2016-07-26 18:50:58 -0400",
        "subject": "Closed #220: Installation documentation misinformation.",
        "body": "Updated information about package availability on supported platforms."
    },
    {
        "commit": "ee80b7b255edeac3513781a6d77c84d916832baf",
        "date": "2016-07-26 18:30:25 -0400",
        "subject": "Added clarification on why the default for the backrest-user option is backrest."
    },
    {
        "commit": "18447569906f915c7801e9ac07500e6d72c8482d",
        "date": "2016-07-26 17:40:42 -0400",
        "subject": "Closed #209: Don't use \"localtime\" for HTML-docs.",
        "body": "HTML footer dates are statically created in English in order to be reproducible."
    },
    {
        "commit": "273d1c08d8cae647afe1b228a865de9a92177cd1",
        "date": "2016-07-26 16:57:38 -0400",
        "subject": "Improved remote error messages to identify the host where the error was raised."
    },
    {
        "commit": "bc5c04ffe71faed09519e0bfff1f9ef579fc5aae",
        "date": "2016-07-26 16:39:01 -0400",
        "subject": "Updated control/catalog/WAL versions for 9.6 beta3."
    },
    {
        "commit": "b6ac6b0f1c0d011ada945d9d027c67923a98173b",
        "date": "2016-07-26 16:28:43 -0400",
        "subject": "Suppress banners on SSH protocol connections."
    },
    {
        "commit": "f31ec20fcb249027a4aa455a9193eee40842497d",
        "date": "2016-07-26 16:21:14 -0400",
        "subject": "Reduce calls to protocolGet() in backup/restore."
    },
    {
        "commit": "98a67792ecd02c05511de7ec9c1830a200326ea7",
        "date": "2016-07-26 16:14:15 -0400",
        "subject": "Output lock file name when a lock cannot be acquired to aid in debugging."
    },
    {
        "commit": "d96b1a0dbc86fab538bf1be53825675774e9cbc9",
        "date": "2016-07-26 16:12:38 -0400",
        "subject": "All remote types now take locks.",
        "body": "The exceptions date to when the test harness and pgBackRest were running in the same VM and no longer apply."
    },
    {
        "commit": "095351f145003c62b24770e8a5ef96ec6125e624",
        "date": "2016-07-26 16:08:05 -0400",
        "subject": "Fixed #219: Unable to acquire restore lock.",
        "body": "Fixed an issue an where an extraneous remote was created causing threaded backup/restore to possibly timeout and/or throw a lock conflict."
    },
    {
        "commit": "5893c3cd2e7e6dd77283b17d59a5e72c34f6dec7",
        "date": "2016-07-19 15:26:41 -0400",
        "subject": "Fixed an issue where db-path was not required for the check command so an assert was thrown when it was missing rather than a polite error message.",
        "body": "Reported by Michael Vitale."
    },
    {
        "commit": "9ae6c01432ba66f5b2b743394af0ac00908a0ea9",
        "date": "2016-07-19 15:22:20 -0400",
        "subject": "Fixed a version checking issue in test.pl."
    },
    {
        "commit": "6e528080650dda98109d2bc31c48197804a29eda",
        "date": "2016-07-02 11:08:25 -0400",
        "subject": "Added release.pl to make releases reproducible."
    },
    {
        "commit": "1b62354dcb6cd815fc8a5b235b0aaf52eb85a692",
        "date": "2016-07-02 10:22:52 -0400",
        "subject": "v1.03: Check Command and Bug Fixes"
    },
    {
        "commit": "186ca18659f42e1cc287f0737db0f2138fa3dc54",
        "date": "2016-07-02 09:19:10 -0400",
        "subject": "Update WAL/catalog versions for 9.5 beta 2."
    },
    {
        "commit": "5df2eed72916bc68dbf2bb0d772b4a5e3fcfbe55",
        "date": "2016-07-02 09:07:48 -0400",
        "subject": "Order database versions during test.pl --vm-build."
    },
    {
        "commit": "418039027b32c680680f83183dabb1f7e1adbcb4",
        "date": "2016-07-02 09:02:55 -0400",
        "subject": "Closed #213: Archive command should not be validate when archive-check=n"
    },
    {
        "commit": "0f2eb424bb6d53f2c6619f70535706e649f7c9a9",
        "date": "2016-07-02 08:59:11 -0400",
        "subject": "Fix for container build in Vagrantfile."
    },
    {
        "commit": "9f9396943f20e00157b53494bc074d355456b689",
        "date": "2016-06-30 19:38:28 -0400",
        "subject": "Added documentation for asynchronous archiving.",
        "body": "Also removed some obsolete sections."
    },
    {
        "commit": "304d890f6c0ead8d49cf8f31fcef9f918904896a",
        "date": "2016-06-27 23:07:47 -0400",
        "subject": "Release note edits."
    },
    {
        "commit": "9516db4ad660a4be29fd43b34ab9e0ef848daaf8",
        "date": "2016-06-27 20:37:25 -0400",
        "subject": "Closed #209: Don't use \"localtime\" for HTML-docs.",
        "body": "The release-date-static var has been added to allow the html footer to use the last release date instead of localtime()."
    },
    {
        "commit": "cc2a8777d5efdaebfc17b053f747e8683a8ce3b1",
        "date": "2016-06-26 21:01:20 -0400",
        "subject": "User/group permissions improvements.",
        "body": "Improved handling of users/groups captured during backup that do not exist on the restore host. Also explicitly handle the case where user/group is not mapped to a name."
    },
    {
        "commit": "b571218930c4ef5578e2c42f73c3e24bcfaba216",
        "date": "2016-06-26 20:53:45 -0400",
        "subject": "Minor refactor of version variable to a constant.",
        "body": "It had originally been designed to play nice with a specific packaging tool but that tool was never used."
    },
    {
        "commit": "6ee485cc76ec05421ac4f45e50cd90911739163d",
        "date": "2016-06-24 13:16:07 -0400",
        "subject": "Added more keep-alives.",
        "body": "Keep-alives were also missing from multi-threaded backup/restore and single-threaded restore."
    },
    {
        "commit": "bd25223fd6167ef2e1cc4e9788de46371a647572",
        "date": "2016-06-24 10:54:31 -0400",
        "subject": "Rename test paths for clarity.",
        "body": "This was worked out as part of the test suite refactor [c8f806a] but not committed with it because of the large number of expect logs changes involved.  Keeping them separate made it easier to audit the changes in the refactor."
    },
    {
        "commit": "c8f806a293813323affea96c73b1aa177a0ac15a",
        "date": "2016-06-24 08:12:58 -0400",
        "subject": "Major refactor of the test suite.",
        "body": "* Make the code more modular and object-oriented.\n* Multiple Docker containers can now be created for a single test to simulate more realistic environments."
    },
    {
        "commit": "23a39118301384d939f431a344a724c8fc39f5e0",
        "date": "2016-06-24 08:06:20 -0400",
        "subject": "Stop using pg_xlogfile_name().",
        "body": "The pg_xlogfile_name() function is no longer used to construct WAL filenames from LSNs. While this function is convenient it is not available on a standby. Instead, the archive is searched for the LSN in order to find the timeline. If due to some misadventure the LSN appears on multiple timelines then an error will be thrown, whereas before this condition would have passed unnoticed."
    },
    {
        "commit": "41b27c0456793694316daa882ffbd2209fd249c3",
        "date": "2016-06-22 18:01:18 -0400",
        "subject": "Protocol timeout option and keep-alive fixes.",
        "body": "* Fixed an issue where keep-alives could be starved out by lots of small files during multi-threaded operation and were completely absent during single-threaded operation when resuming from a previous incomplete backup.\n\n* Added the protocol-timeout option. Previously protocol-timeout was set as db-timeout + 30 seconds.\n* Failure to shutdown remotes at the end of the backup no longer throws an exception. A warning is still generated that recommends a higher protocol-timeout."
    },
    {
        "commit": "4cff5bb0e69f03f047f8e8fe96a9ea336d7b4f31",
        "date": "2016-06-18 10:59:45 -0400",
        "subject": "Fixed pgBackRest config sections being blank in the output when not loaded from cache."
    },
    {
        "commit": "012405a33b01a3f215a0ee610a2648c5f5afb0f6",
        "date": "2016-06-18 09:55:00 -0400",
        "subject": "Closed #207: Expire fails with unhandled exception.",
        "body": "* Fixed an issue where the expire command would refuse to run when explicitly called from the command line if the db-host option was set.  This was not an issue when expire was run after a backup, which is the usual case.\n* Option handling is now far more strict. Previously it was possible for a command to use an option that was not explicitly assigned to it. This was especially true for the backup-host and db-host options which are used to determine locality."
    },
    {
        "commit": "e988b96eceafd1619d2f8c51c94e38523a051f54",
        "date": "2016-06-18 09:22:26 -0400",
        "subject": "Fixed issue in doc info output with --require.",
        "body": "Section names were being repeated in the info output when multiple --require options depended on the same sections."
    },
    {
        "commit": "cb32a8ab1f1aa2f71070cfd61c70d7fb4933abb4",
        "date": "2016-06-13 11:18:06 -0400",
        "subject": "VM build improvements.",
        "body": "* Properly set user env before calling test.pl --vm-build.\n* Remove squid proxy made obsolete by more efficient builds."
    },
    {
        "commit": "7e45ed8366f8933a0e8f52b5777f6618d57766a2",
        "date": "2016-06-12 09:13:46 -0400",
        "subject": "Added check command.",
        "body": "The check command validates that pgBackRest is configured correctly for archiving and backups."
    },
    {
        "commit": "7c9eaf7210181ca806c1e8b477bc8a0df8d4af3a",
        "date": "2016-06-12 09:01:56 -0400",
        "subject": "Add cmd-description tag.",
        "body": "Allow command summaries to be inserted anywhere in the documentation to avoid duplication."
    },
    {
        "commit": "f1e92804cef8e2fa7f85d231aaf5d5710130bee9",
        "date": "2016-06-12 09:00:16 -0400",
        "subject": "Docker container improvements.",
        "body": "* Containers now use a squid proxy for apt/yum to speed builds.\n* Obsolete containers are removed by the <br-option>--vm-force</br-option> option.\n* Greatly reduced the quantity of Docker containers built by default. Containers are only built for PostgreSQL versions specified in db-minimal and those required to build documentation. Additional containers can be built with --db-version=all or by specifying a version, e.g. --db-version=9.4."
    },
    {
        "commit": "3d761b726aeb243ffda53e6c8d122aa9d323ac32",
        "date": "2016-06-10 21:22:36 -0400",
        "subject": "Update TeX Live to 2016 version."
    },
    {
        "commit": "5660f69859f02be53b328f7b7773b651ba4e13c1",
        "date": "2016-06-06 13:27:52 -0400",
        "subject": "Fixed DTDs not being loaded from test.pl."
    },
    {
        "commit": "3f7ca876c255f7e3af772cf374ba9bc44a2be701",
        "date": "2016-06-04 12:24:31 -0400",
        "subject": "PostgreSQL version is now a variable to allow multi-version documentation."
    },
    {
        "commit": "bfed78ef42599ea5c7e883b16efef973ee84b23a",
        "date": "2016-06-04 12:04:09 -0400",
        "subject": "New, consolidated implementation for link rendering."
    },
    {
        "commit": "1ddfb1e453aef26590b649c77330d5206978917d",
        "date": "2016-06-04 11:40:33 -0400",
        "subject": "Fixed pgBackRest-specific xml that was loaded for non-pgBackRest projects."
    },
    {
        "commit": "8ddfab0cbc646bfd11fcee1b4a47d3a3b617ae7a",
        "date": "2016-06-04 11:38:23 -0400",
        "subject": "Fixed DTD search path.",
        "body": "The search path that did not work properly when --doc-path was used."
    },
    {
        "commit": "e796f563c4af7a265a1f8ecd94e7f3f795a78839",
        "date": "2016-06-03 20:07:28 -0400",
        "subject": "Add cmd-extra field.",
        "body": "Allow hidden options to be added to a command. This allows certain commands (like apt-get) to be forced during the build without making that a part of the documentation."
    },
    {
        "commit": "36cf0b18f5c7db870f8b0338ee43e84c32ad4661",
        "date": "2016-06-03 18:59:12 -0400",
        "subject": "Update installation documentation.",
        "body": "* Recommended install location for pgBackRest modules is now /usr/share/perl5 since /usr/lib/perl5 has been removed from the search path in newer versions of Perl.\n\n* Added instructions for removing prior versions of pgBackRest."
    },
    {
        "commit": "bfaee7380d6aa0a4a4573df2a6a28581537d169b",
        "date": "2016-06-02 11:10:24 -0400",
        "subject": "v1.02: Bug Fix for Perl 5.22"
    },
    {
        "commit": "eaa981c5aae6b3d8a04fd2d518f180be0921ba4c",
        "date": "2016-06-02 09:32:56 -0400",
        "subject": "Added execution cache for document generation.",
        "body": "Added an execution cache so that documentation can be generated without setting up the full container environment. This is useful for packaging, keeps the documentation consistent for a release, and speeds up generation when no changes are made in the execution list."
    },
    {
        "commit": "df6086bd24ce9d9322e5c048e5337719e9a43a0a",
        "date": "2016-06-02 09:25:12 -0400",
        "subject": "Added a man page to document generation."
    },
    {
        "commit": "9a9f26a96f0365b0223231f74426602edb5caad9",
        "date": "2016-05-27 18:36:25 -0400",
        "subject": "Some wordsmithing in the introduction."
    },
    {
        "commit": "174b16165b2cd555fd63a6516520900089d643ab",
        "date": "2016-05-26 16:57:35 -0400",
        "subject": "Replaced overzealous perl -cW check.",
        "body": "It failed on Perl 5.22 so replaced with with perl -cw."
    },
    {
        "commit": "379ab1b3533c525d87b2dacd34ac7d3a9796305e",
        "date": "2016-05-26 15:04:18 -0400",
        "subject": "Improve log directory/file creation.",
        "body": "Log directory create and file open now using FileCommon functions which produce more detailed error messages on failure."
    },
    {
        "commit": "e4e885d602781afd42f78c74378af2e78e0a4d27",
        "date": "2016-05-26 14:22:26 -0400",
        "subject": "Add notes for Ubuntu 16.04 upgrade."
    },
    {
        "commit": "cf344c144f6c12cca2950429ce61ae075f69d902",
        "date": "2016-05-26 14:17:50 -0400",
        "subject": "Fixed absolute paths that were used for the PDF logo."
    },
    {
        "commit": "b19143b6eaf0a04f921c791a7e62e2aa4f367547",
        "date": "2016-05-26 14:07:29 -0400",
        "subject": "Fixed syntax in doc code that was not compatible with Perl 5.2X."
    },
    {
        "commit": "28f1c927e715b55aa4b5dcba936a6f6c03d46ed5",
        "date": "2016-05-26 14:03:32 -0400",
        "subject": "Upgrade doc/test VM to Ubuntu 16.04.",
        "body": "* This will help catch Perl errors in the doc code since it is not run across multiple OSs like the core and test code.\n* It is to be hoped that a newer kernel will make Docker more stable."
    },
    {
        "commit": "3d437d9278488d25b30da828a173042774c0e009",
        "date": "2016-05-26 11:23:52 -0400",
        "subject": "Fix usage of sprintf() for Perl 5.22.",
        "body": "Parameters not referenced in the format string are no longer allowed."
    },
    {
        "commit": "b1c779e606bf6d7e1a30c338694ae628fbac853b",
        "date": "2016-05-26 11:04:19 -0400",
        "subject": "Next development cycle."
    },
    {
        "commit": "bfec2d2f89a0e746d145bd896b8f9c4ba02dde9d",
        "date": "2016-05-26 11:03:10 -0400",
        "subject": "Fixed release version test when the current version is development."
    },
    {
        "commit": "c8d68bcf2d33b206634d0d537ef6d4bfb84229ba",
        "date": "2016-05-26 10:34:10 -0400",
        "subject": "More detailed release notes.",
        "body": "Release notes are now broken into sections so that bugs, features, and refactors are clearly delineated.  An \"Additional Notes\" section has been added for changes to documentation and the test suite that do not affect the core code."
    },
    {
        "commit": "0fb8bcbfb7107b83c345dac1858aab02eeeb4302",
        "date": "2016-05-26 09:34:03 -0400",
        "subject": "Lists can now be used outside of p and text tags.",
        "body": "This allows for more flexible document structuring."
    },
    {
        "commit": "5a85122841ff38bea5b7b3d02a5d8ace40a4e81f",
        "date": "2016-05-26 09:20:55 -0400",
        "subject": "Moved change log to website.",
        "body": "The change log was the last piece of documentation to be rendered in Markdown only.  Wrote a converter so the document can be output by the standard renderers.  The change log will now be located on the website and has been renamed to \"Releases\"."
    },
    {
        "commit": "e2094c3d312a69544cd144e4758508c7966075b8",
        "date": "2016-05-26 09:09:42 -0400",
        "subject": "Remove function constants and pass strings directly to logDebugParam().",
        "body": "The function names were only used once so creating constants for them was wasteful."
    },
    {
        "commit": "e7d4a25d6a5613b89e3186517f6d4888b3ed9faa",
        "date": "2016-05-24 08:17:13 -0400",
        "subject": "Added Ubuntu 16.04 and Debian 8 to regression tests.",
        "body": "Also added some new fields to make container generation simpler for distros that share a common package base."
    },
    {
        "commit": "f2a14a06e5a3b9b702cdbcf5f7cfdfb0acfa6e51",
        "date": "2016-05-23 20:04:36 -0400",
        "subject": "Moved version checking code so it doesn't run in containers.",
        "body": "The required modules were not loaded so errors were occurring during regression tests."
    },
    {
        "commit": "c604b6e657a0ff195d291d6b7f972ef02f508011",
        "date": "2016-05-23 19:33:02 -0400",
        "subject": "Test release version using change-log.xml instead of CHANGELOG.md.",
        "body": "This is in preparation for moving the change log to the website and removing it from Github."
    },
    {
        "commit": "3af48f1d7818287d9e4443748becc63b86958ab7",
        "date": "2016-05-20 11:18:51 -0400",
        "subject": "Initialize local variable variable immediately, per Perl Critic."
    },
    {
        "commit": "c9632e987437031d40765019bd6ee279cb101197",
        "date": "2016-05-19 17:10:34 -0400",
        "subject": "Closed #195: Added type from source node in manifest.xml.",
        "body": "This parameter `allows the doc code to determine if special handling is needed for the xml document."
    },
    {
        "commit": "3a309256fa9547f8a26fe0563a873a5be1385c2f",
        "date": "2016-05-19 10:25:04 -0400",
        "subject": "Closed #193: Fix perl warnings in doc/ tree.",
        "body": "Somewhere between perl 5.14 and 5.20, constructs like this:\n    perl -e '$a = {}; keys $a'\nstarted to throw warnings:\n    keys on reference is experimental at -e line 1.\n\nFix by adding a bunch of %{} and @{} casts."
    },
    {
        "commit": "b710c016302d8d29c502aab5688197bf9a664131",
        "date": "2016-05-17 01:04:01 -0400",
        "subject": "v1.01: Enhanced Info, Selective Restore, and 9.6 Support"
    },
    {
        "commit": "0451d3afddfd6af2b6d32c2aba898e13f4cd170a",
        "date": "2016-05-16 17:59:26 -0400",
        "subject": "Support for non-exclusive backups in PostgreSQL 9.6."
    },
    {
        "commit": "28c5e54b09c5428c53f43a8e6b9b2c2ce727ad09",
        "date": "2016-05-16 17:01:48 -0400",
        "subject": "Added SEO and sharing features to the website.",
        "body": "Descriptions wordsmithed (for better or worse) by committer."
    },
    {
        "commit": "48eecc2c04d59f74755d7f4db2b73da8e9e29ce6",
        "date": "2016-05-16 16:49:54 -0400",
        "subject": "Added vim to test virtual machine."
    },
    {
        "commit": "9b5a27f6578b7041d72f8527e71c35aa60c0e8ab",
        "date": "2016-05-14 10:39:56 -0400",
        "subject": "Add Manifest->addFile().",
        "body": "Some files need to be added to the manifest after the initial build.  This is currently done in only one place but usage will expand in the future so the functionality has been encapsulated in addFile()."
    },
    {
        "commit": "77b01e980fc82d81585531bd688d8a32bed759d5",
        "date": "2016-05-14 10:36:35 -0400",
        "subject": "Make the initial capital for hints consistent.",
        "body": "Some hints started with a capital letter and others did not. Make them all lower case for consistency."
    },
    {
        "commit": "512d006346a06ef2eaf7af7ac2863a2c1a62f3de",
        "date": "2016-05-14 10:33:12 -0400",
        "subject": "Refactor database version identification for archive and backup commands.",
        "body": "Added database version constants and changed version identification code to use hash tables instead of if-else.  Propagated the db version constants to the rest of the code and in passing fixed some path/filename constants.\n\nAdded new regression tests to check that specific files are never copied."
    },
    {
        "commit": "4d9920cc48d871035a9a601095c6700510dd5388",
        "date": "2016-05-14 10:29:35 -0400",
        "subject": "Fix null and linefeed handling in Db->executeSql().",
        "body": "The join() used was not able to handle nulls and was replaced by a loop.  An injudicious trim was removed when the source of extra linefeeds was determined to be an additional loop execution that was not handled correctly."
    },
    {
        "commit": "0c320e7df77a63e3bbebf43dc931b5884531a772",
        "date": "2016-05-11 09:21:39 -0400",
        "subject": "Allow selective restore of databases from a cluster backup.",
        "body": "This feature can result in major space and time savings when only specific databases are restored. Unrestored databases will not be accessible but must be manually dropped before they will be removed from the shared catalogue."
    },
    {
        "commit": "e430f0a05439ff851d3c4fa8b5a19cd1c743b945",
        "date": "2016-05-11 08:59:34 -0400",
        "subject": "Added `--db-version=minimal` option as default.",
        "body": "This change assigns each version of PostgreSQL to a specific OS version for testing to minimize the number of tests being run.  In general, older versions of PostgreSQL are assigned to older OS versions.\n\nThe old behavior can be enabled with `--db-version=all`."
    },
    {
        "commit": "a6a19e3735f5edfa449fe351372b9d4be625d03e",
        "date": "2016-05-10 18:12:37 -0400",
        "subject": "Test directories are now located on the host VM rather than in the Docker container.",
        "body": "This change allows for easier testing since all files are local on the host VM and can be easily accessed without using `docker exec`.  In addition, this change is required to allow multiple Docker containers per test case which is coming soon."
    },
    {
        "commit": "60b901948af90126700685b5424f332a490d1ad1",
        "date": "2016-05-06 10:25:46 -0400",
        "subject": "Enhanced text output of info command to include timestamps, sizes, and the reference list for all backups."
    },
    {
        "commit": "7b64843221277d4afb7a6a2c8ac4222faf7c551b",
        "date": "2016-05-06 09:37:01 -0400",
        "subject": "Added trim() to process id read from lock file.",
        "body": "The prior way worked fine but added extraneous linefeeds to the log output."
    },
    {
        "commit": "c477d6f8998f9e8fa8d7015b1c850e1332ab00cc",
        "date": "2016-05-05 18:13:50 -0400",
        "subject": "Next development cycle."
    },
    {
        "commit": "6cd1c42ddc19f2511f159ea1ccdcc5469f728594",
        "date": "2016-05-03 16:28:20 -0400",
        "subject": "Add usage documentation for test.pl."
    },
    {
        "commit": "7b030c5173b6d67c72b3efe54b3542ae3d694432",
        "date": "2016-05-03 16:12:44 -0400",
        "subject": "User Guide clarifications."
    },
    {
        "commit": "afc8a76ee9ed26738f8b0777a14e5084e9087d20",
        "date": "2016-04-25 16:33:08 -0400",
        "subject": "Fixed typos in user guide."
    },
    {
        "commit": "226d266d087b1d686e2171aa6f20ab216ef63e97",
        "date": "2016-04-17 11:43:33 -0400",
        "subject": "Added current stable release to documentation."
    },
    {
        "commit": "0d34c34cea1d8cca005e659e03c1520792b5c6a1",
        "date": "2016-04-17 11:27:19 -0400",
        "subject": "Added feature backlog.",
        "body": "This backlog is intended to hold long-lived feature requests that clutter up the issues area on Github."
    },
    {
        "commit": "7bdfa7839a1fa260b857bcde9a7e91414d7196e6",
        "date": "2016-04-17 09:32:03 -0400",
        "subject": "Minor wording change: problems => challenges."
    },
    {
        "commit": "7bd9b28ff4e5c296ff5c76b0259b40fe90c58b54",
        "date": "2016-04-17 08:23:09 -0400",
        "subject": "Expanded feature bullet points into a new section with detailed explanations.",
        "body": "Copy editing by John Harvey (@crunchyjohn), Jason O'Donnell (@Dwaligon), and Stephen Frost (@sfrost)."
    },
    {
        "commit": "ed20c2eda3790b6a327f05a1c08761cdec38f8eb",
        "date": "2016-04-16 16:38:44 -0400",
        "subject": "Close #172:  Unable to unpack Int64 when running on 32-bit OS",
        "body": "Added a note to documentation that only 64-bit distributions are supported.  It seems unlikely that anybody would be running a production server on anything else these days so we'll wait for a field report before taking further action."
    },
    {
        "commit": "dee3e86ff8444689f427147e9199070b8bb46ab3",
        "date": "2016-04-16 11:55:23 -0400",
        "subject": "README.md is now rendered by new Markdown code."
    },
    {
        "commit": "ad8ad11e4f555fb5b50c963eb6a61eae642e6750",
        "date": "2016-04-16 11:11:29 -0400",
        "subject": "Update URLs for new Github org."
    },
    {
        "commit": "9ab0dd80f70cc69a6edc9e61b6053752a789fde3",
        "date": "2016-04-14 23:04:20 -0400",
        "subject": "v1.00: New Repository Format and Configuration Scheme, Link Support"
    },
    {
        "commit": "9457e15347b05b4565074a3455f9edc4d1edaae3",
        "date": "2016-04-14 22:50:02 -0400",
        "subject": "New manifest format.",
        "body": "* All files and directories linked from PGDATA are now included in the backup. By default links will be restored directly into PGDATA as files or directories. The --link-all option can be used to restore all links to their original locations. The --link-map option can be used to remap a link to a new location.\n\n* Removed --tablespace option and replaced with --tablespace-map-all option which should more clearly indicate its function.\n\n* Added detail log level which will output more information than info without being as verbose as debug."
    },
    {
        "commit": "9a7d8b26cceb435d69378dd4bdc4eab74af11167",
        "date": "2016-04-14 13:50:58 -0400",
        "subject": "Fixed some inaccurate statements in the user guide. Fixed typo in documentation code comments."
    },
    {
        "commit": "18fd25233b1db7b3197f5d8dc537d239dcfc7aba",
        "date": "2016-04-14 09:30:54 -0400",
        "subject": "New simpler configuration and consistent project/exe/path naming.",
        "body": "* The repo-path option now always refers to the repository where backups and archive are stored, whether local or remote, so the repo-remote-path option has been removed. The new spool-path option can be used to define a location for queueing WAL segments when archiving asynchronously. Otherwise, a local repository is no longer required.\n\n* Implemented a new config format which should be far simpler to use. See the User Guide and Configuration Reference for details but for a simple configuration all options can now be placed in the stanza section. Options that are shared between stanzas can be placed in the [global] section. More complex configurations can still make use of command sections though this should be a rare use case.\n\n* The default configuration filename is now pgbackrest.conf instead of pg_backrest.conf. This was done for consistency with other naming changes but also to prevent old config files from being loaded accidentally.\n\n* The default repository name was changed from /var/lib/backup to /var/lib/pgbackrest.\n\n* Lock files are now stored in /tmp/pgbackrest by default. These days /run/pgbackrest would be the preferred location but that would require init scripts which are not part of this release. The lock-path option can be used to configure the lock directory.\n\n* Log files are now stored in /var/log/pgbackrest by default and no longer have the date appended so they can be managed with logrotate. The log-path option can be used to configure the lock directory.\n\n* Executable filename changed from pg_backrest to pgbackrest."
    },
    {
        "commit": "885797e4b58a675487a3531ba16908c1d1e9f970",
        "date": "2016-04-13 19:09:35 -0400",
        "subject": "Migrated many functions from File.pm to FileCommon.pm.",
        "body": "This makes make the migrated file functions available to parts of the code that don't have access to a File object.  They still exist as wrappers in the File object to support remote calls."
    },
    {
        "commit": "be8487dbad8a52f8b1f5083e3d7e2e3e47140dce",
        "date": "2016-04-13 19:05:31 -0400",
        "subject": "Changed some TBD comments from urgent to whenever."
    },
    {
        "commit": "723abadb750c78b661c9d29404455d4a95cfc7aa",
        "date": "2016-04-13 18:55:34 -0400",
        "subject": "Change spacing in expect logs to accommodate DETAIL level."
    },
    {
        "commit": "64b2858bb50c6b5f5f3cc6934c6dab671c203bbe",
        "date": "2016-04-13 18:47:29 -0400",
        "subject": "Test VM build improvements.",
        "body": "* Specific VMs can now be built by using --vm along with --vm-build.\n* Docker caching can be disabled with --vm-force.\n* ControlMaster is now used for al VMs to improve test speed."
    },
    {
        "commit": "0e4fdda6d8f7da0b737f2ffd3f0d1ad9ec3a33ab",
        "date": "2016-04-12 15:50:25 -0400",
        "subject": "Improved error handling when remote closes unexpectedly.",
        "body": "In conditions where an error is known to have occurred wait to try and capture the error in the first call that detects the error.  Due to timing sometimes the error could be caught later, which worked, but it made the functionality inconsistent in testing."
    },
    {
        "commit": "8adbcccd02d133f9650486019911f41afe80100d",
        "date": "2016-04-06 10:00:11 -0400",
        "subject": "Closed #184: Change test/log directory to test/expect.",
        "body": "This should make it clearer that these are expect logs for regression testing."
    },
    {
        "commit": "aacc369e4fc5ff40c8731f47303c547934315988",
        "date": "2016-04-06 09:41:33 -0400",
        "subject": "Next development cycle."
    },
    {
        "commit": "5307c858a7007c9b17f63aaef0439ac951d8741a",
        "date": "2016-04-06 09:14:06 -0400",
        "subject": "v0.92: Command-line Repository Path Fix"
    },
    {
        "commit": "1ce9961f8a65e0e127418905c54a11736e8b6ad3",
        "date": "2016-04-06 08:57:46 -0400",
        "subject": "Closed #183: Options --repo-path and --repo-remote-path ignored in archive-push.",
        "body": "Fixed an issue where the master process was passing --repo-remote-path instead of --repo-path to the remote and causing the lock files to be created in the default repository directory (/var/lib/backup), generally ending in failure. This was only an issue when --repo-remote-path was defined on the command line rather than in pg_backrest.conf."
    },
    {
        "commit": "1bbf3e6db4d4e1d43b03e75b3eb308565a700952",
        "date": "2016-03-22 22:18:33 -0400",
        "subject": "Fixed #181: Missing semicolon violates code style."
    },
    {
        "commit": "1d4779cfe6645bcfe508cd117c3f77146164066f",
        "date": "2016-03-22 10:23:20 -0400",
        "subject": "Next development cycle."
    },
    {
        "commit": "aea14c85531b564777e60ce4a6259a22413fae10",
        "date": "2016-03-22 10:16:42 -0400",
        "subject": "v0.91: Tablespace Bug Fix and Minor Enhancements"
    },
    {
        "commit": "d4899141734a4ae1abe52721d7f32f2148e05579",
        "date": "2016-03-22 09:57:39 -0400",
        "subject": "Closed #180: Backup format regression in v0.90."
    },
    {
        "commit": "c669dc01e957701161ea7a7ff15392157451d750",
        "date": "2016-03-10 10:58:07 -0500",
        "subject": "Fixed url references in latex documentation to use \\href instead of \\hyperref."
    },
    {
        "commit": "87dd0a127ffc4a55aeefca16ebf740b0e12a1731",
        "date": "2016-03-09 11:27:08 -0500",
        "subject": "Clarification for delta restore documentation to indicate that files may be removed."
    },
    {
        "commit": "004067a5fab8d7d91e24503cd560c319feccb08f",
        "date": "2016-03-08 09:29:03 -0500",
        "subject": "Correct retention-diff example value in documentation."
    },
    {
        "commit": "0b317d9040d33c46f466155f9873757c11517884",
        "date": "2016-02-27 10:11:58 -0500",
        "subject": "Fix minor bug in protocol compression.",
        "body": "This erroneous last caused a warning (which threw an error) and masked the error in decompression.  It was found when accidentally attempting to decompress an already-decompressed file, so not a big deal in practice which is probably why it hug around for so long."
    },
    {
        "commit": "d4c46acf489910ccf248f7e04438a8108647d03a",
        "date": "2016-02-23 09:39:37 -0500",
        "subject": "Working on #174: Get Perl Critic to pass on stern",
        "body": "Added single exception for the violation of BuiltinFunctions::ProhibitStringyEval and removed from policy file."
    },
    {
        "commit": "048571e23fc9e5b0756c0f19590fe4b74706a01e",
        "date": "2016-02-23 09:25:22 -0500",
        "subject": "Closed #173: Add static source code analysis",
        "body": "Perl Critic added and passes on gentle.  A policy file has been created with some permanent exceptions and a list of policies to be fixed in approximately the order they should be fixed in."
    },
    {
        "commit": "d35ab82a83895049ea542b3a53b2e90f9428d176",
        "date": "2016-02-19 19:32:02 -0500",
        "subject": "Closed #167: Rename `--no-start-stop` option to `--no-online`."
    },
    {
        "commit": "fb63a981cb89b7741120d87be78f7ffd38c4d5de",
        "date": "2016-02-14 20:42:11 -0500",
        "subject": "Closed #166: Copy global/pg_control last during backup."
    },
    {
        "commit": "053f25d870836c001fd826927fa32b5d4ef97a58",
        "date": "2016-02-11 21:42:27 -0500",
        "subject": "Closed #170: Write .info and .manifest files to temp before moving to final location and syncing"
    },
    {
        "commit": "17cbab524aa8e4ef541253aa5923afffb8f98820",
        "date": "2016-02-11 21:40:43 -0500",
        "subject": "Combine chmod commands in tests for efficiency."
    },
    {
        "commit": "f360d5072e6a7ec29489a72732783153ba0c4a92",
        "date": "2016-02-07 11:20:43 -0500",
        "subject": "Next development cycle."
    },
    {
        "commit": "631535ae4fc443102cac0f2da5bdc8fb2671468e",
        "date": "2016-02-07 10:47:16 -0500",
        "subject": "v0.90: 9.5 Support, Various Enhancements, and Minor Bug Fixes"
    },
    {
        "commit": "de9b6d5133c5fbbb02cb0c8b7d4596843a2d3545",
        "date": "2016-02-06 16:49:12 -0500",
        "subject": "Closed #113: Better error message when repo does not exist."
    },
    {
        "commit": "f8b47997a314ed6502b915a0514b20ac23598dab",
        "date": "2016-02-05 23:03:29 -0500",
        "subject": "Closed #127: More sanity checking for --delta restores",
        "body": "Added checks for `--delta` and `--force` restore options to ensure that the destination is a valid $PGDATA directory. pgBackRest will check for the presence of `PG_VERSION` or `backup.manifest` (left over from an aborted restore). If neither is found then `--delta` and `--force` will be disabled but the restore will proceed unless there are files in the $PGDATA directory (or any tablespace directories) in which case the operation will be aborted."
    },
    {
        "commit": "5c815e4fc0e2c8a9ea162963f32d5679d54fc852",
        "date": "2016-02-02 14:33:15 -0500",
        "subject": "Closed #58: Get catalog number for better tablespace copying",
        "body": "When backing up and restoring tablespaces pgBackRest only operates on the subdirectory created for the version of PostgreSQL being run against. Since multiple versions can live in a tablespace (especially during a binary upgrade) this prevents too many files from being copied during a backup and other versions possibly being wiped out during a `--delta` restore. This only applies to PostgreSQL >= 9.0 -- before that only one PostgreSQL version could use a tablespace."
    },
    {
        "commit": "24a1ad31d0dfcd8c72a71c589902446a9da75e11",
        "date": "2016-02-02 11:57:46 -0500",
        "subject": "Minor rewording in user guide."
    },
    {
        "commit": "02405e851cc6f1941f0de8001cdf6829d6fa06c0",
        "date": "2016-01-22 18:01:21 -0500",
        "subject": "Closed #163: Document Generation Issue",
        "body": "Fixed an issue where document generation failed because some OSs are not tolerant of having multiple installed versions of PostgreSQL. A separate VM is now created for each version. Also added a sleep after database starts during document generation to ensure the database is running before the next command runs."
    },
    {
        "commit": "bacdd5583dc7dfc807c385789b26e346db6c219a",
        "date": "2016-01-22 14:38:48 -0500",
        "subject": "User guide highlighting fixes for #93."
    },
    {
        "commit": "e42b8de618b0a8bd003d8b62eefadf7ed0aee34f",
        "date": "2016-01-20 21:45:03 -0500",
        "subject": "Updated Copyright for 2016."
    },
    {
        "commit": "83b1a3cb4446fb59d1295706a547b41fc5bd84be",
        "date": "2016-01-20 21:28:40 -0500",
        "subject": "Closed #150: Fixed an issue where a temp WAL file left over after a well-timed system crash could cause the next `archive-push` to fail."
    },
    {
        "commit": "747346db674705d7db15e8f9293016b00875b4d5",
        "date": "2016-01-20 18:34:42 -0500",
        "subject": "Closed #162: When restore `--set=latest` (the default) the actual backup restored will be output to the log."
    },
    {
        "commit": "2d38876bc4676344936ad72d65d0f697c4e921c1",
        "date": "2016-01-20 17:24:44 -0500",
        "subject": "Closed #93: The `retention-archive` option can now be be safely set to less than backup retention (`retention-full` or `retention-diff`) without also specifying `archive-copy=n`. The WAL required to make the backups that fall outside of archive retention consistent will be preserved in the archive. However, in this case PITR will still not be possible for backups that fall outside of archive retention."
    },
    {
        "commit": "904a8c956f53ae5f6832e6188a668d94a84220b9",
        "date": "2016-01-19 07:39:29 -0500",
        "subject": "Refactor of expiration to use backup.info for a list of what needs to be expired rather than looking at the backup directory."
    },
    {
        "commit": "65cce69dcc7b03605ab46f0f542bc653ecb4154c",
        "date": "2016-01-15 23:37:17 -0500",
        "subject": "Closed #131: Offline backups make expire command fail."
    },
    {
        "commit": "fce72615366dd5a78359bd05c0919210eb128019",
        "date": "2016-01-15 23:22:30 -0500",
        "subject": "Only allow --no-cleanup option when a single test is selected."
    },
    {
        "commit": "4d12cc233e26e568fa8449691051b8f33b238873",
        "date": "2016-01-15 20:31:29 -0500",
        "subject": "Fix for typo in error message."
    },
    {
        "commit": "e91e481f3dcdb5e03320663bfa732b3aef49b49e",
        "date": "2016-01-15 07:07:00 -0500",
        "subject": "Closed #19: The following tablespace checks have been added: paths or files in pg_tblspc, relative links in pg_tblspc, tablespaces in $PGDATA. All three will generate errors."
    },
    {
        "commit": "67fb7a23bc2d448938c000ec7189cc1f9b979440",
        "date": "2016-01-14 19:37:06 -0500",
        "subject": "Master test log is output to file."
    },
    {
        "commit": "65d0c7dc3bd60eb432dd4a582419c3c39866801a",
        "date": "2016-01-13 22:48:35 -0500",
        "subject": "Updated Crunchy URL."
    },
    {
        "commit": "c2b1620c53555924dd4ef666db1a124702ebd5b1",
        "date": "2016-01-13 22:43:26 -0500",
        "subject": "Logging enhancements:",
        "body": "1) Show log output realtime when --max-process=1 or only 1 test is being run.\n2) Dry run now shows test output when --vm-out is specified."
    },
    {
        "commit": "a0a3d1e97e91ddb6ebbb2ac8ff3f2445f3c455f0",
        "date": "2016-01-13 20:35:12 -0500",
        "subject": "Closed #122: 9.5 Integration",
        "body": "The archive_mode = always setting is not included but is covered by issue #125."
    },
    {
        "commit": "c7502f341b4ffbe976ff08bf311f24d6d377a408",
        "date": "2016-01-11 09:50:45 -0500",
        "subject": "Generate an error when `archive-check=y` but `archive_command` does not execute `pg_backrest`."
    },
    {
        "commit": "81a2fde21fc9fe98bb3473164b5ac4717bdb067b",
        "date": "2016-01-10 21:07:07 -0500",
        "subject": "Fixed typos in test documentation."
    },
    {
        "commit": "0f88943b7b2e142d86d3a03755a41a1b31754338",
        "date": "2016-01-10 19:30:51 -0500",
        "subject": "Database versions are now run as separate tests."
    },
    {
        "commit": "cd9fa6f028114f4e44068137a6d14bcd74d882d7",
        "date": "2016-01-10 09:19:21 -0500",
        "subject": "Updated test logs for partial WAL segment support."
    },
    {
        "commit": "29102b2887dc6f0a1ad0603c48d14bc92e15fa8a",
        "date": "2016-01-09 23:08:54 -0500",
        "subject": "Added error when archive_mode=always is configured."
    },
    {
        "commit": "7f0f8823df16f3bb4f68fbe7fca4da259ade6409",
        "date": "2016-01-09 19:37:28 -0500",
        "subject": "Added support for partial WAL segments."
    },
    {
        "commit": "e72165a689889f87a863821f6d5edbada425feae",
        "date": "2016-01-09 10:11:03 -0500",
        "subject": "Provisional support for PostgreSQL 9.5. No support for `archive_mode = 'always'` or `.partial` WAL on a standby."
    },
    {
        "commit": "c8f863fbabaf5060e6c8b837856363339740d346",
        "date": "2016-01-09 08:21:53 -0500",
        "subject": "Text execution improvements:",
        "body": "1) Tests for all operating systems can now be run with a single command.\n2) Tests can be run in parallel with --process-max.\n3) Container generation now integrated into test.pl\n4) Some basic test documentation."
    },
    {
        "commit": "4a384ffbdb3824b116fcf1db63920fc6eddd18ea",
        "date": "2016-01-03 20:24:14 -0500",
        "subject": "Added archive-check config test. Fixed capitalization error in optionboolSetTest()."
    },
    {
        "commit": "6f6c796fbf9d4cdafcede1368b63904e9690f598",
        "date": "2016-01-03 20:21:30 -0500",
        "subject": "Fixed an issue where specifying --no-archive-check would throw a configuration error."
    },
    {
        "commit": "7f630aec49eceada43d3c60f2a810cc3e5960a08",
        "date": "2015-12-29 13:57:10 -0500",
        "subject": "Switched to using docker for all unit tests as this allows for greater automation."
    },
    {
        "commit": "91d1e940769cf81bd511745c9b303833d8940b66",
        "date": "2015-12-24 12:49:47 -0500",
        "subject": "Next development cycle."
    },
    {
        "commit": "50a62fab6ded931efd9c87fe3767fd26f4f7318b",
        "date": "2015-12-24 11:32:29 -0500",
        "subject": "v0.89: Timeout Bug Fix and Restore Read-Only Repositories"
    },
    {
        "commit": "ba098d7b91c189d8ee7f45a157ba8e5a243eb85b",
        "date": "2015-12-24 10:32:25 -0500",
        "subject": "Fixed an issue where longer-running backups/restores would timeout when remote and threaded.",
        "body": "Keepalives are now used to make sure the remote for the main process does not timeout while the thread remotes do all the work.  The error messages for timeouts was also improved to make debugging easier."
    },
    {
        "commit": "b0a6954671dcee50e16a72f4c44d0eaa84b67c5c",
        "date": "2015-12-23 11:04:26 -0500",
        "subject": "A number of doc improvements:",
        "body": "1) Started on a general markdown renderer\n2) Internal links now work in PDF\n3) Improvements to PDF styling\n4) Some comment and formatting fixes\n5) User guide edits."
    },
    {
        "commit": "fdc99e30bd2e154623fb71134413a11d695d3420",
        "date": "2015-12-23 10:48:33 -0500",
        "subject": "Allow restores to be run against a read-only repository.",
        "body": "Two things needed to be changed:\n1) Don't open a log file when log-level-file=off\n2) New --no-lock option to suppress lock file creation for restores."
    },
    {
        "commit": "d5cef05a6857512bc1c1410909a58df4d1c102da",
        "date": "2015-12-21 19:25:50 -0500",
        "subject": "Added rc to version check."
    },
    {
        "commit": "a840808bc6916e089dcb119998a742fbb8629fea",
        "date": "2015-12-21 19:25:17 -0500",
        "subject": "Regression test for issue #159: duplicated log section entries in config file",
        "body": "Add a perl -cW test to prevent similar errors in the future."
    },
    {
        "commit": "fe9c66591f3a0324b0bae483d825d75c4ac38d74",
        "date": "2015-12-21 14:29:54 -0500",
        "subject": "Fixed issue #159: Duplicated log section entries in config file",
        "body": "This would cause a warning when run with perl -cw but appears to have been harmless otherwise."
    },
    {
        "commit": "4925756dee22faee7bf6e1ca9bcd417d09cf5ba4",
        "date": "2015-11-22 18:16:54 -0500",
        "subject": "Merge branch 'master' into dev after release 0.88"
    },
    {
        "commit": "e04c21b012d8196f716f093a5bbc46f16cc4a1fb",
        "date": "2015-11-22 17:27:30 -0500",
        "subject": "v0.88: Documentation and Minor Bug Fixes"
    },
    {
        "commit": "fa05715dec955a30f271df9c1c059c9c876e3f4d",
        "date": "2015-11-22 16:44:01 -0500",
        "subject": "Added documentation in the user guide for delta restores, expiration, dedicated backup hosts, starting and stopping pgBackRest, and replication."
    },
    {
        "commit": "8ddfdcdd3bc2ee5e76487d903696840655357f87",
        "date": "2015-11-22 14:02:14 -0500",
        "subject": "Various fixes and features implemented during doc development",
        "body": "* Better messaging for expiration.\n* Fixed already stopped message.\n* retention-archive and retention-archive-type now use retention-full and 'full' when not specified.\n* Fixed issue where backup-user was required (should default to backrest).\n* ExecuteTest now supports retries.\n* Fixed issue where log test was not comparing test logs.\n* Fixed issue where test logs would not match for ssh connection errors"
    },
    {
        "commit": "7ff9fc996c6f43e6c6aeff68624b145efa3fea89",
        "date": "2015-11-20 11:03:06 -0500",
        "subject": "Release notes for fixes and rebuild command-line help."
    },
    {
        "commit": "4c5470e0499e336b704e9472d8a3c7463b256cc2",
        "date": "2015-11-20 10:55:28 -0500",
        "subject": "Implemented issue #156: Don't create backup symlinks in the repository."
    },
    {
        "commit": "11f724bdfc31f7a3fa701d44ce985f47362f65a2",
        "date": "2015-11-20 10:28:58 -0500",
        "subject": "Fixed issue #155: Start/Stop do not automatically read config file."
    },
    {
        "commit": "d89cd955d0fb5b45ec69e02e948c18eab9feb9bf",
        "date": "2015-11-20 09:18:12 -0500",
        "subject": "Fixed issue #154: Log files are overwritten rather than appended."
    },
    {
        "commit": "e5cf1d84a710eb03c179b41c271e203613a89377",
        "date": "2015-10-29 17:45:29 +0100",
        "subject": "CSS Tweaks."
    },
    {
        "commit": "2f83362f32114f2f516d344334e3fa25e0aaad4b",
        "date": "2015-10-28 13:02:35 +0100",
        "subject": "Minor user guide fix."
    },
    {
        "commit": "a498becf11f385c4b525c318412ec8154c0ebd34",
        "date": "2015-10-28 11:29:04 +0100",
        "subject": "Merge branch 'master' into dev after release 0.87"
    },
    {
        "commit": "2813c4d4ebdeccff8a54cbf8157fa3bdca01c44b",
        "date": "2015-10-28 11:15:38 +0100",
        "subject": "v0.87: Website and User Guide"
    },
    {
        "commit": "32ce87d56d0def3a4249606eca9dec765fb1fca4",
        "date": "2015-10-28 10:19:33 +0100",
        "subject": "Fixed minor path issue in README.md."
    },
    {
        "commit": "57a06ba3b12533d623090714c99d1604a74085e6",
        "date": "2015-10-28 10:10:36 +0100",
        "subject": "Implemented issue #148: Website with basic user guide."
    },
    {
        "commit": "3dc014224487c8ab32a86874396b3e78b647315e",
        "date": "2015-10-08 14:36:39 -0400",
        "subject": "Renamed userguide.xml to reference.xml so it doesn't conflict with the new user guide."
    },
    {
        "commit": "994ead1f05eac573948993b51dcb9a1f45f4876e",
        "date": "2015-10-08 13:47:51 -0400",
        "subject": "Removed IO::String dependency from docs."
    },
    {
        "commit": "0bcbe21520f66f58d6795cd0e0969ba90afa8332",
        "date": "2015-10-08 12:44:55 -0400",
        "subject": "Merge branch 'master' into dev after release 0.85"
    },
    {
        "commit": "097eb7ca419a49464fdcfccac873760acf4fee3e",
        "date": "2015-10-08 12:34:50 -0400",
        "subject": "v0.85: Start/Stop Commands and Minor Bug Fixes"
    },
    {
        "commit": "6e170d27e4ec69b94f38f0f5db4a6abe5232f393",
        "date": "2015-10-08 12:23:37 -0400",
        "subject": "Replaced expired CentOS VMs with new ones."
    },
    {
        "commit": "1f9d6c330a35cdfb7402439240e5fc8a77811fea",
        "date": "2015-10-08 12:22:57 -0400",
        "subject": "Updated WAL magic for PostgreSQL 9.5 beta1."
    },
    {
        "commit": "ddd4c14773176d03ffbb30d958f6c3d8596e41a3",
        "date": "2015-10-08 11:43:56 -0400",
        "subject": "Implemented issue #129: Stop/Start Commands. Implemented issue #136: Add stderr back into protocol layer.",
        "body": "There were also miscellaneous bug fixes and improvements to buffering in IO.pm."
    },
    {
        "commit": "e488f7bb198b4af6f7b1595392b57648bf985dcb",
        "date": "2015-09-22 21:07:49 -0400",
        "subject": "Fixed issue #144: Error on resume when temp files (file.tmp.*) present."
    },
    {
        "commit": "a3d82eef9897965dbe1bff08a92418877447acca",
        "date": "2015-09-16 15:23:19 -0500",
        "subject": "Document code in Db.pm."
    },
    {
        "commit": "210f8ef723a56d0f0d4d8c4a0120729ef952a44a",
        "date": "2015-09-14 12:28:22 -0400",
        "subject": "Merge branch 'master' into dev after release 0.82"
    },
    {
        "commit": "9be15d00f8527309fd81118bb483adb0b1956651",
        "date": "2015-09-14 11:18:50 -0400",
        "subject": "v0.82: Refactoring, Command-line Help, and Minor Bug Fixes"
    },
    {
        "commit": "e0dafbff7ff294b137e085cde63f0e69685b31b3",
        "date": "2015-09-09 15:40:54 -0400",
        "subject": "Improvements to issue #132: Improved command-line help. Regression tests are now more comprehensive by default. Better handling for errors in safeExit(). Release notes."
    },
    {
        "commit": "d7e3be1ebff5d0d017a7406552acd9b3a97f0bb8",
        "date": "2015-09-08 18:29:13 -0400",
        "subject": "Fixed issue #138: Fix --no-start-stop working on running db without --force.",
        "body": "Unable to reproduce this anymore.  It seems to have been fixed with the last round of config changes.  Add regression tests to make sure it doesn't happen again."
    },
    {
        "commit": "b17bf31fb6dbe67b6efdcd634a4d29ede1cf9d76",
        "date": "2015-09-08 16:58:00 -0400",
        "subject": "Implement issue #130: Info files should be updated with new version when pgBackRest is upgraded."
    },
    {
        "commit": "59b2261a8ee15d061367ffefe598c05cb93fcb3e",
        "date": "2015-09-08 16:44:47 -0400",
        "subject": "Fix issue #137: Info command throws an exception if no stanzas exist."
    },
    {
        "commit": "8d01138f6def41f12a1c3adcf4e7fbfea65b9aae",
        "date": "2015-09-08 15:47:34 -0400",
        "subject": "Improved issue #135: Suppress PostgreSQL notices.",
        "body": "Regression tests now fail if there is any unexpected output on stderr."
    },
    {
        "commit": "bb6963cf3b7ba30e2fa13e8df57b234d283d2cbe",
        "date": "2015-09-08 14:01:19 -0400",
        "subject": "Implement issue #135: Suppress PostgreSQL notices."
    },
    {
        "commit": "adc5568b15090c797863206830730e1974bfdc7a",
        "date": "2015-09-08 12:58:13 -0400",
        "subject": "Fixed issue #132: Improved command-line help.",
        "body": "Some platform specific fixes and added regression tests to detect issues."
    },
    {
        "commit": "ac3c0d43ab8701855b45bc40f1298e9707dc0e14",
        "date": "2015-09-08 07:31:24 -0400",
        "subject": "Implemented issue #132: Improved command-line help. Implemented issue #133: Dynamic module loading where possible."
    },
    {
        "commit": "0913072c4554d62a50e393158f4685dd52831390",
        "date": "2015-09-02 19:07:21 -0400",
        "subject": "Removed unused parameter from Info::new()."
    },
    {
        "commit": "ee55817fcee2184b353e26f608b461d9d3fc9d7f",
        "date": "2015-09-02 18:55:04 -0400",
        "subject": "Refactoring documentation generator."
    },
    {
        "commit": "bf3ef15ccc2991686c51ba10946ef095d248951f",
        "date": "2015-09-01 19:05:10 -0400",
        "subject": "Implemented issue #117: Refactor expiration tests to be purely synthetic"
    },
    {
        "commit": "6a9377a0a9389d285cd36b1fe179d47f46e15d9a",
        "date": "2015-08-29 14:20:46 -0400",
        "subject": "Code cleanup and refactoring to standardize on patterns that have evolved over time."
    },
    {
        "commit": "d3262822efff785911fa1d2450d1fb1ac0d1b950",
        "date": "2015-08-27 15:55:29 -0400",
        "subject": "Fixed issue #128: Replace config name in test logs",
        "body": "It was actually the bin path that was causing the issue."
    },
    {
        "commit": "83473eb9fb4e437c47a1773c7f4cb7e93f71ee2a",
        "date": "2015-08-09 11:29:00 -0400",
        "subject": "Merge branch 'master' into dev after release 0.80"
    },
    {
        "commit": "a59284a4cca37a0c299f411e44cdfe7e43bb9ba7",
        "date": "2015-08-09 11:20:43 -0400",
        "subject": "v0.80: DBI Support, Stability, and Convenience Features"
    },
    {
        "commit": "65d9de4ee76bcce4f102e2b17d7f7ced809880a0",
        "date": "2015-08-09 09:18:58 -0400",
        "subject": "Document issue #114: Better description of repo-path."
    },
    {
        "commit": "7e49e4596f9fdaae102c5caae7dae35c25e75bef",
        "date": "2015-08-08 20:17:33 -0400",
        "subject": "Removed dead function wait_for_file()."
    },
    {
        "commit": "45259a487f2522ac961ceba0bb38cc8ad0089d00",
        "date": "2015-08-08 18:36:36 -0400",
        "subject": "Change log for issue #94: backup_stop needs a timeout."
    },
    {
        "commit": "1ab6239b4e9b37ed34564e9de9ee102fea82b329",
        "date": "2015-08-08 18:32:41 -0400",
        "subject": "Implemented issue #118: Clean up database vs. database cluster in the docs."
    },
    {
        "commit": "e82afac8854e74fb1451491abde5f353ca496b1b",
        "date": "2015-08-08 18:22:38 -0400",
        "subject": "Implemented issue #94: backup_stop needs a timeout.",
        "body": "The timeout applies to all queries agains the cluster during a backup."
    },
    {
        "commit": "8c0508789e5debc508aae05d28ebe5f7f4700809",
        "date": "2015-08-08 17:11:20 -0400",
        "subject": "Implemented issue #25: Option to call stop_backup with every backup."
    },
    {
        "commit": "12e8a7572c07fc4ea1d44ba944e530c391396047",
        "date": "2015-08-08 00:51:58 -0400",
        "subject": "Worked on issue #122: 9.5 Integration.",
        "body": "Expiration tests worked differently with checkpoint_segments.  Only allow this test < 9.5 until purely synthetic tests are written."
    },
    {
        "commit": "2edf5d4bf7b47b4fd3fd446740a82c35be84dbda",
        "date": "2015-08-07 14:43:53 -0400",
        "subject": "Split most of README.md out into CHANGELOG.md and USERGUIDE.md. Added release dates to change log."
    },
    {
        "commit": "61c729b37b7787740a1e011544dd97971c44d0ce",
        "date": "2015-08-07 10:21:08 -0400",
        "subject": "Worked on issue #122: 9.5 Integration.",
        "body": "Skip copying tablespace_map instead of deleting it later.\nCleaned up the skip code for pg_control as well."
    },
    {
        "commit": "4e7bd4468a785a00c37b5d29262d86f76f725a78",
        "date": "2015-08-06 16:36:55 -0400",
        "subject": "Worked on issue #122: 9.5 Integration.",
        "body": "Most tests are working now.  What's not working:\n\n1) --target-resume option fails because pause_on_recovery setting was removed.  Need to implement to the new 9.5 option and make that work with older versions in a consistent way.\n2) No tests for the new .partial WAL segments that can be generated on timeline switch."
    },
    {
        "commit": "adb8a009255fdfcd726bf7ded3aef60c80b645cf",
        "date": "2015-08-06 00:24:02 -0400",
        "subject": "Improvements to release notes."
    },
    {
        "commit": "ca1fd9740aede681866e8a52bcece052de631597",
        "date": "2015-08-06 00:00:30 -0400",
        "subject": "Working on issue #117: Refactor expiration tests to be purely synthetic.",
        "body": "Split BackupTest.pm into two modules.  It was getting ungainly to work on."
    },
    {
        "commit": "8b57188bc1e5e6941bf46e9fc4cfd6d8e5bd7856",
        "date": "2015-08-05 23:37:46 -0400",
        "subject": "Fixed issue #120: Wrong \"oldest backup timestamp\" in info output."
    },
    {
        "commit": "a10dd8ba98b2c0e16b560e447336c663e7b865de",
        "date": "2015-08-05 22:05:45 -0400",
        "subject": "Implemented issue #121: Check data from db against what's passed to backrest."
    },
    {
        "commit": "576d50fc1ed0283b5b77e99a72bdf787b473a1c3",
        "date": "2015-08-05 18:54:41 -0400",
        "subject": "Added ssh control master config to speed regression testing. Added vagrant config for Centos 7."
    },
    {
        "commit": "ba4e5fc4cb486c28ddba44f60cfc77fe8b171b39",
        "date": "2015-08-05 13:35:19 -0400",
        "subject": "Release notes for issue #20: Convert Postgres calls from psql to DBD::Pg."
    },
    {
        "commit": "23e6267adc90293d80887492208f68de3c40297d",
        "date": "2015-08-05 12:32:12 -0400",
        "subject": "Implemented issue #20: Convert Postgres calls from psql to DBD::Pg."
    },
    {
        "commit": "f8a2da940012187d5a48c10018ded60128793f5d",
        "date": "2015-08-05 08:43:41 -0400",
        "subject": "Work on issue #48: Abandon threads and go to processes",
        "body": "* Major refactoring of the protocol layer to support this work.\n* Fixed protocol issue that was preventing ssh errors (especially connect) from being logged."
    },
    {
        "commit": "021afa804638c609a7a8074a9502f4bf05c01688",
        "date": "2015-08-01 17:26:15 -0400",
        "subject": "Ensure that info output is terminated by a linefeed.",
        "body": "On some systems the JSON->encode() function was adding a linefeed and on others it was not.  This was causing regression test failures in in the test logs and may have also been inconvenient for users."
    },
    {
        "commit": "1b0f997f59ef67358b7091fe832b9a5b026da0de",
        "date": "2015-07-24 18:05:06 -0400",
        "subject": "Implemented issue #119: Make sure all repo permissions are 640/750.",
        "body": "Updated remaining test logs."
    },
    {
        "commit": "97c036973cb945912a08ee7774bc5619a331db7f",
        "date": "2015-07-23 13:11:38 -0400",
        "subject": "Implemented issue #119: Make sure all repo permissions are 640/750."
    },
    {
        "commit": "f3199d13b1c213fe6a52c16ca935fe878dcfbc97",
        "date": "2015-07-16 11:12:48 -0400",
        "subject": "Implement issue #115: When restoring copy pg_control last."
    },
    {
        "commit": "702afeb6f0e14003d4e694e5d3f2b3b39f5b6164",
        "date": "2015-07-13 15:37:50 -0400",
        "subject": "Merge branch 'master' into dev after release 0.78"
    },
    {
        "commit": "c568f5e72745ec9a799c8cd42a5bb8492a5dbec2",
        "date": "2015-07-13 14:44:32 -0400",
        "subject": "v0.78: Remove CPAN dependencies, stability improvements"
    },
    {
        "commit": "65847b5fb1c2886ea7d2d546236c2db3202a34ae",
        "date": "2015-07-13 13:25:04 -0400",
        "subject": "Vagrant backrest mount is no longer RO so development can be done entirely within VMs."
    },
    {
        "commit": "89c0f23f372aa08dd7eaff51eb08fb09f8749d89",
        "date": "2015-07-13 12:13:07 -0400",
        "subject": "Update release notes and some test fixes."
    },
    {
        "commit": "073e3b7c0055a45b0717d4a4b91ede54a3b68569",
        "date": "2015-07-11 22:47:22 -0400",
        "subject": "Minor for regression tests. Improved CentOS 6 vagrant config."
    },
    {
        "commit": "ea7914d9805aea676b25bd31ce38459f32803294",
        "date": "2015-07-11 19:07:28 -0400",
        "subject": "Wait now uses a Fibonacci backoff rather than exponential."
    },
    {
        "commit": "b777525f62fdde71dab702a9afef9b5ad8f6a4b5",
        "date": "2015-07-11 17:16:35 -0400",
        "subject": "Added --exe param to allow testing of packaged versions. Updates to u12 vagrant vm."
    },
    {
        "commit": "e9ce4efedfb653338a5a9a40bbe1238393ea6886",
        "date": "2015-07-10 09:20:28 -0400",
        "subject": "Removed dependency on dequeue_timed() which eliminates the CPAN install. Added vagrant config for CentOS 6."
    },
    {
        "commit": "1df8c305499ee698f91dacf9958c8eb56e71e64c",
        "date": "2015-07-09 10:21:02 -0400",
        "subject": "Swapped config and operation sections to hopefully make the docs flow a little better."
    },
    {
        "commit": "e799361e90adcb1648b2ce208f2fb3ffdd47df2e",
        "date": "2015-07-09 10:11:49 -0400",
        "subject": "Clarification for CPAN requirements."
    },
    {
        "commit": "8b7fd99637d26cff0df192534a729effa435d97a",
        "date": "2015-07-06 21:00:48 -0400",
        "subject": "Added vagrant configuration for Ubuntu 12.04. Changes to regression tests to work better with VMs."
    },
    {
        "commit": "bb443dd098140e07d8ceddc56673b45f303c748d",
        "date": "2015-07-06 17:59:44 -0400",
        "subject": "Renamed pg_backrest.pl to pg_backrest in the docs."
    },
    {
        "commit": "38f48be3cf7be6a24ee513f48fd4a55eb54a1ee5",
        "date": "2015-07-02 10:05:13 -0400",
        "subject": "Improvements to help to make it more dynamic depending on environment. Changed PgBackRest to pgBackRest."
    },
    {
        "commit": "12932dc54cf24a43b7db7c7e829ad04cbc8816d6",
        "date": "2015-06-30 14:57:17 -0400",
        "subject": "Merge branch 'master' into dev after release 0.77"
    },
    {
        "commit": "b1ded135df1e3dd4d4b40a0cbb1a7c1303e7a037",
        "date": "2015-06-30 14:47:58 -0400",
        "subject": "v0.77: CentOS/RHEL 6 support and protocol improvements"
    },
    {
        "commit": "7248795b91dcc6fe749561afb556f625dfe20497",
        "date": "2015-06-29 22:07:42 -0400",
        "subject": "Work on issue #48: Abandon threads and go to processes",
        "body": "Replaced IPC::System::Simple and Net::OpenSSH with IPC::Open3 to eliminate CPAN dependency for multiple distros.  Using open3 will also be used for local processes so it make sense to switch now."
    },
    {
        "commit": "c59adfc68dd10e2ab42a686cace1829b6e4d4e2a",
        "date": "2015-06-27 11:12:44 -0400",
        "subject": "Shorted test command line params."
    },
    {
        "commit": "760baab6b25196df2e1aa430e8736debad34a433",
        "date": "2015-06-22 14:35:25 -0400",
        "subject": "Implemented issue #111: Add the psql path for *BSD.",
        "body": "Author: Eric Radman\nModified by Committer"
    },
    {
        "commit": "dcad0f70070488692c39409b99cb082fe3d0e796",
        "date": "2015-06-22 14:20:56 -0400",
        "subject": "Merged issue #111: Print the real exception when DBH->connect fails.",
        "body": "Author: Eric Radman"
    },
    {
        "commit": "f210fe99c33fbab478fc3e75cc09bd5e5089446f",
        "date": "2015-06-22 13:11:07 -0400",
        "subject": "Implemented issue #109: Move VERSION into source code.",
        "body": "Also stopped replacing FORMAT number which explains the large number of test log changes.  FORMAT should change very rarely and cause test log failures when it does."
    },
    {
        "commit": "af580168712ac0c370cc5532bb34ab1805823ffa",
        "date": "2015-06-22 10:04:58 -0400",
        "subject": "Release notes for issue #108: Incompatibility with Perl 5.10.1."
    },
    {
        "commit": "fdd9e8eb176ec0f5c087726393f15a19d121fabd",
        "date": "2015-06-22 09:58:01 -0400",
        "subject": "Improved release notes on fsync to include restore."
    },
    {
        "commit": "3f841fcd95c17541d5f04012a72153a8d5cbd8ce",
        "date": "2015-06-22 09:51:16 -0400",
        "subject": "Improved issue #110:  'db-version' is required but not defined.",
        "body": "Improved the error message and added hints."
    },
    {
        "commit": "61dfeca3c1d2ddfce53de9fafd137607e21223b8",
        "date": "2015-06-21 12:06:13 -0400",
        "subject": "Fixed issue #108: Incompatibility with Perl 5.10.1"
    },
    {
        "commit": "49f1a3e4812e962201ae80c92ad377f3f8dc4643",
        "date": "2015-06-19 14:27:44 -0400",
        "subject": "Document issue #108: Incompatibility with Perl 5.10.1"
    },
    {
        "commit": "0695c0e7af347478c86a6aaddf068f712f27d91d",
        "date": "2015-06-19 14:02:26 -0400",
        "subject": "Document issue #108: Incompatibility with Perl 5.10.1"
    },
    {
        "commit": "06c290421240ed74f0388a3b71e240fc1a9e6162",
        "date": "2015-06-18 16:55:09 -0400",
        "subject": "Change operation constants and functions to command."
    },
    {
        "commit": "4e2c14623b5fe018ab71f797c2c1b9d9a58634cc",
        "date": "2015-06-18 15:39:30 -0400",
        "subject": "Work on issue #48: Abandon threads and go to processes",
        "body": "More separation of the protocol and remote layers than was done in issue #106.\nSettings are passed to the remote via command-line parameters rather than in the protocol."
    },
    {
        "commit": "22e126eda7802ac30d7f275a58425528238ee265",
        "date": "2015-06-17 15:40:12 -0400",
        "subject": "Fix for logic that removes trailing spaces from code."
    },
    {
        "commit": "a050b76fa9a6785f67a7b492b8b8bad7dd94a482",
        "date": "2015-06-17 15:33:58 -0400",
        "subject": "Implement issue #107: Better debug commands."
    },
    {
        "commit": "a5d9d6d84d584ed1f574f0eb7f77b32ea2c8e6e6",
        "date": "2015-06-17 12:53:33 -0400",
        "subject": "Added file and directory syncs to the File object for additional safety during backup and archiving."
    },
    {
        "commit": "9511f9c35cbc4b5fac38fb67b86ad9c2f859be69",
        "date": "2015-06-17 11:26:07 -0400",
        "subject": "Implemented issue #106: Roll pg_backup_remote into pg_backrest"
    },
    {
        "commit": "0ba40292532c11d00b6f1e3a5096d0e1a021cac5",
        "date": "2015-06-16 16:21:24 -0400",
        "subject": "Update version to 0.80."
    },
    {
        "commit": "da8b337ee80b7c28ffb8fde7a4b0a11418b926c8",
        "date": "2015-06-16 15:44:27 -0400",
        "subject": "Added supported versions of PostreSQL."
    },
    {
        "commit": "c23916d6de7004a5c039ea7810e7306e6fe99b6e",
        "date": "2015-06-14 20:59:48 -0400",
        "subject": "Merge branch 'master' into dev after release 0.75"
    },
    {
        "commit": "1afbab010fc89476ba8a234772f86ca38e6c4f26",
        "date": "2015-06-14 20:59:32 -0400",
        "subject": "v0.75: New repository format, info command and experimental 9.5 support"
    },
    {
        "commit": "8459e25e32433c7ecba8d4e5189fee45681ef8ae",
        "date": "2015-06-14 11:49:55 -0400",
        "subject": "Test fix for issue #96."
    },
    {
        "commit": "b365d9aacc38dd8f8d6d43a99d034cb1cf8b20ff",
        "date": "2015-06-14 11:48:33 -0400",
        "subject": "Updated release notes for 0.75."
    },
    {
        "commit": "b865070eddb4eedbeab70e5de287e250680b3f85",
        "date": "2015-06-14 10:12:36 -0400",
        "subject": "Experimental 9.5 support.  Unit tests are not working yet."
    },
    {
        "commit": "0b6f81a812a02c34b2f8cc9e5b14139d27dc4895",
        "date": "2015-06-14 09:36:58 -0400",
        "subject": "Implemented issue #50: Reverse ordering by file size."
    },
    {
        "commit": "57640d1ac33c6a38c6afe632e1b8a3d6271740fc",
        "date": "2015-06-14 08:37:37 -0400",
        "subject": "Implemented issue #96: Executable names"
    },
    {
        "commit": "6c807f2ddd6a996a46e0d3733f09e61110361742",
        "date": "2015-06-13 18:30:10 -0400",
        "subject": "Fixed release notes for info command."
    },
    {
        "commit": "148836fe44e81622d1836f851b8b87e21d32188e",
        "date": "2015-06-13 18:25:49 -0400",
        "subject": "Implemented issue #26: Info command.",
        "body": "* Includes updating the manifest to format 4.  It turns out the manifest and .info files were not very good for providing information.  A format update was required anyway so worked through the backlog of changes that would require a format change.\n\n* Multiple database versions are now supported in the archive.  Doesn't actually work yet but the structure should be good.\n\n* Tests use more constants now that test logs can catch name regressions."
    },
    {
        "commit": "5a73b1a2408fd22f90417fcbf70edd41a6a99f3b",
        "date": "2015-06-10 15:54:24 -0400",
        "subject": "Fixed minor typos in the documentation."
    },
    {
        "commit": "aca4511350ff6a2d30e712ac0eda39774a93ffa0",
        "date": "2015-06-10 15:44:13 -0400",
        "subject": "Documentation for issue #93: Prevent misconfigured retention-archive setting",
        "body": "Not an actual fix - just some documentation to (hopefully) keep users from getting bitten until then."
    },
    {
        "commit": "af98f164cd5f5dfce97b88434e8fe19f7bc0d6aa",
        "date": "2015-06-02 09:42:56 -0400",
        "subject": "Fixed issue #97: Interleaved log lines during parallel operations."
    },
    {
        "commit": "7e06e53a69e79c49a44bbab14a99f15ac20548d9",
        "date": "2015-06-01 09:39:02 -0400",
        "subject": "Merge branch 'master' into dev after release 0.70"
    },
    {
        "commit": "f83f0fa54d1a3b13524fa0ded8a6dffe88276bbc",
        "date": "2015-06-01 09:24:38 -0400",
        "subject": "v0.70: Stability improvements for archiving, improved logging and help"
    },
    {
        "commit": "95d62a82d94985165145d1d543cfdf4acb197992",
        "date": "2015-05-31 09:50:42 -0400",
        "subject": "Minor log changes for formatting and consistency."
    },
    {
        "commit": "200e3b26fe902ae1c71a5954c72455902676f90a",
        "date": "2015-05-29 22:11:51 -0400",
        "subject": "Prevent log test regexp replacement when multithreaded.  Logging should be completely disabled in this case."
    },
    {
        "commit": "1586e0eb7555a6f2d44925b3572ab2457ff3e069",
        "date": "2015-05-29 17:58:13 -0400",
        "subject": "Implement issue #92: Check for ERRORs in backup full tests"
    },
    {
        "commit": "e7d2d704fe4befc028257e5f88a97b810a423449",
        "date": "2015-05-29 16:31:12 -0400",
        "subject": "Fixed issue #91: Race condition in async archive-push."
    },
    {
        "commit": "5fd4f3bd5b68db1f68f1df9c00e513a15fbd387b",
        "date": "2015-05-29 14:39:43 -0400",
        "subject": "Improvements to log testing.",
        "body": "Replaced tokens are now numbered to give a more accurate rendition of the logs.\nSome formatting improvements."
    },
    {
        "commit": "5fce709ae7d925c6969aa002da2dd262fe93d73a",
        "date": "2015-05-29 12:33:38 -0400",
        "subject": "Document issue #88: Thoughts on repo & release management."
    },
    {
        "commit": "d321ef0b6d5af0c1dce8fd5701edbadffffce5af",
        "date": "2015-05-29 12:26:31 -0400",
        "subject": "Implement issue #89: Make confess backtraces log-level dependent.",
        "body": "ASSERTs still dump stack traces to the console and file in all cases.  ERRORs only dump stack traces to the file when the file log level is DEBUG or TRACE."
    },
    {
        "commit": "13e4eec629df044c90c64424a6992ff3e99b5173",
        "date": "2015-05-29 11:41:19 -0400",
        "subject": "Implement issue #90: Move archive-max-mb archive-stop checks to end of archive-push."
    },
    {
        "commit": "639c27e113fb8fd76be5ca5533e420c2ed11b44c",
        "date": "2015-05-29 08:18:12 -0400",
        "subject": "Release notes for issue #68: Allow duplicate WAL to be pushed if the checksum matches."
    },
    {
        "commit": "7ace66e544cd4da848b30c893131b61403242b33",
        "date": "2015-05-29 08:12:39 -0400",
        "subject": "Implement issue #68: Allow duplicate WAL to be pushed if the checksum matches."
    },
    {
        "commit": "6d2f2d3f91227dffe635ab14de3db3d83c09e0c6",
        "date": "2015-05-28 20:52:42 -0400",
        "subject": "Fix for issue #74: More helpful message when targeting missing stanzas."
    },
    {
        "commit": "3083e5fc7ef96368351a9558fe04e4e7c71c9490",
        "date": "2015-05-28 13:17:34 -0400",
        "subject": "Fix for issue #83: Provide more helpful error message during archive-stop situations. Fix for issue #84: archive-async in combination with archive-max-mb doesn't work as documented. Unit tests for archive stop."
    },
    {
        "commit": "a4974f8996c519024f6b645650c9f598b41be553",
        "date": "2015-05-26 15:29:42 -0400",
        "subject": "Fix for issue #70: command line help improvements"
    },
    {
        "commit": "ca0c866d3babd68fb433a12e9efda066ffb8e9eb",
        "date": "2015-05-26 12:26:59 -0400",
        "subject": "Implement issue #71: log a message when waiting for a checkpoint Some other log improvements"
    },
    {
        "commit": "5c43e7035a2adfafa0c8f3a72dd46913ce0cb771",
        "date": "2015-05-26 11:36:03 -0400",
        "subject": "Implement issue #79: Support comment characters in config file"
    },
    {
        "commit": "e9099b99aad5cec0b87668fa90babfc18472e63f",
        "date": "2015-05-26 10:01:05 -0400",
        "subject": "Updated required modules.  Minor doc fixes."
    },
    {
        "commit": "d5335b40e83539bf137ff9051ecac84e6d85a2b6",
        "date": "2015-05-22 14:49:14 -0400",
        "subject": "Fix for issue #80: enabling archive-copy causes failing differential & incremental backups"
    },
    {
        "commit": "5ada7fb5adf25d7127d08879cd270164d231a1be",
        "date": "2015-05-12 15:44:10 -0400",
        "subject": "Use JSON::PP instead of JSON since it is shipped with core Perl."
    },
    {
        "commit": "ab4efce5d1064cf887dfea4e541d95c8605444a8",
        "date": "2015-05-11 18:36:02 -0400",
        "subject": "Merge branch 'master' into dev after release 0.65"
    },
    {
        "commit": "49fe40850fad0a850e52d9ebe79e32b7029c5735",
        "date": "2015-05-11 18:29:40 -0400",
        "subject": "v0.65: Improved resume and restore logging, compact restores"
    },
    {
        "commit": "a7d6382cf2317a0d2502f4410fb372778059206f",
        "date": "2015-05-08 19:33:34 -0400",
        "subject": "Unit test fix for absolute path change in a0d985b7ad37bb2582d6d92ddd225a9090da1b64."
    },
    {
        "commit": "9aa41ee76bc4f14b8f8e2856893ac09ad68c33d0",
        "date": "2015-05-08 18:34:27 -0400",
        "subject": "Added tablespace setting to allow compact database restores for development, staging, etc."
    },
    {
        "commit": "a0d985b7ad37bb2582d6d92ddd225a9090da1b64",
        "date": "2015-05-07 17:37:25 -0500",
        "subject": "Fixed an issue where an absolute path was not written into recovery.conf when the restore was run with a relative path."
    },
    {
        "commit": "1ac4b781fd304fcc6aa663afc324cdb2d1fdcb06",
        "date": "2015-05-07 15:56:56 -0600",
        "subject": "Better info logging for restore.  Most of the messages were debug before and some important ones were missing."
    },
    {
        "commit": "095a9a0b831877b9b5d62b4b37da4caca0edb7df",
        "date": "2015-05-07 10:29:30 -0600",
        "subject": "Added resume setting to allow disabling resume feature."
    },
    {
        "commit": "328c2ca5c0dd5ed67ddc2c5d76102cee16235f20",
        "date": "2015-05-06 18:24:34 -0600",
        "subject": "Much better resume: 1) Re-checksums files that have checksums in the manifest 2) Recopies files that do not have a checksum 3) Saves the manifest at regular intervals to preserve checksums 4) Unit tests for all cases (that I can think of)"
    },
    {
        "commit": "56588f6fdd30378728372e1dea2a4920c043acb3",
        "date": "2015-05-05 11:08:48 -0600",
        "subject": "Log testing can now be enabled for certain deterministic tests.  This works by comparing the generated logs against a previous copy.  Currently only enabled for the backup/synthetic tests."
    },
    {
        "commit": "1d1c7e47d149fc9b3b9b0c1db6238e998d56c804",
        "date": "2015-05-01 19:13:12 -0400",
        "subject": "Doc fixes for archive-max-mb setting."
    },
    {
        "commit": "b0db7c04979d4f012bfd66067a25088bd84687ad",
        "date": "2015-04-29 17:43:28 -0400",
        "subject": "Fixed case error in Perl module name."
    },
    {
        "commit": "174896e7971931662a7672dd0271fe0f23b846d0",
        "date": "2015-04-23 20:52:41 -0400",
        "subject": "Centralized wait functions."
    },
    {
        "commit": "2dac171642b6bd876ee44c4d4c9bcb238f7df999",
        "date": "2015-04-22 16:39:53 -0400",
        "subject": "More modular locking - this is the first part of a series of improvements."
    },
    {
        "commit": "87f69508e3500ff7c93a7637bfeb4643f68f2c74",
        "date": "2015-04-21 10:48:01 -0400",
        "subject": "Set version to 0.75"
    },
    {
        "commit": "6987cfaa536555bcb1cb0df3e40c03802a786aa0",
        "date": "2015-04-21 09:46:28 -0400",
        "subject": "Merge branch 'master' into dev after release 0.61"
    },
    {
        "commit": "a9b9ec249234b9106f7c8a7615e227d1b7783a07",
        "date": "2015-04-21 09:45:03 -0400",
        "subject": "v0.61: bug fix for uncompressed remote destination"
    },
    {
        "commit": "4b51f5dc500d9ba63246b953db57deb30afb3a57",
        "date": "2015-04-19 18:00:51 -0400",
        "subject": "Removed unused font."
    },
    {
        "commit": "4bc9ee9b8a39ffeab8b2bab434698106ada795c6",
        "date": "2015-04-19 17:53:45 -0400",
        "subject": "Merge branch 'master' into dev after release v0.60."
    },
    {
        "commit": "5185d49873914c3207894452abfb0a504625821d",
        "date": "2015-04-19 17:53:29 -0400",
        "subject": "v0.60: better version support and WAL improvements"
    },
    {
        "commit": "279bd07623be81d9197e5612ac8a85b2d57c5335",
        "date": "2015-04-19 17:29:52 -0400",
        "subject": "Each option is assigned a source to designate where it came from (param, config, default). operationWrite() created to easily pass parameters on to a new process."
    },
    {
        "commit": "e20a3c991d3868afa050a20e99af7f98895c5d99",
        "date": "2015-04-19 17:28:19 -0400",
        "subject": "Added tests for set = latest."
    },
    {
        "commit": "cb153f7242a8249fe34ee3f391260f6a108acde2",
        "date": "2015-04-19 17:27:40 -0400",
        "subject": "Docs and comment fixes."
    },
    {
        "commit": "6646089f9a15b7500ee18082e8a01222a8eaac16",
        "date": "2015-04-19 17:27:01 -0400",
        "subject": "wait_remainder() now waits until .05 seconds after the second to resolve some resolution problems."
    },
    {
        "commit": "f1cc1d6123fac516dc797ab7fce5ac1a6be62390",
        "date": "2015-04-11 15:02:04 -0400",
        "subject": "Refactored backup manifest update by centralizing the code."
    },
    {
        "commit": "b8ce891603d66dddf9d71bdfabc8e6d9908f60e8",
        "date": "2015-04-11 12:31:39 -0400",
        "subject": "Altered rsync comparison test to use a specially crafted table that has a 70% compression ratio. Improved the output of file_size_format()."
    },
    {
        "commit": "9fe7f87e3a2dc206b4d7464f34b5f200fa30df9f",
        "date": "2015-04-07 19:21:48 -0400",
        "subject": "Allow any boolean option that is not command-line only to be negated."
    },
    {
        "commit": "43d86e64a4ce73d69c4d9c73f32ef5cff23d5344",
        "date": "2015-04-07 18:36:59 -0400",
        "subject": "First pass at tests comparing rsync to backrest.  Decent results, but room for improvement.",
        "body": "All tests local over SSH with rsync default compression, 4 threads and default compression on backrest.  Backrest default is gzip = 6, assuming rsync is the same.\n\nOn a 1GB DB:\n\nrsync time = 32.82\nbackrest time = 19.48\n\nbackrest is 171% faster.\n\nOn a 5GB DB:\n\nrsync time = 171.16\nbackrest time = 86.97\n\nbackrest is 196% faster."
    },
    {
        "commit": "7081c8b86701c88abfee03b01382364f79a7cae9",
        "date": "2015-04-07 07:34:37 -0400",
        "subject": "New model where threads are created early and destroyed late. Backups now work like restores in terms of how jobs are queued. Split out BackupFile and RestoreFile for easier multi-threading/processing."
    },
    {
        "commit": "808c7863b64ba56f3fe588f31ef86139a133896c",
        "date": "2015-04-03 09:56:03 -0400",
        "subject": "Duplicate WAL issue in 9.3 was fixed in 9.3.6."
    },
    {
        "commit": "3f651a8ce8d489a680e08467b9baccd7edef188b",
        "date": "2015-04-02 22:07:23 -0400",
        "subject": "Unit tests will now work across all installed versions of Postgres. Created a function to list all supported versions.  Now used for all version checking."
    },
    {
        "commit": "0b27c749991ac58de400c81c5e0fe4d0e890f957",
        "date": "2015-04-01 16:28:16 -0400",
        "subject": "Increased version to 0.60 and added release notes."
    },
    {
        "commit": "984fceea67770938d6a4030278d2226cd9e14b5a",
        "date": "2015-04-01 15:58:33 -0400",
        "subject": "Moved archive functions from pg_backrest.pl and Backup.pl to Archive.pm. Moved Remote code from pg_backrest.pl to Config.pm. Added version specific code to regression tests and Db.pm. archive-push checks for duplicate WAL in the archive. archive-push reads the db sys id to match up WAL to the correct archive."
    },
    {
        "commit": "9caccc2ce242c1ee6980c50918f022992c5235fa",
        "date": "2015-03-29 13:35:36 -0400",
        "subject": "Doc fixes."
    },
    {
        "commit": "92a4d648ace8d112bb80f2ebffc6441fca94d11e",
        "date": "2015-03-26 17:42:45 -0400",
        "subject": "Fixed issues in collision unit tests."
    },
    {
        "commit": "16cc2110c54648d2ddabe86e6533518b80edc29c",
        "date": "2015-03-25 15:17:59 -0400",
        "subject": "Merge branch 'master' into dev"
    },
    {
        "commit": "b37d59832f6c3dc2050879e7231228d497b4059c",
        "date": "2015-03-25 15:15:55 -0400",
        "subject": "v0.50: restore and much more"
    },
    {
        "commit": "82fa497511850c7dfe7521b99150bfd95a090a6c",
        "date": "2015-03-25 14:43:21 -0400",
        "subject": "Last doc fixes."
    },
    {
        "commit": "4a6f4e23408b3c65a5594a09c6218ceef90615ee",
        "date": "2015-03-24 18:50:54 -0400",
        "subject": "Getting docs in shape for the next release."
    },
    {
        "commit": "a998119cbaff2ffbff7e469ef5e5edbfee03d132",
        "date": "2015-03-24 18:50:14 -0400",
        "subject": "Various option and unit test fixes."
    },
    {
        "commit": "a3604bc5121cd4a427c90bcd72468b5b32c5d938",
        "date": "2015-03-24 11:43:37 -0400",
        "subject": "Changed retention section to expire."
    },
    {
        "commit": "58d6c37f4af5bc040a15bacd90c1ab056f7bca03",
        "date": "2015-03-23 17:17:43 -0400",
        "subject": "Changed permission to mode in manifest."
    },
    {
        "commit": "8a3c6388b2b7981318f2e7c626cd1b88f907218a",
        "date": "2015-03-23 16:01:15 -0400",
        "subject": "Removed WAL from some option names - still waffling on this naming thing."
    },
    {
        "commit": "66c474abe21d412ef6f4f5db0fc30063a8466cc4",
        "date": "2015-03-23 15:45:25 -0400",
        "subject": "A few unit test fixes."
    },
    {
        "commit": "1729fa1c51c369c57a79061186818ce4781f408c",
        "date": "2015-03-17 18:31:05 -0400",
        "subject": "Added unit tests for expiration."
    },
    {
        "commit": "f4f31302f0529c510ca535e3c57e67181f637092",
        "date": "2015-03-16 14:45:53 -0400",
        "subject": "Broke archive-required into two options: backup-wal-check and backup-wal-store."
    },
    {
        "commit": "258fb9c6e24445e8be390b729cae005208decdca",
        "date": "2015-03-16 14:01:01 -0400",
        "subject": "More work on automated docs.  Merging this to go back to some feature/bug work for a while."
    },
    {
        "commit": "882f068254242ed06bceb57e14f5f52e5ed317f8",
        "date": "2015-03-12 12:15:19 -0400",
        "subject": "All config options can now be provided on the command-line. Lots of name changes, but more thought needed there. Still needs cleanup."
    },
    {
        "commit": "7675a11dedaeebaeb5f546bb6c1849f989af794a",
        "date": "2015-03-08 14:05:41 -0400",
        "subject": "First pass at building automated docs for markdown/html.  This works pretty well, but the config sections of doc.xml still require too much maintenance.  With the new Config code, it should be possible to generate those sections automatically."
    },
    {
        "commit": "ae6bdecfaf47893346443620a0a57586cf22ebdf",
        "date": "2015-03-08 13:26:09 -0400",
        "subject": "Split command-line parameter processing out into a separate file.  This is in preparation allowing all parameters to be specified/overridden on the command line, with pg_backrest.conf being option."
    },
    {
        "commit": "f115e01b71b23f1fc4fc8b98c42993a31b87a3e0",
        "date": "2015-03-04 22:38:27 -0500",
        "subject": "More work on docs."
    },
    {
        "commit": "8dc3ba184d661a5c865c395618d20f22e7f4ccc4",
        "date": "2015-03-04 20:09:26 -0500",
        "subject": "More work on docs."
    },
    {
        "commit": "163f8982624632674c55bf5fddadf3423460a228",
        "date": "2015-03-04 18:50:02 -0500",
        "subject": "HTML docs look to be in a workable format."
    },
    {
        "commit": "bfb2c05357521718ef115ca40af60ac51f11ed69",
        "date": "2015-03-04 00:36:54 -0500",
        "subject": "Started on new HTML docs.  The markdown is not cutting it."
    },
    {
        "commit": "942b29d5b42a9ad62c96023def0c8cf1a3fc6b19",
        "date": "2015-03-03 23:15:40 -0500",
        "subject": "Added unit test for recovery type=preserve."
    },
    {
        "commit": "d19baefdb99e4853f3dec7abaae757b18e117a16",
        "date": "2015-03-03 22:33:41 -0500",
        "subject": "Removed db-timestamp-start and stop from manifest.  Better to get these values from"
    },
    {
        "commit": "7509b01e22352404ef89ded72b8bd413c7f0a726",
        "date": "2015-03-03 21:21:07 -0500",
        "subject": "Added format to manifest to identify a manifest/dir structure version."
    },
    {
        "commit": "f5761a41c12df812ef6c3dd3f9a15654deead958",
        "date": "2015-03-03 10:03:55 -0500",
        "subject": "Modules cleanup."
    },
    {
        "commit": "3d0d308a98ff95b60a4b1258344443cdef934230",
        "date": "2015-03-03 00:57:20 -0500",
        "subject": "Made all warnings FATAL. Fixed one bug that was exposed."
    },
    {
        "commit": "c0ec62b131a6f3a780c659ed82a8e3403d16092b",
        "date": "2015-03-02 23:42:55 -0500",
        "subject": "Fixed bug in File->hash() and removed improper last statements from do loops."
    },
    {
        "commit": "7dbb11e8b85a81305f25d840433d6b125fdf5a76",
        "date": "2015-03-02 22:58:32 -0500",
        "subject": "Added buffer-size param and added config validation improvements."
    },
    {
        "commit": "8e8f2f3c77793d24ef1a4aaa7f373abdc9610ac0",
        "date": "2015-03-02 20:36:12 -0500",
        "subject": "New config options compress-level and compress-level-network to control compression levels."
    },
    {
        "commit": "49112eb6d3a43446bfe7c0830a99b6eef5b0b8fa",
        "date": "2015-03-02 09:46:11 -0500",
        "subject": "Better compression window settings."
    },
    {
        "commit": "d874e122aaa5382b6610089cae1b2379ee97985f",
        "date": "2015-03-01 23:41:01 -0500",
        "subject": "Optimized compression to disable headers/crc when the source and destination are both uncompressed. Set different compression levels based on usage."
    },
    {
        "commit": "0df1b7c4733cd354b2e6e55e2de7e034fb3fe1c9",
        "date": "2015-03-01 22:43:32 -0500",
        "subject": "Changed file sizes are now detected and stored in the manifest. Remove thread file minimums - they are unrealistic for a real db and hinder unit tests."
    },
    {
        "commit": "23102f19e57f1548aab5b9709fc7aebed3567ba5",
        "date": "2015-03-01 22:23:52 -0500",
        "subject": "All copy() cases generate checksums during copy. Unit tests for bAppendChecksum option for copy()."
    },
    {
        "commit": "83658a477820eae8e20238d9fc11034724cb6699",
        "date": "2015-03-01 16:43:54 -0500",
        "subject": "Docs for checksum option being removed."
    },
    {
        "commit": "76391dde90856f5cbbc4be3b506524000938a412",
        "date": "2015-03-01 16:42:27 -0500",
        "subject": "Archive checksums are not calculated in stream."
    },
    {
        "commit": "393525d28030711e0aaf0226d7744673d7b01097",
        "date": "2015-03-01 15:17:57 -0500",
        "subject": "Full refactor of binary_xfer. Compression now uses Compress::Raw::Zlib."
    },
    {
        "commit": "77bc4238dc1afd854049fd901eb1dce76185371f",
        "date": "2015-03-01 13:41:35 -0500",
        "subject": "ZLib stuff starting to look good.  All references removed from File and using binary_xfer for all de/compression."
    },
    {
        "commit": "7ede058b456cb708acdcdba93b52a6729adf9380",
        "date": "2015-02-28 20:31:56 -0500",
        "subject": "Backup checksums are no longer optional."
    },
    {
        "commit": "28326d6b4c4a815882acb1d6e95a28701fd12b2b",
        "date": "2015-02-28 19:07:29 -0500",
        "subject": "File->copy now returns hash and size in all cases, though the local copies are not optimal.  They just call hash_size()."
    },
    {
        "commit": "260a6cb8f1c7a98ad44f1c4ba0d654c6ca49f544",
        "date": "2015-02-28 15:54:49 -0500",
        "subject": "Working on calculating hash and file size in binary_xfer()."
    },
    {
        "commit": "0f94476a1f3c4af2cb6aa9bc631bc4a01e05a8ad",
        "date": "2015-02-28 12:10:50 -0500",
        "subject": "Changed buffer sizes."
    },
    {
        "commit": "f6b9ab732671b75a7ebb708c8ce85b79b575d46b",
        "date": "2015-02-28 10:28:25 -0500",
        "subject": "Minor param fix."
    },
    {
        "commit": "f93c6caec206071c91d814b3d490da5d357ff44f",
        "date": "2015-02-28 10:23:33 -0500",
        "subject": "Backup/restore copy will be run in the main process when thread-max=1.  I've resisted this change because it adds complexity, but I have to accept that threads are not stable on all platforms.  Or maybe any platform."
    },
    {
        "commit": "5d10a18b257a92ce520c575a488d8921e8284f5e",
        "date": "2015-02-28 10:21:36 -0500",
        "subject": "Added thread-max parameter to test.pl to allow backup threads to be specified."
    },
    {
        "commit": "d6205d95011e5efb3856f5e62d09571374070492",
        "date": "2015-02-27 23:31:39 -0500",
        "subject": "Looks like all unit tests pass - now for a long test run to see if that is really true.  And to see if the old lockup is gone."
    },
    {
        "commit": "25442655c84cd10d026e23f5ad66aa17e5c96ae5",
        "date": "2015-02-27 18:42:28 -0500",
        "subject": "Hash of compressed file is working. Something still broken in binary_xfer because some 0 length archive files are showing up.  Investigating."
    },
    {
        "commit": "53f783d3fecd725aed2b7e1a203e11e8f8c85e0b",
        "date": "2015-02-27 16:36:40 -0500",
        "subject": "binary_xfer compress/decompression working without threads.  All unit tests passing.  Hooray."
    },
    {
        "commit": "c18c629878705c01798e099de4f300b26129b679",
        "date": "2015-02-27 14:11:59 -0500",
        "subject": "Compress looks good, back to decompress."
    },
    {
        "commit": "bd44b2c471a093e350fa5f18bb33832cf75c784b",
        "date": "2015-02-27 13:48:29 -0500",
        "subject": "Making binary xfer more modular."
    },
    {
        "commit": "2506bbb21a044725309e3e8c2ba6761082114676",
        "date": "2015-02-26 19:12:22 -0500",
        "subject": "Working on decompression."
    },
    {
        "commit": "64e1b1cea789b6751fc285a9861912cf09aca04b",
        "date": "2015-02-26 14:16:12 -0500",
        "subject": "Simple compression case is working. Still need to implement decompress, handle flags, and do checksum decompression."
    },
    {
        "commit": "b9378d94a21f28c466a2e9fea9fa19d60987be86",
        "date": "2015-02-26 09:22:05 -0500",
        "subject": "Working on removing threads from instream compress/decompression."
    },
    {
        "commit": "d2602a5c0762ca7ad1cd275587556f2a280b8098",
        "date": "2015-02-03 20:33:33 -0500",
        "subject": "Tracking down a lockup in the restore threads.  It doesn't happen in backup  - they are the same except that restore uses the ThreadGroup object.  I'm beginning to think that threads and objects don't play together very nicely.  Objects in threads seems OK, but threads in objects, not so much."
    },
    {
        "commit": "7bee43372d41df531d6c571140dbb8eed805adf2",
        "date": "2015-02-02 21:10:44 -0500",
        "subject": "Increase timeout."
    },
    {
        "commit": "d4aae88becf6e82df8f5e3eb71c24a17098bed88",
        "date": "2015-02-02 20:11:32 -0500",
        "subject": "Try non-blocking dequeue in backup."
    },
    {
        "commit": "850c978240329d536f641e6832871e738526e435",
        "date": "2015-02-02 19:56:48 -0500",
        "subject": "All restore compares no-start-stop for now."
    },
    {
        "commit": "d93b246a692b29f09fcb1b8539dbaad443da1e14",
        "date": "2015-02-02 19:34:34 -0500",
        "subject": "Empty restore queues in a non-blocking way."
    },
    {
        "commit": "7f38461c6814e0e092ee83a3222112aa21c85456",
        "date": "2015-02-02 18:48:33 -0500",
        "subject": "Remove ThreadQueue->end().  Not supported on all platforms."
    },
    {
        "commit": "bde8943517ad260d87414ba6f8aa03c3e799e790",
        "date": "2015-02-02 18:33:11 -0500",
        "subject": "Fixes to restore compare unit tests."
    },
    {
        "commit": "8abcf6caf109479e069f2ec36bf37d7007261c22",
        "date": "2015-02-02 08:28:37 -0500",
        "subject": "For no just ignore sizes in the tests since they are normal and do not indicate a bad backup."
    },
    {
        "commit": "a6d3b7e1a960052728cc274645ebb011b741ab18",
        "date": "2015-01-31 23:04:24 -0500",
        "subject": "Working on checking restores against the manifest.  Current issue is that the manifest does not always record the final size of the file - it may change while the file is being copied.  This is fine in principal but makes testing a pain."
    },
    {
        "commit": "018a2afacadbf9e6a848c1e0ff66f0cd9d732755",
        "date": "2015-01-31 18:23:37 -0500",
        "subject": "Moved bNoStartStop tablespace mapping to Manifest object."
    },
    {
        "commit": "d7b669d5605bf75116c2d9584c745dfff9fee54c",
        "date": "2015-01-31 18:15:08 -0500",
        "subject": "Moved manifest build to manifest object."
    },
    {
        "commit": "cd500484a2ddebdd43730c051835c3b5b18d83fe",
        "date": "2015-01-31 17:37:55 -0500",
        "subject": "Revert \"Working on doc formatting.\"",
        "body": "This reverts commit a0559799fd2330e7d6c7a28f431bbdd2828eb80e."
    },
    {
        "commit": "a0559799fd2330e7d6c7a28f431bbdd2828eb80e",
        "date": "2015-01-31 17:36:25 -0500",
        "subject": "Working on doc formatting."
    },
    {
        "commit": "682d419d082f96628811909a969101d61b5a2c4f",
        "date": "2015-01-31 17:32:16 -0500",
        "subject": "Fixed file list."
    },
    {
        "commit": "1ba176285e38e85e03dab31718cfc1a742bcd574",
        "date": "2015-01-31 17:10:19 -0500",
        "subject": "Work on restore/recovery docs."
    },
    {
        "commit": "f94812932a3fc3c3a59ac2da499268c9768ba2e6",
        "date": "2015-01-31 16:27:32 -0500",
        "subject": "Working on operations docs."
    },
    {
        "commit": "267efbd71d56af8b2dc68dc5d21c710b69e16bbb",
        "date": "2015-01-31 15:37:59 -0500",
        "subject": "Fixed restore::thread-max"
    },
    {
        "commit": "0c9da6a5ab8cdfe8283cebfbb7ea8fb751857e1d",
        "date": "2015-01-31 15:06:53 -0500",
        "subject": "Removed version file - redundant to the version in backup.manifest."
    },
    {
        "commit": "e524c4dd1a9e1fe0ae4a46f90eb12ae7a50bb333",
        "date": "2015-01-31 13:48:09 -0500",
        "subject": "Timeline unit tests are working. Options from config file are being written to recovery.conf. Fixed issue with .history files not being picked up by archive-xfer."
    },
    {
        "commit": "cd9df8b4f87cb2042c1b2ddfbba1a1fe76a1fdee",
        "date": "2015-01-31 09:05:05 -0500",
        "subject": "Renamed uninit to cleanup."
    },
    {
        "commit": "11c257296a7632ae760b1ddae66beec2f9e114ca",
        "date": "2015-01-30 20:16:21 -0500",
        "subject": "In the end it was a single non-undefed reference holding up the show.  The Backup file should be split into Archive, Backup, Expire, and made into objects.  That would cut down on this kind of nastiness."
    },
    {
        "commit": "50e015a8385e347e2ba75fb84f9ab7c5fef7fa70",
        "date": "2015-01-30 18:58:49 -0500",
        "subject": "Revert \"Abortive attempt at cleaning up some thread issues - I realized the issue is in mixing threads and objects too liberally.  Trying another approach but want to keep this code for historical and reference purposes.\"",
        "body": "This reverts commit e95631f82ac8c15cb2492bb321703797be54eff6."
    },
    {
        "commit": "e95631f82ac8c15cb2492bb321703797be54eff6",
        "date": "2015-01-30 14:55:55 -0500",
        "subject": "Abortive attempt at cleaning up some thread issues - I realized the issue is in mixing threads and objects too liberally.  Trying another approach but want to keep this code for historical and reference purposes."
    },
    {
        "commit": "fb934ecce9c204a5ed1d444b8c3876c8393af440",
        "date": "2015-01-30 14:54:08 -0500",
        "subject": "Allow immediate stops when discarding data at end of unit test.  Makes the shutdowns faster."
    },
    {
        "commit": "19e455afc1c152f212d0de771bb373a03ab5a8a1",
        "date": "2015-01-28 16:25:38 -0500",
        "subject": "Some fixes in unit tests - more needed."
    },
    {
        "commit": "499d6c84220d9b9e916686aeef2c605aa6995b0b",
        "date": "2015-01-28 13:14:46 -0500",
        "subject": "Added tests for all --delta --force combinations. Added error check for postmaster running. Added error check for path not empty."
    },
    {
        "commit": "16dd2717942eb52004e4cee3510fc524d8042fc9",
        "date": "2015-01-28 11:12:21 -0500",
        "subject": "Added an incremental backup to vary the unit tests."
    },
    {
        "commit": "139b1cf87242995e41a68dbcb35a10c72da9d592",
        "date": "2015-01-28 10:29:29 -0500",
        "subject": "Fixed small race condition in cleanup - the archiver was recreating paths after they had been deleted.  Put in a loop to make sure it gets done."
    },
    {
        "commit": "60550cd45b802b9d1859d9bdd22f5211b9908944",
        "date": "2015-01-28 00:28:21 -0500",
        "subject": "Archive async now works local, but there is a pending bug to make sure archive::path != backup::path. Added code to be sure that restore will not try to log into the backup path unless it is local."
    },
    {
        "commit": "b98b2df9f83c70516de37d574d36dcf6194b8f1d",
        "date": "2015-01-28 00:26:20 -0500",
        "subject": "Fixed wait_for_file() so that it will not error if the path does not yet exist."
    },
    {
        "commit": "a59bd8c3281237f35da0ad4b7af33953cf53a26b",
        "date": "2015-01-27 22:59:59 -0500",
        "subject": "Restores except for type=none are mostly working.  There are some failing unit tests to fix."
    },
    {
        "commit": "13544d51bf9be1128486b167a3ecb5dc3fb6a09c",
        "date": "2015-01-27 11:44:23 -0500",
        "subject": "Recovery is working for none and default, but unit tests are not complete."
    },
    {
        "commit": "f59aae101df6cb877f644a47e461e5e35440b21d",
        "date": "2015-01-26 14:59:58 -0500",
        "subject": "Ready to start writing recovery unit tests."
    },
    {
        "commit": "ac22c314a90143f1a23f782b88d3f60e14dc6b32",
        "date": "2015-01-26 11:01:24 -0500",
        "subject": "Working on plumbing for recovery options."
    },
    {
        "commit": "eeffd62a12d7afa70794dfefcdbfdc08a4083760",
        "date": "2015-01-25 17:27:46 -0500",
        "subject": "Working on recovery options."
    },
    {
        "commit": "6db49e10831cafa4088b300b2884139bfd0662d0",
        "date": "2015-01-25 12:20:12 -0500",
        "subject": "Cleaned up some time functions."
    },
    {
        "commit": "9069c34e3412889848da22abd5f4697ef8151010",
        "date": "2015-01-24 11:05:26 -0500",
        "subject": "Added more tablespace changes to backup unit tests."
    },
    {
        "commit": "e1c5f7f8edf23d561ba7e730eb718cb2166e32e4",
        "date": "2015-01-23 18:28:39 -0500",
        "subject": "Now able to check for specific errors in unit tests - as long as they are raised with an error code."
    },
    {
        "commit": "c6dad127486b569d683ae9cdff4f10693a3b4453",
        "date": "2015-01-23 14:12:53 -0500",
        "subject": "Using usleep for more resolution,"
    },
    {
        "commit": "d3763908e741d9d675d9967e2531dfd195ca03ba",
        "date": "2015-01-22 21:20:49 -0500",
        "subject": "Added longer sleep to show how big an issue this can be."
    },
    {
        "commit": "a3b3f98f66e6e36154831800434e1a7ad3dac431",
        "date": "2015-01-22 20:55:16 -0500",
        "subject": "Fixed some issues with remote backups after restore (unit test bugs only)."
    },
    {
        "commit": "21c715b25c2fd484e8b4e8d53b64a9b2d59ad7d6",
        "date": "2015-01-22 20:11:33 -0500",
        "subject": "Restore tablespace remaps are working."
    },
    {
        "commit": "df4b50b9778d50b1c39fa5828c18cb2e68a5c92c",
        "date": "2015-01-22 19:04:55 -0500",
        "subject": "Restore with base path remap working."
    },
    {
        "commit": "82969eb4971eb78b6a992b2f48e46c1a49189737",
        "date": "2015-01-22 17:43:19 -0500",
        "subject": "Wrote some helper functions to make backup unit tests simpler. Fixed an issue with checksum generation in resume."
    },
    {
        "commit": "b53cb9f64e4d665ce138d98aecc99404db0a127c",
        "date": "2015-01-22 10:54:02 -0500",
        "subject": "Unit tests for backup resume. Improved warning message when a backup cannot be resumed."
    },
    {
        "commit": "fc2838d60fea12347de7be0c239ed72a80446774",
        "date": "2015-01-21 18:37:49 -0500",
        "subject": "All references to old-style manifest eliminated (hopefully)."
    },
    {
        "commit": "ade9ad78b4523b51051c536ca3814e5f1acf8521",
        "date": "2015-01-21 13:57:58 -0500",
        "subject": "Allow file keys to be validated on remove."
    },
    {
        "commit": "ba7a939798d2499d40e5c1fd8ece9b6b6141777b",
        "date": "2015-01-21 10:44:08 -0500",
        "subject": "More migration to manifest object."
    },
    {
        "commit": "a938813c017095dbba6160b433cc164bdea04fac",
        "date": "2015-01-20 19:04:45 -0500",
        "subject": "More migration to manifest object."
    },
    {
        "commit": "c33bc1e899af1ef6ec23ec9bd73bdcc257636428",
        "date": "2015-01-20 18:00:03 -0500",
        "subject": "More migration to manifest object."
    },
    {
        "commit": "26c568b7bcd58934a44f93a55a8ef28e5259ef17",
        "date": "2015-01-20 16:20:27 -0500",
        "subject": "Manifest checksum failure shows expected value to allow manual fix - though not recommended."
    },
    {
        "commit": "92c9ed8963b9f73c104d684fd73ad376b751323b",
        "date": "2015-01-20 16:05:15 -0500",
        "subject": "Added checksum to manifest to detect corruption."
    },
    {
        "commit": "44fad1f4a442cf18cf712c70f2eb4018f3f66a02",
        "date": "2015-01-20 14:42:22 -0500",
        "subject": "Improvements to manifest save."
    },
    {
        "commit": "8a7ee1bb1f69928d37c8803cdd018197b68567be",
        "date": "2015-01-20 14:13:35 -0500",
        "subject": "Integration of new Manifest object."
    },
    {
        "commit": "15a45f31f4632250620aa955cddb3e4f46427eec",
        "date": "2015-01-20 12:17:39 -0500",
        "subject": "Added feature list."
    },
    {
        "commit": "e20f93ef1bca2fcac214b8ce6a732053c55f201c",
        "date": "2015-01-12 09:05:26 -0500",
        "subject": "Cleaned up test usage."
    },
    {
        "commit": "84abcd7d61ce46eead29f790d6b528f3105f499b",
        "date": "2015-01-11 11:53:03 -0500",
        "subject": "Minor fixes."
    },
    {
        "commit": "34116d3816ac0425bb0e787be266abade3e501c0",
        "date": "2015-01-11 11:52:16 -0500",
        "subject": "Added usage to test.pl and automatic search for psql-bin."
    },
    {
        "commit": "425e9485aaf171864e4e0ad7a327f9a60378a33d",
        "date": "2015-01-08 16:36:45 -0500",
        "subject": "Re-added File-hash() - accidentally deleted it when working on owner()."
    },
    {
        "commit": "131d91090614382780d16daec1815b53ebda97f2",
        "date": "2015-01-08 15:43:43 -0500",
        "subject": "New structure for --delta and --force params."
    },
    {
        "commit": "2e09df2cec296b3b639ae14238c56e48836b1ff0",
        "date": "2015-01-08 12:04:56 -0500",
        "subject": "More work on new manifest object."
    },
    {
        "commit": "0085e88966a48f1e5667f1e7618474c03578b04d",
        "date": "2015-01-07 12:58:21 -0500",
        "subject": "Added File-owner()"
    },
    {
        "commit": "4f5ad8496d8d31b27a1da60de064716ce073062e",
        "date": "2015-01-07 10:59:43 -0500",
        "subject": "Integrating new manifest object."
    },
    {
        "commit": "d6d57e654e48101fdbd2ef06316f71b395dbdfd1",
        "date": "2015-01-06 13:08:56 -0500",
        "subject": "Fixed the way wait was done after the manifest is created.  Previously, waits were done for base and each tablespace which is not very efficient.  Now one wait is done after the entire manifest is built.  Also storing the exact time that copy began."
    },
    {
        "commit": "43098086afd9cbf4e487a18fd2c2d6c486e4e224",
        "date": "2015-01-03 16:49:26 -0500",
        "subject": "Implemented timestamp last modified to record the time of the last modified file in the backup.  Also added timestamp-db-start and timestamp-db-stop to for more info.  timestamp-db-start can be used for PITR."
    },
    {
        "commit": "91b06bef475d6ad17036c27337be59db35460f0d",
        "date": "2015-01-03 14:22:59 -0500",
        "subject": "File->manifest detects files that are modified in the future."
    },
    {
        "commit": "2449d7384cd725587d8ee1ddff884581105fe796",
        "date": "2015-01-03 12:56:44 -0500",
        "subject": "Wrote a new test to check rsync collisions."
    },
    {
        "commit": "2e080eedb85f7394d40fb14ec6c92b0a3e11aba5",
        "date": "2015-01-02 14:18:07 -0500",
        "subject": "Added an optional delay after manifest build so that files are not copied in the same second that the manifest is built.  This can result in (admittedly unlikely) race conditions that can produce an invalid backup.  I was also able to reduce the sleep types when waiting for thread termination - so unit test times are improved by almost 100%."
    },
    {
        "commit": "297b22cb2bde9dddf99f557a40f8a6fb6e0807c8",
        "date": "2015-01-02 14:15:15 -0500",
        "subject": "Added INFO level logging when paths/files/links are removed during the clean phase of restore deltas."
    },
    {
        "commit": "32b37335a14dd1f7ed98200df3869b0443afb2d8",
        "date": "2014-12-31 19:03:03 -0500",
        "subject": "Trying to find realistic conditions where a file can be changed without the timestamp changing between backups.  So far, this is the only case I can make work - it looks like adding a 1 second pause after creation of the manifest would cover this case."
    },
    {
        "commit": "59e901684d0119ec6547356386190bec90837c72",
        "date": "2014-12-31 14:59:33 -0500",
        "subject": "Working on improved backup/restore unit tests."
    },
    {
        "commit": "fb948de55946fee59f9503df4c377ef19c82a1f8",
        "date": "2014-12-31 12:28:16 -0500",
        "subject": "Fixed some minor issues in ownership code found by unit tests."
    },
    {
        "commit": "7e083e8749d5c767040e451d908bb2d9d9f419e1",
        "date": "2014-12-31 11:20:46 -0500",
        "subject": "Restore as root is now working."
    },
    {
        "commit": "0805055d4b96de49f4ee0e7514f3fde31d95f98e",
        "date": "2014-12-30 15:41:43 -0500",
        "subject": "More work on restore ownership code."
    },
    {
        "commit": "46ba3a18dfb2a0fa5c034571e46edd4297b6272f",
        "date": "2014-12-30 11:59:57 -0500",
        "subject": "Ownership code runs through - may not work for all cases."
    },
    {
        "commit": "9f8f33f957ee7d1db68c48c84ebef2cb43c85cce",
        "date": "2014-12-23 18:52:38 -0500",
        "subject": "Working on restore options and integration with unit tests."
    },
    {
        "commit": "a96b83beb84d1c82b24c8d79e08c674757a4bf25",
        "date": "2014-12-23 15:03:06 -0500",
        "subject": "Restore can now remap base/tablespace locations. Made Restore more modular."
    },
    {
        "commit": "653ab486af8897f1058bf0e846aa739f14a4a33f",
        "date": "2014-12-23 12:48:25 -0500",
        "subject": "All restore module variables are now object local."
    },
    {
        "commit": "51544edc70319b38e000003d50af16eb333c191a",
        "date": "2014-12-23 11:48:51 -0500",
        "subject": "Some cleanup in restore."
    },
    {
        "commit": "2db71e91adf078eda5d687155e8e8beaf98996f3",
        "date": "2014-12-22 11:24:32 -0500",
        "subject": "Basic restore functionality is working."
    },
    {
        "commit": "9086728b73e4c5f2063d9ed3e39a66ed9eade216",
        "date": "2014-12-21 10:11:17 -0500",
        "subject": "Restore removes paths/files/links and recreated paths/links."
    },
    {
        "commit": "1557327d2bb2f3aedb2e3363d89569de02acca82",
        "date": "2014-12-19 17:49:56 +0000",
        "subject": "Restore cleans out missing files and some basic unit tests."
    },
    {
        "commit": "161a73159e9723ada085423ead853ba4d68da0af",
        "date": "2014-12-18 22:05:06 +0000",
        "subject": "Added some constants."
    },
    {
        "commit": "b9d9c7fa66e681266ad213ec4b31691bec313d14",
        "date": "2014-12-18 16:47:03 +0000",
        "subject": "Incremented version to .50 since restore functionality if going in."
    },
    {
        "commit": "1dc00c9d4b14af15febebde963cc70a44f357ec8",
        "date": "2014-12-18 16:42:54 +0000",
        "subject": "Starting on restore functionality, finally."
    },
    {
        "commit": "1a3c5cd9dbd832bb8a6a01a897c2368b21d5418c",
        "date": "2014-12-18 16:14:30 +0000",
        "subject": "Added latest link so it is easy to get to the last backup."
    },
    {
        "commit": "7d19504d3a84867cf910ce03b554f7f5ef0d49b6",
        "date": "2014-12-18 14:58:07 +0000",
        "subject": "Removed some tests in full that were redundant with the tests in backup."
    },
    {
        "commit": "93c7ef3c9ea429c64f035bec1acb6f41a18a3397",
        "date": "2014-12-18 14:56:01 +0000",
        "subject": "Moved some code into a more logical order."
    },
    {
        "commit": "c76a8d64d0abca36fc217c94d22542190e1045ee",
        "date": "2014-12-16 17:41:54 +0000",
        "subject": "Moved more config logic to Config.pm"
    },
    {
        "commit": "61245583472b1a621e69ffbdddedd5bd68d9133a",
        "date": "2014-12-15 22:20:42 +0000",
        "subject": "Moved config functions to a new file."
    },
    {
        "commit": "6dd9e881dc06862d7361a2a1db0d91cf93296e61",
        "date": "2014-11-27 14:07:09 +0000",
        "subject": "Added reminder."
    },
    {
        "commit": "602db70d6a9100d80ec421f66d4e76812cd81b85",
        "date": "2014-10-20 11:44:36 -0400",
        "subject": "More backup unit tests."
    },
    {
        "commit": "9765b4e20b0d1e3878806387ccf0f0cda124abbe",
        "date": "2014-10-19 17:41:11 -0400",
        "subject": "Backup unit test - more work on tablespaces and references."
    },
    {
        "commit": "66a5da6fd1757afc1647a051464417497e49e18f",
        "date": "2014-10-19 16:30:16 -0400",
        "subject": "More work on backup unit tests - added tablespace tests."
    },
    {
        "commit": "4de1d9aa5aed934a293d2540816186656c4b58e1",
        "date": "2014-10-19 11:46:01 -0400",
        "subject": "Backup unit tests are working."
    },
    {
        "commit": "1d43c633265e218fc2346786c5f9046d1bd792db",
        "date": "2014-10-18 13:25:20 -0400",
        "subject": "Working on better backup unit tests."
    },
    {
        "commit": "ed5777101f4402c940f551b9e0321dec98d1e260",
        "date": "2014-10-16 13:22:34 -0400",
        "subject": "Changes in how paths are removed."
    },
    {
        "commit": "b6e0bb2ae550a0ea83f2b1139b771add43d1eb6f",
        "date": "2014-10-16 08:58:11 -0400",
        "subject": "Small unit test changes."
    },
    {
        "commit": "5c216c93d5f62a0c395d2830dcc840c84256f4a8",
        "date": "2014-10-15 19:11:09 -0400",
        "subject": "Working on backup unit tests."
    },
    {
        "commit": "f9ff7c6ec7303ae938df9542af98b45b29e779f2",
        "date": "2014-10-14 23:58:17 -0400",
        "subject": "Comments."
    },
    {
        "commit": "0ba838cd3e06c2464db399eed6b08216b65138ab",
        "date": "2014-10-14 21:44:42 -0400",
        "subject": "Checksums seem to be working again - still waiting on the new backup unit tests to confirm."
    },
    {
        "commit": "59a267d6387c463ff0cd469ca8ac1c00e4125d38",
        "date": "2014-10-14 15:46:03 -0400",
        "subject": "Fixed typos."
    },
    {
        "commit": "b19dd9b5529fab599b536dd5819bc7050d884df7",
        "date": "2014-10-14 15:44:50 -0400",
        "subject": "Changes to the aborted backups code."
    },
    {
        "commit": "3a54eaf9dec90896cedb9a3ab34219c02babcae9",
        "date": "2014-10-14 08:27:50 -0400",
        "subject": "Last backup type is now checked - still need a unit test for it."
    },
    {
        "commit": "c8aeadce8eb7f1b9f9bb76b4fc291a920118cb8c",
        "date": "2014-10-11 00:16:34 -0400",
        "subject": "Comments."
    },
    {
        "commit": "aafc0fef6918938a4f32551220afac4340d72c32",
        "date": "2014-10-10 16:03:33 -0400",
        "subject": "Removed Moose from the Db object."
    },
    {
        "commit": "2c173ba53e5dafd5fd090d31c05227250b403ff8",
        "date": "2014-10-10 15:13:28 -0400",
        "subject": "Removed moose from File object."
    },
    {
        "commit": "c1d6890c604c1d9f4e6c940f0ff6e0f552e40e19",
        "date": "2014-10-09 16:01:06 -0400",
        "subject": "More Moose removal."
    },
    {
        "commit": "3d86adadb5a7d3cba91e6839721681d3b1237f37",
        "date": "2014-10-08 13:54:31 -0400",
        "subject": "Remote object now using ProcessAsync for de/compression. Removed dependency on Moose from Remote."
    },
    {
        "commit": "16ebbd2279e25e46b91b65b2684f4e3a7fce9525",
        "date": "2014-10-06 20:53:34 -0400",
        "subject": "Documentation fixes."
    },
    {
        "commit": "74cae73ee0ddee2d16bd5d7e923f23538cd94bc7",
        "date": "2014-10-05 20:21:15 -0400",
        "subject": "Moved version number to v0.31."
    },
    {
        "commit": "4bc4d97f2bfc8702937fe931b5b8d956a73d42f6",
        "date": "2014-10-05 19:49:30 -0400",
        "subject": "v0.30: core restructuring and unit tests"
    },
    {
        "commit": "de35cedc277615bfb777f8a522d35a0d807de9dd",
        "date": "2014-10-05 18:52:05 -0400",
        "subject": "Working on getting async process thread into Remote.pl"
    },
    {
        "commit": "122dc65351f9553f06d374c6c7b29e6357261dc4",
        "date": "2014-10-03 09:31:23 -0400",
        "subject": "Added compress and checksum settings to backup manifest."
    },
    {
        "commit": "fbc2ae132541eafe92e27cd6d6be0d003bf4e16d",
        "date": "2014-10-02 14:34:58 -0400",
        "subject": "Fixed function names in comments."
    },
    {
        "commit": "4cbc6c650a6c1fe3924e91e3fb5b53181a9dfcd9",
        "date": "2014-10-02 13:54:26 -0400",
        "subject": "File->hash now works on compressed files."
    },
    {
        "commit": "991afe3b161e06d940be7acb70a2f8596a495eb2",
        "date": "2014-10-02 10:55:38 -0400",
        "subject": "Merge from dev-0.30."
    },
    {
        "commit": "168398e58a374f062a156088fc4e3571d5772f98",
        "date": "2014-09-30 15:51:08 -0400",
        "subject": "Merge from dev-0.30."
    },
    {
        "commit": "5151b103e8eb985b9cbb91a90a580db122b4afe8",
        "date": "2014-09-29 23:10:53 -0400",
        "subject": "Formatting."
    },
    {
        "commit": "5f30ae3c463ba28759dd5e87a339599f3e95fabd",
        "date": "2014-09-29 19:51:51 -0400",
        "subject": "Merge branch 'dev-0.30' of https://github.com/dwsteele/pg_backrest into dev"
    },
    {
        "commit": "aab5ec2943919c7990d0da202275bd978ce384c1",
        "date": "2014-09-29 19:39:28 -0400",
        "subject": "Converting _ to -.  Last one I hope."
    },
    {
        "commit": "bdbdaf39d35e8bfcc88976179716843571890c23",
        "date": "2014-09-29 19:08:08 -0400",
        "subject": "Work in progress - new hash method."
    },
    {
        "commit": "82b0bc0e72c6a47efb7891098ffa854ca2c69621",
        "date": "2014-09-29 22:51:02 +0000",
        "subject": "Fixed relative path issue in archive-get."
    },
    {
        "commit": "7ed6587c42c4594dc4bd9939e12386cb1f4e73ad",
        "date": "2014-09-19 17:51:51 -0400",
        "subject": "ISSUE-11: Added --no-start-stop and --force options."
    },
    {
        "commit": "07801a9a3c9573d44a664c109d4e48affe5406a2",
        "date": "2014-09-19 11:22:26 -0400",
        "subject": "Changed timestamp keys to be more consistent."
    },
    {
        "commit": "121cb8a811710ab739f680e2b97d0f03c6075024",
        "date": "2014-09-19 10:47:22 -0400",
        "subject": "Title fix."
    },
    {
        "commit": "7b1039dbe284beb436557a7db2c7da20967c3ad7",
        "date": "2014-09-18 17:39:24 -0400",
        "subject": "Fixed error message."
    },
    {
        "commit": "535f32c8275c780b64e04dc30da2d4ec4333b744",
        "date": "2014-09-18 17:24:40 -0400",
        "subject": "Removed old unit tests."
    },
    {
        "commit": "6ac124493d1cd0aacbb0d342745c43f240f1eddd",
        "date": "2014-09-18 16:42:13 -0400",
        "subject": "Added prior backup label to backup.manifest"
    },
    {
        "commit": "82f22dd9fedbb01cbad24697b605a16a25d5f541",
        "date": "2014-09-18 16:41:36 -0400",
        "subject": "Documentation for config functions."
    },
    {
        "commit": "fd12299ecd1b39246ede3a2100419cc624c64bbc",
        "date": "2014-09-18 15:18:52 -0400",
        "subject": "Some fixes in test logging."
    },
    {
        "commit": "77802d3689b7e8f2c161165c50cdff12f0ce6ae6",
        "date": "2014-09-18 13:13:04 -0400",
        "subject": "Fixed some language."
    },
    {
        "commit": "97c12f4eda0847025c78e98bab91bde92dfd3b93",
        "date": "2014-09-18 12:57:50 -0400",
        "subject": "Update backrest project description."
    },
    {
        "commit": "a5f09caff7b4017a09e4f80888c211d5d3d7c713",
        "date": "2014-09-18 12:37:14 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "3ab81752c00f69c6981bb53d06df60ebc0083666",
        "date": "2014-09-18 11:50:27 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "d3238daf7ec8926635306c2b8d3294b37405c557",
        "date": "2014-09-18 11:28:23 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "06ad947102fb54fbe4a48f5b1f77353610c9c716",
        "date": "2014-09-16 11:22:55 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "65f89bd643f2b14338d80fef1644c1fd4a9ada8f",
        "date": "2014-09-16 08:55:40 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "4d8c97eb55edd3a6472942cf924cf5965e6b69ef",
        "date": "2014-09-16 08:21:29 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "48b0e0d4612d3f9156f7d4fccce2fdd3c13c3ac5",
        "date": "2014-09-16 08:15:49 -0400",
        "subject": "Using ' instead of \" where appropriate."
    },
    {
        "commit": "411e870c7a04551614132b3a4f461e88d74ef9b8",
        "date": "2014-09-15 22:04:26 -0400",
        "subject": "Notes."
    },
    {
        "commit": "1125397aae9fc4c59b516b133d5c82337041e070",
        "date": "2014-09-15 19:00:40 -0400",
        "subject": "Updated readme."
    },
    {
        "commit": "f86674da02a7f15f98cf1f64c331277e7fa7f3d3",
        "date": "2014-09-15 18:26:03 -0400",
        "subject": "Documentation."
    },
    {
        "commit": "8c9aa3ab7c511c317b32896aaa2958a198e67927",
        "date": "2014-09-15 18:18:40 -0400",
        "subject": "Documentation."
    },
    {
        "commit": "c5192e0fa5ea46e01d9ec0cf39bb1364c10aeed1",
        "date": "2014-09-15 18:12:30 -0400",
        "subject": "More docs, changed hardline default to Y."
    },
    {
        "commit": "b9b038b328526fb0ea24b2fe879be23d63708e6e",
        "date": "2014-09-14 20:06:45 -0400",
        "subject": "Added docs and fixed spaces."
    },
    {
        "commit": "ab7323711f83d833d391751f0f8a5205282f6214",
        "date": "2014-09-14 17:07:44 -0400",
        "subject": "Fixed issue in archive extension."
    },
    {
        "commit": "cfe8851174e861ae707989874bbe2de3ae50de38",
        "date": "2014-09-14 16:48:33 -0400",
        "subject": "A few more fixes for differential."
    },
    {
        "commit": "c0d81f0d10986e1308b3d90d082d2c65b07bd53a",
        "date": "2014-09-14 16:30:53 -0400",
        "subject": "Fixed issues in differential expiration."
    },
    {
        "commit": "9555775d72800cf69f7859651548298e3c22d350",
        "date": "2014-09-14 15:55:27 -0400",
        "subject": "Retention defaults, single-quotes."
    },
    {
        "commit": "6315d326ea7bb184eea63598cc80b6cda42a6f84",
        "date": "2014-09-14 15:31:56 -0400",
        "subject": "Fixed a few issues in manifest."
    },
    {
        "commit": "23870f60f5038302c8e47aee7d231f4fb89d64ec",
        "date": "2014-09-14 13:17:07 -0400",
        "subject": "Small change to fix branch."
    },
    {
        "commit": "4903a818f3e63494f80525be151911d5f3358b0b",
        "date": "2014-09-14 13:15:21 -0400",
        "subject": "Merge branch 'dev' of https://github.com/dwsteele/pg_backrest into dev"
    },
    {
        "commit": "4551a2d089c448c1e4a61606d63e1510a3fa3b91",
        "date": "2014-09-14 13:12:37 -0400",
        "subject": "Docs and unit test fix."
    },
    {
        "commit": "d83820d962c7ea1c28788129487b2c210e12b374",
        "date": "2014-09-14 12:50:21 -0400",
        "subject": "More documentation."
    },
    {
        "commit": "d7faf578f3e4d5d1e694e704e874b71003a357c7",
        "date": "2014-09-14 11:46:22 -0400",
        "subject": "Test configuration formatting."
    },
    {
        "commit": "b0b6c6a91658993a1186a8e005bd78cb307cd92f",
        "date": "2014-09-14 11:40:17 -0400",
        "subject": "More doc tests."
    },
    {
        "commit": "2dc90edb07f22c30ff89d05cb469866f4a300b4c",
        "date": "2014-09-14 11:38:49 -0400",
        "subject": "More work on docs."
    },
    {
        "commit": "8964ba4502591cd77f65de79607eb8e98c35a2fa",
        "date": "2014-09-13 14:18:59 -0400",
        "subject": "Testing formatting."
    },
    {
        "commit": "e47ec0ab2b370cc531961efed4e91d253abe7e08",
        "date": "2014-09-13 14:13:50 -0400",
        "subject": "Working on documentation formatting."
    },
    {
        "commit": "e7ccced3b4a97433fb7c0061462ae80dc10278a5",
        "date": "2014-09-13 14:04:54 -0400",
        "subject": "More work on documentation."
    },
    {
        "commit": "934159eef0a508913f4b36de71bd019a87a4f3bf",
        "date": "2014-09-13 11:43:39 -0400",
        "subject": "More table tests."
    },
    {
        "commit": "826f9cde2c92f780bd43b0f767612b97b777b420",
        "date": "2014-09-13 11:35:58 -0400",
        "subject": "Playing with tables."
    },
    {
        "commit": "9eb2015d9fbb933dff00d1fb866f7edbc719e7f4",
        "date": "2014-09-13 11:25:35 -0400",
        "subject": "Working on documentation."
    },
    {
        "commit": "fa82d5f0af3d5151a58ad44157a74a82d16428d0",
        "date": "2014-08-15 10:48:50 -0400",
        "subject": "Added help (issue #10)"
    },
    {
        "commit": "679005e537bb0c2bf0a115330a8d9646a7e69c65",
        "date": "2014-08-14 09:40:20 -0400",
        "subject": "Some cleanup of the diff/incr code."
    },
    {
        "commit": "3798071c5f2b9c0f8d89c83c65d962ccfbd7fd1d",
        "date": "2014-08-12 20:01:36 -0400",
        "subject": "Added backup.manifest change to last commit."
    },
    {
        "commit": "e8e7c82b147e2deac127187ae758c0c47061ea5a",
        "date": "2014-08-12 20:00:52 -0400",
        "subject": "pg_backrest.pl returns version. Version is also stored in the backup path in the version and backup.manifest files. Merged the two date string functions."
    },
    {
        "commit": "b48a7e6cc2b4702bf1ad26d652142fbb1c28d931",
        "date": "2014-08-12 19:17:16 -0400",
        "subject": "The backup label (and path name) are now created at the end of the backup instead of the beginning.  This makes selecting a backup for PITR much easier."
    },
    {
        "commit": "672c6b2ccb3b5926cd0e6bb0d78524d07bc74db6",
        "date": "2014-08-12 19:04:46 -0400",
        "subject": "Backup start/stop timestamp now stored in backup.manifest"
    },
    {
        "commit": "34cb57f925e0f794e1845eae9b3f85dbdc65fe0e",
        "date": "2014-08-12 18:36:38 -0400",
        "subject": "Using checkpoint command instead of pg_switch_xlog."
    },
    {
        "commit": "6b4a8fbc217bc2aa227d879753695bec860e6c3d",
        "date": "2014-08-10 21:22:17 -0400",
        "subject": "Unit tests now working on Ubuntu 12.04"
    },
    {
        "commit": "0298e8dd16b3bce2c6e8d51ab231b079f148ecd8",
        "date": "2014-08-10 15:02:14 -0400",
        "subject": "Created unit tests for files deleted by the db during backup."
    },
    {
        "commit": "09e2351ae8b17a8eaccba81337e16fc4d7aeb7a4",
        "date": "2014-08-09 18:35:55 -0400",
        "subject": "Test log mode is working."
    },
    {
        "commit": "83d0db27d10ca966f7675239069fbdbd1c4ffc3a",
        "date": "2014-07-27 18:18:59 -0400",
        "subject": "Added release comment."
    },
    {
        "commit": "2d9f027e3a8e7ded65efda2fe93780f6e624a1bf",
        "date": "2014-07-27 18:13:23 -0400",
        "subject": "Cleanup, work on test framework."
    },
    {
        "commit": "a849f2d2fdf4709790246bf9d3f65c5b71cee5ee",
        "date": "2014-07-27 14:26:07 -0400",
        "subject": "Removed remaining decencies on Config::IniFiles"
    },
    {
        "commit": "6f4310db426da453f498eb7eac47d6c32608993e",
        "date": "2014-07-27 14:03:21 -0400",
        "subject": "Changes for testing - finished changing config to local implementation."
    },
    {
        "commit": "50dd95c005136aeb03ae5907028c696af6b173db",
        "date": "2014-07-25 19:07:40 -0400",
        "subject": "Sync up - hopefully."
    },
    {
        "commit": "287e15f01facef1d7174d31d6b1f8e4f86323562",
        "date": "2014-07-25 18:31:56 -0400",
        "subject": "Test commit."
    },
    {
        "commit": "6614f50cc824de153454d86c9c7c3a3d273ecf99",
        "date": "2014-07-25 18:18:20 -0400",
        "subject": "Test change"
    },
    {
        "commit": "9dd3df6fd324e33411f539aa63b901cd9895205b",
        "date": "2014-07-23 08:04:48 -0400",
        "subject": "Added to feature backlog."
    },
    {
        "commit": "75160a41b9690e01575df334c00f671a5f4f1d01",
        "date": "2014-07-21 08:11:04 -0400",
        "subject": "Added notes for some changes."
    },
    {
        "commit": "06b5ee3f753e87d15a0c7d34488346c0d3c225f4",
        "date": "2014-07-16 23:38:38 -0400",
        "subject": "Working on new config load/save functions and unit tests."
    },
    {
        "commit": "f6e01de7ced32b89a1cf0f68a2c631fcaa1b127d",
        "date": "2014-07-16 20:28:47 -0400",
        "subject": "Improved backup::full unit test."
    },
    {
        "commit": "5d39b4f64660ccbd4cee64033c186d9a78f0b231",
        "date": "2014-07-16 20:07:50 -0400",
        "subject": "Local backups are now completely local."
    },
    {
        "commit": "9ad1d79f0000497225366981979cb228be66e266",
        "date": "2014-07-16 19:15:56 -0400",
        "subject": "Unit tests for archive-get."
    },
    {
        "commit": "9d9dae418bc03a4586bdb579d113a651927c4d1a",
        "date": "2014-07-15 22:32:41 -0400",
        "subject": "Added archive-put unit tests. Lots of other unit test improvements."
    },
    {
        "commit": "8d398e4bffe30bdb1b33fb5aa4b5d5880592681c",
        "date": "2014-07-13 10:37:16 -0400",
        "subject": "Starting on archive unit tests."
    },
    {
        "commit": "375545320d3278dc9a585ad136e5cc3d93e28475",
        "date": "2014-07-13 09:13:19 -0400",
        "subject": "Added tests for large files (16MB archive log). Fixed a sync error in binary_xfer()."
    },
    {
        "commit": "ed4bcf3e4681a5002b50d8fc165ba7af0be4035c",
        "date": "2014-07-12 19:36:12 -0400",
        "subject": "Whitespace is now cleaned in test.pl"
    },
    {
        "commit": "353cdb6b31e68d7751b44496ebbab72e26be9a92",
        "date": "2014-07-12 19:03:39 -0400",
        "subject": "Local archiving is working again."
    },
    {
        "commit": "e36a785b1bd7480b0445c118c2ed926132038f75",
        "date": "2014-07-12 10:26:51 -0400",
        "subject": "Fixed execute function - now only displays output when there is an error."
    },
    {
        "commit": "7f4c4e13d2031e78f276ed1fc560e97d3c1f9191",
        "date": "2014-07-02 19:15:21 -0400",
        "subject": "Back to Open3."
    },
    {
        "commit": "fead7aa5f1ae741b25b0bc17458a307f7e08515e",
        "date": "2014-07-02 18:58:38 -0400",
        "subject": "Not loving IPC::Run, but saving my work just in case."
    },
    {
        "commit": "d0ca69d433edf407d6b3ea47032444adb61b3209",
        "date": "2014-06-30 18:35:05 -0400",
        "subject": "Integrating IPC::Run - IPC::Open3 is out."
    },
    {
        "commit": "c300c841eb3177519d16073f2312dd597348fb53",
        "date": "2014-06-30 08:29:25 -0400",
        "subject": "Added release notes."
    },
    {
        "commit": "934b7dbe9b5865d505e1726c299a09597f8c1ce8",
        "date": "2014-06-29 17:23:34 -0400",
        "subject": "De/compression is now done in threads instead of forked processes."
    },
    {
        "commit": "c85413ec6837a36ccf3911f07d63f9eb8648e770",
        "date": "2014-06-29 10:53:39 -0400",
        "subject": "Lots of improvements to unit tests.  A few bug fixes."
    },
    {
        "commit": "f9ec149ffe866c1a43b020f1a0e2dfa57b9fdc50",
        "date": "2014-06-28 14:32:34 -0400",
        "subject": "Working on unit tests."
    },
    {
        "commit": "97b9560e5c03eb314282dac3984fc21b5d2a2fad",
        "date": "2014-06-28 11:47:21 -0400",
        "subject": "Fixed binary_xfer() issue.  Now seems to work in all cases."
    },
    {
        "commit": "9c160a03e36029c8d4eaaf81344f972820a5a2e8",
        "date": "2014-06-23 19:08:36 -0400",
        "subject": "Some refinements to compression."
    },
    {
        "commit": "e1829bb2d269192fa5af4effcf74e53b293d4ea0",
        "date": "2014-06-23 18:54:00 -0400",
        "subject": "First fully working backup in a while."
    },
    {
        "commit": "88bbbb4222a5de1eb572219b16e92ce92d9817e3",
        "date": "2014-06-22 20:19:13 -0400",
        "subject": "Fighting with a relative path issue in archive logging."
    },
    {
        "commit": "5d01aac92e4f27da4f6459885bfd4d00e0d22da6",
        "date": "2014-06-22 16:05:00 -0400",
        "subject": "Working on backup - mostly working except for the last archive step."
    },
    {
        "commit": "f91dce259f30b20608e882052c91c8466c95c20d",
        "date": "2014-06-22 14:51:28 -0400",
        "subject": "Working on backup unit tests."
    },
    {
        "commit": "8fff74ccfb518dcd837d2407b6a6427dbf8fedbd",
        "date": "2014-06-22 11:56:01 -0400",
        "subject": "Backup unit test able to create and drop clusters."
    },
    {
        "commit": "3c748c4b10ad200c7284c0900f8518fc8b73015f",
        "date": "2014-06-22 10:54:31 -0400",
        "subject": "More work on unit tests."
    },
    {
        "commit": "0b597d8da9ddab0c29bee8de24515ccf1066f667",
        "date": "2014-06-22 10:30:17 -0400",
        "subject": "Working on getting backup running again."
    },
    {
        "commit": "0dd15dd216e5084b7594dba7a23e61d65c07d73d",
        "date": "2014-06-21 20:08:49 -0400",
        "subject": "Cleanup."
    },
    {
        "commit": "753fa11b5d4417952424680d723050a2c76e431c",
        "date": "2014-06-21 19:16:55 -0400",
        "subject": "remove() and hash() now working."
    },
    {
        "commit": "7c161be995a0a157f6f91e3179fc6d8664f96b5e",
        "date": "2014-06-21 18:19:37 -0400",
        "subject": "manifest() and list() are working."
    },
    {
        "commit": "53f1d3c78e795546665ee8b51ef4a3be902955b5",
        "date": "2014-06-21 15:46:26 -0400",
        "subject": "path_create() working."
    },
    {
        "commit": "7bc464a44b4145db527a97012cafc74735dbcd17",
        "date": "2014-06-21 15:17:09 -0400",
        "subject": "Working on BackRest::File methods."
    },
    {
        "commit": "936b8d0db03ee00e24f81a47d24fa8f612ee7018",
        "date": "2014-06-21 14:19:03 -0400",
        "subject": "move() is working."
    },
    {
        "commit": "80206a28e930b7b769494eb05ee035fac69e9c3d",
        "date": "2014-06-21 12:22:25 -0400",
        "subject": "Ignore missing source in copy() working."
    },
    {
        "commit": "e1903d53d01bb707bf9ac3347710d03b24dc4851",
        "date": "2014-06-21 11:05:29 -0400",
        "subject": "copy() works when both files are local or both files are remote."
    },
    {
        "commit": "4a113cae66e8ef4ac83b6089ca2f3fe4c82ff185",
        "date": "2014-06-21 10:05:49 -0400",
        "subject": "Better error handling for missing source file in copy()."
    },
    {
        "commit": "3af52398006b8f2bfd689cea6d9ce94a7a87fbff",
        "date": "2014-06-21 08:42:30 -0400",
        "subject": "Various compression options working in copy()."
    },
    {
        "commit": "08750f2fdafb157721aff191aacbc2f2d927f852",
        "date": "2014-06-16 06:12:38 -0400",
        "subject": "Still working on copy()."
    },
    {
        "commit": "0b3b743f5a6030bedf92f736bc6cb6021f2ced48",
        "date": "2014-06-15 19:18:26 -0400",
        "subject": "Stupid compress issue was in the unit test - but did tighten up the code a bit."
    },
    {
        "commit": "d162ce203d6c70bb80dc0f5224329ae76b53f3f7",
        "date": "2014-06-15 18:32:43 -0400",
        "subject": "Trying to get various compression options working in copy()."
    },
    {
        "commit": "9526975ad357a25d16c37e5c337a8d4186746b53",
        "date": "2014-06-15 16:53:20 -0400",
        "subject": "Cleanup, comments."
    },
    {
        "commit": "adf654edb34df2a6ae67eff691e3e469cd95a5d5",
        "date": "2014-06-15 15:56:45 -0400",
        "subject": "In-stream compression now working in copy."
    },
    {
        "commit": "f51c06119c8d5f52312d41f6d4738bac3abeb0c8",
        "date": "2014-06-15 09:32:11 -0400",
        "subject": "copy() works through multiple runs an multiple remotes."
    },
    {
        "commit": "d568b6525b51b33301a4edb2a7b38660975602cc",
        "date": "2014-06-14 20:47:32 -0400",
        "subject": "copy() works with remote in either direction."
    },
    {
        "commit": "79f85fe6c426ad536382d28ce97bf56e91232207",
        "date": "2014-06-14 19:50:54 -0400",
        "subject": "Finally a working copy() with new protocol."
    },
    {
        "commit": "3a32363a568e09f34d2ec3154ce64754a4175d0e",
        "date": "2014-06-12 21:56:20 -0400",
        "subject": "Working on copy."
    },
    {
        "commit": "976bafca9e84f9efcf43dbbf27183ead85bece4c",
        "date": "2014-06-07 17:29:11 -0400",
        "subject": "Added new tests."
    },
    {
        "commit": "ca6823986d2e6ab6aeebe0d8cc4389eff83a0929",
        "date": "2014-06-07 16:29:03 -0400",
        "subject": "Sample install file."
    },
    {
        "commit": "58e70422acb9d8a53d348479da8cdcdaf2ffc655",
        "date": "2014-06-07 16:27:30 -0400",
        "subject": "Testing install.md"
    },
    {
        "commit": "166318d00d324504f242a84a134309ff496c06e2",
        "date": "2014-06-07 16:25:20 -0400",
        "subject": "Moved remaining libraries and other files."
    },
    {
        "commit": "31b05eaab3c22346ef6bdec305889f3ca70cfd78",
        "date": "2014-06-07 16:13:41 -0400",
        "subject": "Moved pg_backrest_utility."
    },
    {
        "commit": "0a8a5c7ed484bae9487d6fe3eb0536c70395f787",
        "date": "2014-06-07 16:06:46 -0400",
        "subject": "Refactoring - added version file."
    },
    {
        "commit": "ea1a158d828485ea45cf137ba232497ba00aaab9",
        "date": "2014-06-07 15:30:13 -0400",
        "subject": "Improved logging."
    },
    {
        "commit": "e60e2b22ed4c6d26d39e5c1732871df8f9815ad1",
        "date": "2014-06-07 15:01:29 -0400",
        "subject": "Much improved param protocol."
    },
    {
        "commit": "e07a6b4e3f14fd24b15497f907d3c5589ec80b93",
        "date": "2014-06-07 13:15:55 -0400",
        "subject": "Cleaner remote implementation."
    },
    {
        "commit": "1bc80c50edf1461ff87eec127221569ff4b327a7",
        "date": "2014-06-07 11:51:27 -0400",
        "subject": "First passing test with new protocol."
    },
    {
        "commit": "ae130229ef89c1360796bfbe593c265aae4b6494",
        "date": "2014-06-06 21:16:24 -0400",
        "subject": "Working on remote protocol."
    },
    {
        "commit": "e71a986ef3e1cf43a7edd0207b7d4f97ee21cdac",
        "date": "2014-06-05 23:51:27 -0400",
        "subject": "More work on copy()"
    },
    {
        "commit": "e44cd6c1ca1d789cb0b6a6ef81418d68072377d1",
        "date": "2014-06-05 22:42:47 -0400",
        "subject": "More paths through copy() working."
    },
    {
        "commit": "ca6b435c4ffbfb7459298535cc06fa48f6900d36",
        "date": "2014-06-05 16:40:05 -0400",
        "subject": "June Hackathon: copy_in and copy_out functions written, some paths through File->copy() working, basic unit tests setup."
    },
    {
        "commit": "c2dd53f90885a0ce8bd4399d8e2555c96b36159d",
        "date": "2014-06-05 10:20:03 -0400",
        "subject": "Changes to allow specific tests to be run."
    },
    {
        "commit": "5813aedaa3894d36c4645744fa47b005a635ef08",
        "date": "2014-06-05 09:59:04 -0400",
        "subject": "Added recognition section to read me."
    },
    {
        "commit": "5d09af9cc04c42271a3b5d2879f28a0d6483dfc8",
        "date": "2014-06-04 13:47:17 -0400",
        "subject": "Better include markdown."
    },
    {
        "commit": "82814aebdd0c37206538b8b55229ee686f7d0f68",
        "date": "2014-06-04 11:58:30 -0400",
        "subject": "Whitespace cleaning."
    },
    {
        "commit": "1793b7a5c4d70ee262c57c56faaa2d975d5b9673",
        "date": "2014-06-03 22:02:56 -0400",
        "subject": "Comments and formatting."
    },
    {
        "commit": "1b9782cb9e566fcc08a8c0f23ceba8ecf44e7f15",
        "date": "2014-06-03 21:22:07 -0400",
        "subject": "Converted path_create(), improved unit tests."
    },
    {
        "commit": "ffa45d07bf9d3ba6134341c1f1293560a76e57bc",
        "date": "2014-06-03 19:03:03 -0400",
        "subject": "New version of move()."
    },
    {
        "commit": "816c67edfdc9b263bfed9ab7a7fa213d78990436",
        "date": "2014-06-02 17:48:07 -0400",
        "subject": "Converted File::compress"
    },
    {
        "commit": "0249d3516b274b650afc04c16e56fd160f53bc71",
        "date": "2014-06-02 16:26:37 -0400",
        "subject": "Manifest is working (unit tests at least)."
    },
    {
        "commit": "361c2c24bfb92d78b0a7006df6945f714a0c511f",
        "date": "2014-06-01 18:39:35 -0400",
        "subject": "Working on manifest."
    },
    {
        "commit": "03383691932d7951ae036409a16d6b364483b97d",
        "date": "2014-06-01 17:23:33 -0400",
        "subject": "Working on more robust file functions."
    },
    {
        "commit": "85f591f801fc7cc19044fb2190829ad1ec057d80",
        "date": "2014-05-27 09:00:24 -0400",
        "subject": "More unit tests for file functions."
    },
    {
        "commit": "3e12f9230b35bc625cc653b620452090ab9b2260",
        "date": "2014-05-14 15:07:37 -0400",
        "subject": "Working on unit tests for file_copy.  Still need to add specific error tests, timestamp, and permissions."
    },
    {
        "commit": "db40553434035ffc4ab1f61061f429f023bde5b8",
        "date": "2014-05-13 16:41:20 -0400",
        "subject": "Changed version."
    },
    {
        "commit": "1fa8dbb778bfe43bb345639f8e29c9978347c9ef",
        "date": "2014-05-13 11:47:14 -0400",
        "subject": "v0.19: Improved error reporting/handling"
    },
    {
        "commit": "d234aeea64b9cf6e7ec643fdd0d53961769c768f",
        "date": "2014-05-13 11:23:15 -0400",
        "subject": "More work on error-handling."
    },
    {
        "commit": "a2b28623d42d1979d91bc112a411588d8996a66b",
        "date": "2014-04-28 09:13:25 -0400",
        "subject": "Working on better error handling."
    },
    {
        "commit": "53fa574d7eaf5a1574e3f87d41abd8ff5077faf9",
        "date": "2014-04-13 11:58:35 -0400",
        "subject": "Merge branch 'master' of github.com:dwsteele/pg_backrest into dev"
    },
    {
        "commit": "9acbba173e65f40d6032ed47a1760ec48e383b91",
        "date": "2014-04-13 09:51:51 -0400",
        "subject": "v0.18: Return soft error from archive-get when file is missing"
    },
    {
        "commit": "d8c488f73f1453295028d7b464c99869c084f862",
        "date": "2014-04-11 14:15:56 -0400",
        "subject": "Added the feature backlog."
    },
    {
        "commit": "06b8eefd19dc7d75259888a281962d54fa7e121c",
        "date": "2014-04-03 18:20:46 -0400",
        "subject": "Fixed up README"
    },
    {
        "commit": "7aa6c8ecaf3b15e7c4f58ce345f205b7aef2b423",
        "date": "2014-04-03 18:17:40 -0400",
        "subject": "v0.17: Warn when archive directories cannot be deleted"
    },
    {
        "commit": "49536498e6d54e283f656a41d7e1dcd5fbaed487",
        "date": "2014-04-03 16:52:39 -0400",
        "subject": "Warning for non-empty dirs instead of error"
    },
    {
        "commit": "194696f6742d571bdeb49e75f6d9d980c2cbf1fe",
        "date": "2014-04-02 17:25:37 -0400",
        "subject": "Working on unit tests."
    },
    {
        "commit": "9a5bb36c0f5ec13a03c86f61644ac02c46fba679",
        "date": "2014-04-01 21:41:34 -0400",
        "subject": "Added notes."
    },
    {
        "commit": "be1163b948200c409199302ab5c03e724c7b7331",
        "date": "2014-04-01 10:49:37 -0400",
        "subject": "v0.16: RequestTTY=yes for SSH sessions"
    },
    {
        "commit": "235c75b1b00f05312a437bc53c313fd2e19a2d42",
        "date": "2014-04-01 09:01:34 -0400",
        "subject": "Added ;"
    },
    {
        "commit": "7624d65edf340887559c87a806cee6e6da41db65",
        "date": "2014-04-01 08:59:09 -0400",
        "subject": "Added TTY code."
    },
    {
        "commit": "2b8972936ffb52d27678d69f1fc332f712df014e",
        "date": "2014-03-30 21:02:17 -0400",
        "subject": "Updates to README."
    },
    {
        "commit": "765af10c88ff08de48133629c124d472da68af1c",
        "date": "2014-03-29 18:18:03 -0400",
        "subject": "Merge branch 'master' of github.com:dwsteele/pg_backrest into dev"
    },
    {
        "commit": "dafaeb0b82994172ffc8238e14a50db027c53262",
        "date": "2014-03-29 18:16:08 -0400",
        "subject": "v0.15: Added archive-get"
    },
    {
        "commit": "ba2590dc8eb014152ddcb0a1b1e0c59fd8d1fb22",
        "date": "2014-03-28 15:20:36 -0400",
        "subject": "archive-get function is working. Added option to force checkpoint at backup start."
    },
    {
        "commit": "8ae6c2719dfb83a8404265c5e0b72d93bfbdd36a",
        "date": "2014-03-28 11:59:44 -0400",
        "subject": "Better code in file_list_get()."
    },
    {
        "commit": "23df43e781f9a0631b79b723bf4f09ecb3a07a7e",
        "date": "2014-03-28 11:40:37 -0400",
        "subject": "file_list_get now works locally and remotely"
    },
    {
        "commit": "9d949b7ad6446be70316a50d84adf5c24f6f37c5",
        "date": "2014-03-26 10:53:49 -0400",
        "subject": "v0.11: Minor fixes"
    },
    {
        "commit": "126b39855d6680453bbc2af8a565e776b07d4046",
        "date": "2014-03-25 18:56:05 -0400",
        "subject": "Working on archive-get"
    },
    {
        "commit": "e68f836b2e719c822df6b17df68b2a825a4702c9",
        "date": "2014-03-08 09:12:53 -0500",
        "subject": "Documented enhancements planned for v0.15"
    },
    {
        "commit": "bbb3b48cf8181e0a69328dbb12dcf75169f08e24",
        "date": "2014-03-05 20:06:13 -0500",
        "subject": "Added comments."
    },
    {
        "commit": "587bd1f8d9fa3329d95239501399166aa147bda7",
        "date": "2014-03-05 19:53:13 -0500",
        "subject": "v0.10: Backup and archiving are functional"
    },
    {
        "commit": "1617afb704bab58c0e8c8153c8f116f36d196e95",
        "date": "2014-03-05 19:51:03 -0500",
        "subject": "Initial commit."
    },
    {
        "commit": "1a4f2527e32e4ecf2efac9d47a0ab46bd5da891b",
        "date": "2014-03-05 19:49:05 -0500",
        "subject": "Fixed version number."
    },
    {
        "commit": "ae30ec98e9c1ce41bfcbba02adbf7a3e6add95db",
        "date": "2014-03-05 19:47:05 -0500",
        "subject": "First release merge from master."
    },
    {
        "commit": "81616e19bd43ecd1ffae3401dc713149cffb18e7",
        "date": "2014-03-05 19:45:01 -0500",
        "subject": "v0.01: Backup and archiving are functional"
    },
    {
        "commit": "951419178bed96227cff47d1b08a87b40610dce3",
        "date": "2014-03-05 19:43:23 -0500",
        "subject": "Initial commit."
    },
    {
        "commit": "2b55b8ca5ef7eea92f24515155596a5bb46db112",
        "date": "2014-03-05 19:10:23 -0500",
        "subject": "Merge branch 'master' of github.com:dwsteele/pg_backrest into dev"
    },
    {
        "commit": "1eb8e1be2d31724c2f7b01899734411e25b068b5",
        "date": "2014-03-05 18:56:15 -0500",
        "subject": "v0.01: Backup and archiving are functional"
    },
    {
        "commit": "80d5332fa032f604f63e2833e1c919e8c52a460e",
        "date": "2014-03-04 08:00:51 -0500",
        "subject": "Squashed commit of the following: <REMOVED>"
    },
    {
        "commit": "f0d82151b91828fece28a57d2de24f5ccc92e0d1",
        "date": "2014-03-03 16:38:01 -0500",
        "subject": "Changed thread timeout from WARN to ERROR"
    },
    {
        "commit": "571d449717fecee1eac64088bde42606fcddc4eb",
        "date": "2014-02-27 19:15:00 -0500",
        "subject": "Redirect find error output to /dev/null.  Sometimes files are removed from the db while find is running.  We only want to error if the find process errors."
    },
    {
        "commit": "84c4cec257b25fc026f12560d6c0bc5cfb5822ec",
        "date": "2014-02-27 13:00:41 -0500",
        "subject": "Put redirects in common places where errors are be output but we don't want to see them."
    },
    {
        "commit": "ae782d08845e2d9f5fd9df8ce8a05cb472da6f56",
        "date": "2014-02-25 07:30:45 -0500",
        "subject": "Made archiving single-threaded so it will work"
    },
    {
        "commit": "a84478045e7e25d197368a19ac375509f80dfc9c",
        "date": "2014-02-24 18:04:42 -0500",
        "subject": "No attempt to kill threads - just abort"
    },
    {
        "commit": "da41eb3883622a333e6e84056c05964bc2e4e402",
        "date": "2014-02-24 17:59:42 -0500",
        "subject": "Added more warnings"
    },
    {
        "commit": "21b15b7cf6a8b48a4e9c65691eaece5306e47c22",
        "date": "2014-02-24 09:33:47 -0500",
        "subject": "Added thread timeout."
    },
    {
        "commit": "5de8f275f0e9f06a45f1d2dafb540d5db244d505",
        "date": "2014-02-22 11:14:01 -0500",
        "subject": "Removed stderr redirects from the master ssh connection"
    },
    {
        "commit": "0e4f0f1308e15dad9e6d6d07cf9bc92bc1aa1492",
        "date": "2014-02-22 10:54:02 -0500",
        "subject": "Fixed issue with archive path expiration"
    },
    {
        "commit": "e8c7d7aca69dae3ff14cf0065815bced3f2002f1",
        "date": "2014-02-22 09:05:58 -0500",
        "subject": "When archive_retention_type is full, use the oldest backup if there are fewer than required"
    },
    {
        "commit": "9270a6789206a0f2fcd5f92d5faaae5e6ac54973",
        "date": "2014-02-21 16:09:34 -0500",
        "subject": "Removed some more stderr redirects"
    },
    {
        "commit": "6d975d283073e90247214961e31d49959e7765c6",
        "date": "2014-02-21 08:49:27 -0500",
        "subject": "No longer discarding stderr"
    },
    {
        "commit": "0387a8ee09e5fbd66fe8d4dae055f9fea07e6039",
        "date": "2014-02-21 07:34:17 -0500",
        "subject": "replaced process id with thread id.  Added use thread to all modules."
    },
    {
        "commit": "ac3ce81621fab54c925eead8c53dee01c797d63e",
        "date": "2014-02-21 06:42:42 -0500",
        "subject": "Add process id to logging, don't generate checksum for 0 length files"
    },
    {
        "commit": "3d8e933343d8b7fa0900d37f68cd235b923980bf",
        "date": "2014-02-19 16:06:21 -0500",
        "subject": "More threads"
    },
    {
        "commit": "857e1774292da086f3ad4e9fca4ed28efea6683f",
        "date": "2014-02-19 15:13:07 -0500",
        "subject": "Using separate master queues"
    },
    {
        "commit": "800cd898317d76b24e8aa7f3acdbcb39cb2de052",
        "date": "2014-02-19 13:37:18 -0500",
        "subject": "Thread files are no longer in an array"
    },
    {
        "commit": "81433c0fdde660c3357526a3447cd1146a6b9f8c",
        "date": "2014-02-19 13:03:52 -0500",
        "subject": "Now using one control master for threading."
    },
    {
        "commit": "b4ac9552d24a12ddf06d4df293a360cd72a1cf4d",
        "date": "2014-02-18 19:29:57 -0500",
        "subject": "Skipped files removed from manifest, checksums stored"
    },
    {
        "commit": "27b820cfb4c5ac0ff5695202cdab98d471e0b95f",
        "date": "2014-02-18 15:42:51 -0500",
        "subject": "Backup handles files that were removed by the db"
    },
    {
        "commit": "187fdaf49bd1d9abb1805e28afc2fab9161bc405",
        "date": "2014-02-16 19:01:06 -0500",
        "subject": "Better compression choices."
    },
    {
        "commit": "5c695a6522fd0092934e60dec7634760cde0673f",
        "date": "2014-02-16 18:20:55 -0500",
        "subject": "Improved archive logging and put in max limit"
    },
    {
        "commit": "13086e96266f8872ad0a07dfbac3289233742242",
        "date": "2014-02-16 17:02:25 -0500",
        "subject": "Renamed processes."
    },
    {
        "commit": "eb25dbdb9dedae5ef7dd35e8e5dbff839168373d",
        "date": "2014-02-16 16:58:25 -0500",
        "subject": "Added stanza to command string"
    },
    {
        "commit": "b45d9c946e74434a01e62b371f9c382dcb64210d",
        "date": "2014-02-16 16:51:05 -0500",
        "subject": "Improved command string"
    },
    {
        "commit": "6d7f89fc98ad2e511e6e549943ff5c8311de89cf",
        "date": "2014-02-16 01:31:24 -0500",
        "subject": "change process string"
    },
    {
        "commit": "577c5af33fe05c961273d0d62c42dbd3320b4d87",
        "date": "2014-02-16 01:24:54 -0500",
        "subject": "testing"
    },
    {
        "commit": "b514058cee5801897530e6d27d1a61b0f6b7692f",
        "date": "2014-02-15 16:46:13 -0500",
        "subject": "Changed to perl storable - at least it works"
    },
    {
        "commit": "392da9162084cb17eb7eff8bf1815e970df8ac3e",
        "date": "2014-02-15 15:28:22 -0500",
        "subject": "Remove old local archive dirs."
    },
    {
        "commit": "0bc40d206cdbf777f56bfa2cb21472da71185872",
        "date": "2014-02-15 14:33:31 -0500",
        "subject": "Some fixes for config"
    },
    {
        "commit": "0979841f1a08352ece1ade8821d69080f82b1132",
        "date": "2014-02-15 14:18:15 -0500",
        "subject": "Async compress, thread kill improvements"
    },
    {
        "commit": "bd00fb7f0ceb86092c3998ac1ac923bb4f28ae2f",
        "date": "2014-02-15 10:45:01 -0500",
        "subject": "Still working on thread kill"
    },
    {
        "commit": "3b2dd68aac9bc00e1b45d2a8d6dfd74da17112f7",
        "date": "2014-02-15 10:31:57 -0500",
        "subject": "More robust join code."
    },
    {
        "commit": "27bf9b65720e278419c0c0a414141fb7b729c789",
        "date": "2014-02-15 10:09:47 -0500",
        "subject": "First SSH session is shared between objects and thread 0"
    },
    {
        "commit": "c7aebf05c4e12dc9fbd7ba4bed838c6110e6cdd0",
        "date": "2014-02-14 21:39:18 -0500",
        "subject": "Handle term signals gracefully."
    },
    {
        "commit": "d100294894e1f1a5b2d35f6807d3e3a18a8c0b7e",
        "date": "2014-02-14 19:56:28 -0500",
        "subject": "Ability to resume failed backups, better locking"
    },
    {
        "commit": "308652cc657f5f015c6affde2d01a784862c96a0",
        "date": "2014-02-14 09:05:14 -0500",
        "subject": "Remove a lot of path creates - percent logging."
    },
    {
        "commit": "e14d52c42a48b2c707ae585e9470c637c9966d46",
        "date": "2014-02-14 08:23:25 -0500",
        "subject": "Improved backup threading"
    },
    {
        "commit": "e93a444a415244de15769f07b69741530254f882",
        "date": "2014-02-13 23:37:52 -0500",
        "subject": "Changes to manifest."
    },
    {
        "commit": "5c393a0df9beb7ce8e78b3b3627bc1114aa1f94d",
        "date": "2014-02-13 21:44:19 -0500",
        "subject": "Increased time to wait for log files"
    },
    {
        "commit": "dccdec2ffa5d145f0dd8efceafaef651f59d72c6",
        "date": "2014-02-13 21:41:20 -0500",
        "subject": "trying to make labels stick"
    },
    {
        "commit": "ae3dcc57f01983e4eac6ca72bb482b9fa2e6e4d3",
        "date": "2014-02-13 21:31:57 -0500",
        "subject": "Thread errors now exit"
    },
    {
        "commit": "6d9e7db1c69ee2f862e2941574c5c60ec8d5130f",
        "date": "2014-02-13 20:54:41 -0500",
        "subject": "Increased thread total."
    },
    {
        "commit": "405d36497dc326b12dbc243a1b3bcd97ce438168",
        "date": "2014-02-13 20:33:05 -0500",
        "subject": "Less logging"
    },
    {
        "commit": "a78d677b1e226cf9cda517ffeb662b63480c4099",
        "date": "2014-02-13 20:29:42 -0500",
        "subject": "Wait for archive files."
    },
    {
        "commit": "d4ba078183f0edd290f136cdb13c43f9f70ffd43",
        "date": "2014-02-13 18:14:15 -0500",
        "subject": "Only save manifest once"
    },
    {
        "commit": "1bec36b65b9ed5f2ca31879dc03877708ce048df",
        "date": "2014-02-13 18:07:58 -0500",
        "subject": "Better thread logging."
    },
    {
        "commit": "2bafa5cf26773ba14da891c1079140c2b9ff08af",
        "date": "2014-02-13 17:52:38 -0500",
        "subject": "Logging tweak"
    },
    {
        "commit": "8453681ccdb41e8ad1e3cf71c2df761bb2341768",
        "date": "2014-02-13 17:50:14 -0500",
        "subject": "Logging tweaks"
    },
    {
        "commit": "4349f0caff1e9a9e1501483af8a64ec594513082",
        "date": "2014-02-13 17:47:53 -0500",
        "subject": "Fixes to log level and more logging"
    },
    {
        "commit": "7d55ce865bf9bf0580c256ae25acbf776692ec3a",
        "date": "2014-02-13 17:11:53 -0500",
        "subject": "Work on log levels"
    },
    {
        "commit": "133e27d813e3e70f7c322fe6705e7104909e8b3f",
        "date": "2014-02-13 15:26:07 -0500",
        "subject": "Archive tmp file fix."
    },
    {
        "commit": "19f9a5193f547a874b871e7388328043da4ad274",
        "date": "2014-02-13 14:54:28 -0500",
        "subject": "Minor config changes."
    },
    {
        "commit": "13a1f0cf246f24dd1fba09543b5fc19ebb065c70",
        "date": "2014-02-13 13:54:43 -0500",
        "subject": "Lots and lots of logging improvements"
    },
    {
        "commit": "14b13d48404aedaf629ea647592b058db324b5c4",
        "date": "2014-02-13 12:02:45 -0500",
        "subject": "Async archive log backup working."
    },
    {
        "commit": "f0df759bb97f3499e6c245fee88fceb491e4b551",
        "date": "2014-02-13 00:21:25 -0500",
        "subject": "Small debug fix"
    },
    {
        "commit": "7c4d463b1da98c4f9c94693ee64c4776075e36e3",
        "date": "2014-02-12 23:49:40 -0500",
        "subject": "More balanced backup."
    },
    {
        "commit": "b770c8ebece6c40190cc9d62f6798eeb32d4a105",
        "date": "2014-02-12 22:33:09 -0500",
        "subject": "More work on archive-pull"
    },
    {
        "commit": "8e60a3111fd22095c6bdbbe99b51c3af87e661a0",
        "date": "2014-02-12 20:28:27 -0500",
        "subject": "Lots of archive-pull plumbing"
    },
    {
        "commit": "16df430b73834c97410565bd96edeb7e7f79714d",
        "date": "2014-02-12 17:34:34 -0500",
        "subject": "New constants and basic fork."
    },
    {
        "commit": "564bd65b3e8241113998558208d561c61b73fbb3",
        "date": "2014-02-12 16:01:48 -0500",
        "subject": "Basic plumbing for archive-pull function"
    },
    {
        "commit": "5181282b7402ecbba88544e4cafddac1c7eb8f76",
        "date": "2014-02-12 08:04:42 -0500",
        "subject": "Command line parameter checks"
    },
    {
        "commit": "729b07fed5eaa8247eaee65bd8f3e1a996bd7752",
        "date": "2014-02-12 07:45:29 -0500",
        "subject": "Hardlink now a conf option."
    },
    {
        "commit": "219120ba811ad102f3c0df60119d645d919d534b",
        "date": "2014-02-12 07:39:42 -0500",
        "subject": "Archiving and flag changes."
    },
    {
        "commit": "b9a2e7093ef381ce3b5e6bf2ee9ebf9cf03fa3d7",
        "date": "2014-02-11 21:17:30 -0500",
        "subject": "Some more file debug info"
    },
    {
        "commit": "1a9f73b781db87e98ea1a42db2b43a29dec950f3",
        "date": "2014-02-11 17:07:49 -0500",
        "subject": "Added timestamp to log"
    },
    {
        "commit": "49dbc897a635262db27de5091e8d330f92efa948",
        "date": "2014-02-11 16:57:51 -0500",
        "subject": "Small file allocation improvements."
    },
    {
        "commit": "9a1de327a197af06ab647d88cd7669ff938b4daa",
        "date": "2014-02-11 16:37:20 -0500",
        "subject": "Turned ssh compression on"
    },
    {
        "commit": "71812fca996ca53d205694c796694bb46dd4fbae",
        "date": "2014-02-11 16:21:33 -0500",
        "subject": "Thread total is defined in the conf file."
    },
    {
        "commit": "171ca709d62a129907e241012e493162c6be2472",
        "date": "2014-02-11 16:08:55 -0500",
        "subject": "Better file ordering for threads."
    },
    {
        "commit": "c58ccb588e846d7012923a927c2b955cffef3a3c",
        "date": "2014-02-11 15:31:16 -0500",
        "subject": "Parallel backup now working"
    },
    {
        "commit": "a55b37efc31e6a6074ed98fe8c92ff10cfaf277b",
        "date": "2014-02-07 19:34:14 -0500",
        "subject": "Working on parallel backup"
    },
    {
        "commit": "820791cf922e4c186288ee005e87a914df4d6c3e",
        "date": "2014-02-06 17:31:33 -0500",
        "subject": "FF log is skipped for pre-9.3 databases."
    },
    {
        "commit": "60b2be58ac5e410719335993dabf218decc266d5",
        "date": "2014-02-06 16:37:37 -0500",
        "subject": "Finished db object abstraction"
    },
    {
        "commit": "f20f3b3ee642c02b3b4295b235bc59b99a48af20",
        "date": "2014-02-06 15:54:22 -0500",
        "subject": "Started db object abstraction."
    },
    {
        "commit": "9d08f2a64494c9528c30531bd95b7306484f229e",
        "date": "2014-02-06 12:49:54 -0500",
        "subject": "More robust config.  Retention is read from config."
    },
    {
        "commit": "a2b0d7a674a1524f53440be45d333409a3ad1a2b",
        "date": "2014-02-05 22:26:10 -0500",
        "subject": "Backup expiration working again.  Other changes."
    },
    {
        "commit": "27986e0c10999660078e7c74b25bc99eb3e028ce",
        "date": "2014-02-05 21:39:08 -0500",
        "subject": "File is now an object."
    },
    {
        "commit": "3e7faf0e5f7d3f61856f0c7f3b50329172e69585",
        "date": "2014-02-05 16:53:25 -0500",
        "subject": "Some path fixes."
    },
    {
        "commit": "7bee0f3141a301c0a1fa1bb8d092dbbd317fe296",
        "date": "2014-02-05 15:56:05 -0500",
        "subject": "Moved backup location."
    },
    {
        "commit": "a15fcb8c23e11bb2ec056abe13120591cd70c515",
        "date": "2014-02-05 13:10:36 -0500",
        "subject": "Moved tmp path."
    },
    {
        "commit": "7ffade2453afafb98d2d67d3612742e17075947e",
        "date": "2014-02-05 11:35:09 -0500",
        "subject": "Fixed file mod time and permissions"
    },
    {
        "commit": "c86a61ca3e15acc1afc09c400aa866a958e1fd27",
        "date": "2014-02-05 10:40:49 -0500",
        "subject": "Relative links working for tablespaces."
    },
    {
        "commit": "12a960f91a59fbcce53659b1ed4fbed5a1ba8fc9",
        "date": "2014-02-05 08:21:27 -0500",
        "subject": "File copy supports decompression"
    },
    {
        "commit": "a81049995859666f378ee804ef15aba1d87543e2",
        "date": "2014-02-04 18:48:39 -0500",
        "subject": "Remote backup fully working."
    },
    {
        "commit": "e38c482a26d270b19813c67829f0df977afa0996",
        "date": "2014-02-03 20:48:02 -0500",
        "subject": "Cleanup"
    },
    {
        "commit": "946b8261cfedd62114642344614392426196ba00",
        "date": "2014-02-03 20:29:03 -0500",
        "subject": "Moved archive_push function"
    },
    {
        "commit": "d5832a70c05dd40e73d6457e2b287f500454b781",
        "date": "2014-02-03 20:23:04 -0500",
        "subject": "Moved last backup function."
    },
    {
        "commit": "aef6730267af465eea3ab99ecd06917f1628d176",
        "date": "2014-02-03 19:57:21 -0500",
        "subject": "Moved backup functions."
    },
    {
        "commit": "316a5b559858b3aea89306efd4f0557c2f386d09",
        "date": "2014-02-03 19:03:17 -0500",
        "subject": "Working on remote"
    },
    {
        "commit": "fa668d50072542890f15d9ebda77bb2ed552e3e9",
        "date": "2014-02-03 14:50:23 -0500",
        "subject": "Move file init code to file module"
    },
    {
        "commit": "aef4adf1f3864de9e844d7fb7bb31afce5e887d2",
        "date": "2014-02-02 19:03:05 -0500",
        "subject": "Splitting main perl file"
    },
    {
        "commit": "4c2e4f7e4924a0cd4ba9d3cae1f99f5fe115d147",
        "date": "2014-02-02 12:45:59 -0500",
        "subject": "Lots more work on remote functionality"
    },
    {
        "commit": "bf8ac7abe6210b2300375ba879ade54f8dd69167",
        "date": "2014-02-02 11:12:55 -0500",
        "subject": "manifest_get() now works remotely"
    },
    {
        "commit": "4556de472240b161eb3e8ac37ece2eac7f5c3278",
        "date": "2014-02-02 10:40:05 -0500",
        "subject": "Source and destination can now be remote."
    },
    {
        "commit": "de972ef5d3bb73f69839a06a43dc9448ccd500cd",
        "date": "2014-02-01 12:57:27 -0500",
        "subject": "More work on file_copy"
    },
    {
        "commit": "52ba8801efe419988a8900b5696944e8015a3a12",
        "date": "2014-02-01 11:04:33 -0500",
        "subject": "Working on remote file copy"
    },
    {
        "commit": "2ad7a3d815da205d2b84372ad3f8279c2572a76e",
        "date": "2014-01-31 00:04:08 -0500",
        "subject": "Formatting."
    },
    {
        "commit": "c5de8fa6e637a877aee003ef623b606d113070c8",
        "date": "2014-01-30 23:58:26 -0500",
        "subject": "Created variable for compression extension"
    },
    {
        "commit": "151ff8ba6049b8a4b98900cbbde23bb540d71796",
        "date": "2014-01-30 23:24:34 -0500",
        "subject": "Removed unused strPath param from path_get()"
    },
    {
        "commit": "52004d3c84b5886e229dcab67729eff2e1ae7291",
        "date": "2014-01-30 23:16:19 -0500",
        "subject": "Comments"
    },
    {
        "commit": "447d83fcdc64c0a075772a6b6f7affb0191e2b2a",
        "date": "2014-01-30 23:09:34 -0500",
        "subject": "Removing more copies."
    },
    {
        "commit": "f86618377c5b8efe7fe18683f0fb009f7391ad59",
        "date": "2014-01-30 11:35:34 -0500",
        "subject": "Lots of backup refactoring."
    },
    {
        "commit": "e13a706c0a251baf9f69126653bb2eabb78064b5",
        "date": "2014-01-29 15:38:57 -0500",
        "subject": "More moving.  Links now also get references."
    },
    {
        "commit": "54c73b38139127e0acb9a13be6cd7a94d84851ca",
        "date": "2014-01-29 15:03:57 -0500",
        "subject": "Moving stuff around"
    },
    {
        "commit": "c26b47d4c7d346dd67168333114ee8770baa6efd",
        "date": "2014-01-29 12:06:30 -0500",
        "subject": "Abstracting file functions."
    },
    {
        "commit": "47c3c82540ab3acbf741b6e511b86898e40c9b5c",
        "date": "2014-01-29 06:40:15 -0500",
        "subject": "Fixed checksum function."
    },
    {
        "commit": "12f6d889de8ec6363b3275ccf887b41b3336d994",
        "date": "2014-01-28 17:16:07 -0500",
        "subject": "More modular file copy."
    },
    {
        "commit": "6625ea1405aef8b19b0f5e0c347cb1b7f9761747",
        "date": "2014-01-23 19:39:51 -0500",
        "subject": "Coded paths needed for archive logging"
    },
    {
        "commit": "cdd1ef73069062720af4061b1955d09c3af27330",
        "date": "2014-01-22 21:40:56 -0500",
        "subject": "Added general path function"
    },
    {
        "commit": "161de23c3bf7e4ce7e58f6611acbf227a675cd8f",
        "date": "2014-01-22 19:03:20 -0500",
        "subject": "Starting new structure"
    },
    {
        "commit": "89b96954f6f6aa87d7ad138c7a87a8cf64558fc4",
        "date": "2014-01-21 22:02:14 -0500",
        "subject": "Allow any archive file start starts with 24 hex characters."
    },
    {
        "commit": "7e73cf22cf8df6410600760390c7600eff3b5152",
        "date": "2014-01-21 21:59:54 -0500",
        "subject": "Changed where .backup files were copied"
    },
    {
        "commit": "62ae46e2139e37d2a036131801c85db13148cd0d",
        "date": "2014-01-21 21:12:24 -0500",
        "subject": "Archive expiration working."
    },
    {
        "commit": "a83e94ba27dd0c0958eaca145d4630ef5d7e0fbe",
        "date": "2014-01-21 20:38:58 -0500",
        "subject": "Fixed error in the backup regexp"
    },
    {
        "commit": "faaaa5690f5c2f7999a692a999e3b3de67ff648f",
        "date": "2014-01-20 20:09:50 -0500",
        "subject": "Working on archive retention."
    },
    {
        "commit": "df7ada85c226fb7e851fa4c3e1182e9f1a78fe47",
        "date": "2014-01-18 10:14:35 -0500",
        "subject": "Working on expiration"
    },
    {
        "commit": "1e0f2485dbcf73b730fb04e6f2ef212d46df725d",
        "date": "2014-01-18 00:03:32 -0500",
        "subject": "Working on expiration"
    },
    {
        "commit": "3719d54cc99d6be4b3d22fb853a2c7ff46b4b3dc",
        "date": "2014-01-15 20:41:29 -0500",
        "subject": "Some notes. removed dead .backup move"
    },
    {
        "commit": "a7de734105b876654b7cbc8d9d448f2749176369",
        "date": "2014-01-12 20:12:49 -0500",
        "subject": "Some cleanup - fixed tablespace path regression."
    },
    {
        "commit": "05dcbc2246ed949fec256e45c6c441b26f30673b",
        "date": "2014-01-12 15:28:19 -0500",
        "subject": "Working on making backups consistent"
    },
    {
        "commit": "c1e59048808f969b2380a0607a2447d27822d25b",
        "date": "2014-01-12 01:46:27 -0500",
        "subject": "Fixed xlog copy - working on correctness"
    },
    {
        "commit": "3ed83e78f2dd8a424a9adc396aa3c2eeed6cf39f",
        "date": "2014-01-11 02:16:14 -0500",
        "subject": "Working on archive log copy"
    },
    {
        "commit": "387439ac8e0b01d61f896c67bd92be88acb9b063",
        "date": "2014-01-10 16:01:25 -0500",
        "subject": "Working on processing archive logs"
    },
    {
        "commit": "e23820098d7a1dc83e3e8a1f88616a7aa298e388",
        "date": "2014-01-10 14:02:56 -0500",
        "subject": "Notices are not emitted on start and stop backup"
    },
    {
        "commit": "8b73a26b8425a14ce233f16fa29d38fbaf428331",
        "date": "2014-01-10 00:49:19 -0500",
        "subject": "Some notes for things to do."
    },
    {
        "commit": "49c1fcd3eb33873d402e486bc2b7ede8280d4fc9",
        "date": "2014-01-10 00:43:26 -0500",
        "subject": "Backup file is being copied to pg_xlog"
    },
    {
        "commit": "8e966c50dd1a28e5cfabc8670c88bfbdcb9913aa",
        "date": "2014-01-10 00:22:51 -0500",
        "subject": "Removed commented code"
    },
    {
        "commit": "b5f965942bc370beb7803395f79872323f7c59ba",
        "date": "2014-01-10 00:21:46 -0500",
        "subject": "Added optional hard-linking."
    },
    {
        "commit": "cceac444ad357bf8babe36f906bacdc25b845841",
        "date": "2014-01-09 21:55:09 -0500",
        "subject": "Added comment"
    },
    {
        "commit": "c47ec3d2609539d5437664aad4535bc2a2edad81",
        "date": "2014-01-09 21:40:33 -0500",
        "subject": "All backup references are now stored."
    },
    {
        "commit": "ed5f8226a4a08ca4665bd49b3413bcaf7e4959c5",
        "date": "2014-01-09 20:12:46 -0500",
        "subject": "References are from oldest backup"
    },
    {
        "commit": "bb8fb5b54f14b622af02899c95ad9e8e88d74e8b",
        "date": "2014-01-09 20:00:34 -0500",
        "subject": "Sparse backup dirs implemented"
    },
    {
        "commit": "854972dde65f9560ff8177115e5b2e785e478a28",
        "date": "2014-01-09 18:23:50 -0500",
        "subject": "Basic deltas work."
    },
    {
        "commit": "c89984cd59dc2ca1792d8cd99df1978719aed16e",
        "date": "2014-01-09 18:02:42 -0500",
        "subject": "Revert 2914a6d..e31b21f",
        "body": "This rolls back to commit 2914a6dcc67b120be0ee5d808590849ebe9c3664."
    },
    {
        "commit": "e31b21f95aa5bad69ab2a31f9fd569d1a2e01a78",
        "date": "2014-01-09 18:01:34 -0500",
        "subject": "Revert 52d8697..e0be213",
        "body": "This rolls back to commit 52d86971183da8f8a88775f0196f44c3ab9440a1."
    },
    {
        "commit": "e0be2132063932108069a0754d7416c2e2c58624",
        "date": "2014-01-09 18:01:12 -0500",
        "subject": "Revert 2914a6d..9633e17",
        "body": "This rolls back to commit 2914a6dcc67b120be0ee5d808590849ebe9c3664."
    },
    {
        "commit": "9633e17d04d00e31c80c3d12f848a5351b97963b",
        "date": "2014-01-09 17:58:40 -0500",
        "subject": "Revert \"Removed tmp file.\"",
        "body": "This reverts commit 52d86971183da8f8a88775f0196f44c3ab9440a1."
    },
    {
        "commit": "2914a6dcc67b120be0ee5d808590849ebe9c3664",
        "date": "2014-01-09 17:58:01 -0500",
        "subject": "Working on delta"
    },
    {
        "commit": "52d86971183da8f8a88775f0196f44c3ab9440a1",
        "date": "2014-01-03 21:24:13 -0500",
        "subject": "Removed tmp file."
    },
    {
        "commit": "ba5075a3e0458874f8b8dff0b4bc1f8cb07243ae",
        "date": "2014-01-03 21:19:41 -0500",
        "subject": "New implementation for archive logging"
    },
    {
        "commit": "6379b723dee94d63ef55134468ff86f588c717f8",
        "date": "2014-01-03 20:10:53 -0500",
        "subject": "Set the backup label"
    },
    {
        "commit": "78457a2f420428cab317e6cdb57446008ad9751c",
        "date": "2014-01-03 19:59:47 -0500",
        "subject": "Simplified incremental naming"
    },
    {
        "commit": "ef846ac8db0d44339214676a88e0ee7c06d1a217",
        "date": "2014-01-03 19:28:49 -0500",
        "subject": "Working on backup rotation."
    },
    {
        "commit": "e6e995ec19f8cb01311ce0f9f2772edbc009b7d2",
        "date": "2013-12-18 22:08:49 -0500",
        "subject": "Fixed typo in config."
    },
    {
        "commit": "ba72eda700cdde982a360cdf99a4a5d367403cf4",
        "date": "2013-12-18 21:30:51 -0500",
        "subject": "Commented out dir mod time variable."
    },
    {
        "commit": "9907c8b7b74bc2b3bef76a47567c695de680a2e3",
        "date": "2013-12-17 07:47:24 -0500",
        "subject": "Set file mtime."
    },
    {
        "commit": "b1ffa9419034ef7f3b6795f64633cf3dab87d052",
        "date": "2013-12-16 21:59:22 -0500",
        "subject": "New storage structure, saved archive start/stop location."
    },
    {
        "commit": "6d992855d213edae6f1f6986226c7b9d9ad55116",
        "date": "2013-12-15 20:56:42 -0500",
        "subject": "Cleaning up start stop backup code."
    },
    {
        "commit": "0d3fa39117e17d1f7cf83927079da7fdaea826a9",
        "date": "2013-12-15 20:04:07 -0500",
        "subject": "Added start and stop backup."
    },
    {
        "commit": "1d21f4f9fa2f659d1f8e441fae00a87d4150373a",
        "date": "2013-12-15 18:18:54 -0500",
        "subject": "Added diff to commands."
    },
    {
        "commit": "31fca50eae78b777c1113957806ad8658d744235",
        "date": "2013-12-15 17:18:50 -0500",
        "subject": "Backup more or less works - no start/stop backup or archiving."
    },
    {
        "commit": "21b7a3f27a373e877f2da845f6f5ac4974d3daac",
        "date": "2013-12-14 15:02:47 -0500",
        "subject": "Added manifest load and save."
    },
    {
        "commit": "8b40ea7d598d3110c04f664b38060336c744290f",
        "date": "2013-12-14 14:03:08 -0500",
        "subject": "Tablespace names are now recorded"
    },
    {
        "commit": "2ba26ffc262404347a46211545a5a2948a3e656c",
        "date": "2013-12-14 13:14:59 -0500",
        "subject": "More refactoring."
    },
    {
        "commit": "d12773ca85fb73fedac018aecdc6ea5283ddbd2f",
        "date": "2013-12-11 20:39:07 -0500",
        "subject": "Added generic config command"
    },
    {
        "commit": "4aa480b858bba7a0114c292132f7289b726258b0",
        "date": "2013-12-11 20:13:39 -0500",
        "subject": "Cleaned up some var names."
    },
    {
        "commit": "299d402209fd4535f1d7aa8dcb32d6c440f61577",
        "date": "2013-12-11 19:57:54 -0500",
        "subject": "More cleanup"
    },
    {
        "commit": "aa6e72bb9cf9e0523db135790c2cf3097db4c97d",
        "date": "2013-12-11 19:22:41 -0500",
        "subject": "Refactoring"
    },
    {
        "commit": "0dba2ab8c7178ec592fe25a0178b5be482f6d544",
        "date": "2013-12-10 20:16:43 -0500",
        "subject": "Added backup command"
    },
    {
        "commit": "0bdccd298269113aa0454506824a230923cfbb17",
        "date": "2013-12-10 19:18:41 -0500",
        "subject": "Reversed order of tests."
    },
    {
        "commit": "f09505f60efbd715fd72b617036db4124c2b5054",
        "date": "2013-12-10 19:11:54 -0500",
        "subject": "Working on unit tests for archiving."
    },
    {
        "commit": "39989dd01c2fd77147a1b775ae6b092f3d86c65b",
        "date": "2013-12-09 17:26:47 -0500",
        "subject": "Working on manifest."
    },
    {
        "commit": "02a9a693b8881698008ba9f83cbffcc2e8be7f3f",
        "date": "2013-12-06 20:24:14 -0500",
        "subject": "Working on backup."
    },
    {
        "commit": "4d42d448e95df1c7535c3b73594483462f5f893c",
        "date": "2013-12-05 23:29:05 -0500",
        "subject": "Working on backup."
    },
    {
        "commit": "12518e72967ee6f54419f1acdb8f01b3cb2da26e",
        "date": "2013-12-05 08:59:39 -0500",
        "subject": "Working on backup."
    },
    {
        "commit": "ae6886c8e058f3a094d7fbb7544122e3e33dc935",
        "date": "2013-12-04 22:30:26 -0500",
        "subject": "Started backup command."
    },
    {
        "commit": "c9c7e340a7d89feb96d1070b45a15dd4fecfeb4d",
        "date": "2013-12-04 21:37:45 -0500",
        "subject": "Added config file."
    },
    {
        "commit": "53b2aae10640d6abb287f9c163f2b6700dc7b9de",
        "date": "2013-12-02 21:37:01 -0500",
        "subject": "Added note."
    },
    {
        "commit": "4a2b009c2e24c4c7c52849ad53358557658ee2a3",
        "date": "2013-12-02 21:34:25 -0500",
        "subject": "Removed unused include."
    },
    {
        "commit": "1e114cdc9de43efdf43ccbd1d296c01f297a2907",
        "date": "2013-12-02 21:26:32 -0500",
        "subject": "Fix comments."
    },
    {
        "commit": "9553baf540404c528b73a1608e5308b93d06d166",
        "date": "2013-12-02 21:23:10 -0500",
        "subject": "Basic error checking and options for archive-local command"
    },
    {
        "commit": "c7c049902fd87c6f4c43d25b9d60d9289a1742f5",
        "date": "2013-12-02 16:21:40 -0500",
        "subject": "Added warnings, comments, removed dead code."
    },
    {
        "commit": "5761832df5ce2e7655602d92f9d1a55a75a75bee",
        "date": "2013-12-02 15:10:18 -0500",
        "subject": "Implemented strict."
    },
    {
        "commit": "a2c98391dfe7f360de7e97f0cb06d55dbb06af3d",
        "date": "2013-12-02 14:34:37 -0500",
        "subject": "Starting on configuration."
    },
    {
        "commit": "2be8c5d9e7cef1256bb9f530d0594aec8bbf1351",
        "date": "2013-11-23 20:05:04 -0500",
        "subject": "Working on unit tests."
    },
    {
        "commit": "5d0251be2f05dbb44063b874a62057040dcc0f66",
        "date": "2013-11-23 19:16:09 -0500",
        "subject": "Working on archive-local and beefing up unit tests."
    },
    {
        "commit": "8b37786e5b640c7a1c270388ac1158cce45ebf72",
        "date": "2013-11-22 23:24:37 -0500",
        "subject": "Now connecting to db."
    },
    {
        "commit": "8db52c115a18f690d42db975ee1bb28363b5135f",
        "date": "2013-11-22 17:29:01 -0500",
        "subject": "Fixed whitespace."
    },
    {
        "commit": "d86e7eb6276bbe1df025c372690c19da8133c4bb",
        "date": "2013-11-20 22:30:26 -0500",
        "subject": "Added checksums."
    },
    {
        "commit": "bc46aefe61871e27281b9b8c9ffc185c8e2846af",
        "date": "2013-11-20 22:24:30 -0500",
        "subject": "Fixed for OSX.  Do not every use TextEditor on code!"
    },
    {
        "commit": "e67821a23096f4788f6bef71e7d4d361b7d9858f",
        "date": "2013-11-20 21:49:07 -0500",
        "subject": "Working on OSX port."
    },
    {
        "commit": "9ce37308b5a3fb81e204a37cfbe28bec968126e4",
        "date": "2013-11-17 21:48:53 -0500",
        "subject": "Working on archive-local command."
    },
    {
        "commit": "548578c8c96d304fb777c9aeb233733f97145818",
        "date": "2013-11-17 13:58:21 -0500",
        "subject": "Working on unit test."
    },
    {
        "commit": "d7283f20f9607f0a73931462d88866487500f087",
        "date": "2013-11-11 20:10:38 -0500",
        "subject": "Updated license."
    },
    {
        "commit": "4a562eb55a691c0658b2f148703afacb38587b0d",
        "date": "2013-11-11 13:08:39 -0800",
        "subject": "Initial commit"
    }
]
