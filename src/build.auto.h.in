/***********************************************************************************************************************************
Build Flags Generated by Configure
***********************************************************************************************************************************/
#include "version.h"

// Are test code and asserts disabled? NDEBUG can be confusing to work with because, when debugging, #ifndef NDEBUG must be used for
// #defines, so also #define DEBUG in this case to make #ifdefs simpler.
#undef NDEBUG

#ifndef NDEBUG
    #define DEBUG
#endif

// Does the compiler provide _Static_assert()?
#undef HAVE_STATIC_ASSERT

// Does the compiler provide __builtin_types_compatible_p()?
#undef HAVE_BUILTIN_TYPES_COMPATIBLE_P

// Is liblz4 present?
#undef HAVE_LIBLZ4

// Is libzstd present?
#undef HAVE_LIBZST

// Configuration path
#undef CFGOPTDEF_CONFIG_PATH

// Indicate that a function does not return
#define FN_NO_RETURN __attribute__((__noreturn__))
